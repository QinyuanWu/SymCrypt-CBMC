CBMC version 6.0.1 (cbmc-6.0.1) 64-bit x86_64 linux
Reading GOTO program from file ./gotos/SymCryptMd2_harness.goto
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Generic Property Instrumentation
Starting Bounded Model Checking
Passing problem to propositional reduction
converting SSA
Running propositional reduction
SAT checker: instance is SATISFIABLE
Running propositional reduction
SAT checker: instance is SATISFIABLE
Running propositional reduction
SAT checker: instance is SATISFIABLE
Running propositional reduction
SAT checker: instance is SATISFIABLE
Running propositional reduction
SAT checker: instance is SATISFIABLE
Running propositional reduction
SAT checker: instance is SATISFIABLE
Running propositional reduction
SAT checker: instance is SATISFIABLE
Running propositional reduction
SAT checker: instance is SATISFIABLE
Running propositional reduction
SAT checker: instance is SATISFIABLE
Running propositional reduction
SAT checker: instance is SATISFIABLE
Running propositional reduction
SAT checker: instance is SATISFIABLE
Running propositional reduction
SAT checker: instance is SATISFIABLE
Running propositional reduction
SAT checker: instance is SATISFIABLE
Running propositional reduction
SAT checker: instance is SATISFIABLE
Running propositional reduction
SAT checker: instance is SATISFIABLE
Running propositional reduction
SAT checker: instance is UNSATISFIABLE

** Results:
/home/jiggly/SymCrypt-CBMC/CBMC/proofs/SymCryptMd2/SymCryptMd2_harness.c function SymCryptWipeAsm
[SymCryptWipeAsm.assigns.1] line 48 Check that p is assignable: SUCCESS
[SymCryptWipeAsm.precondition_instance.1] line 49 memset destination region writeable: SUCCESS

/home/jiggly/SymCrypt-CBMC/CBMC/proofs/SymCryptMd2/SymCryptMd2_harness.c function harness
[harness.assigns.1] line 34 Check that return_value_malloc is assignable: SUCCESS
[harness.assigns.2] line 34 Check that pbData is assignable: SUCCESS
[harness.precondition_instance.1] line 40 free argument must be NULL or valid pointer: SUCCESS
[harness.precondition_instance.2] line 40 free argument must be dynamic object: SUCCESS
[harness.precondition_instance.3] line 40 free argument has offset zero: SUCCESS
[harness.precondition_instance.4] line 40 double free: SUCCESS
[harness.precondition_instance.5] line 40 free called for new[] object: SUCCESS
[harness.precondition_instance.6] line 40 free called for stack-allocated object: SUCCESS

/home/jiggly/SymCrypt-CBMC/inc/symcrypt_internal.h function SymCryptWipeKnownSize
[SymCryptWipeKnownSize.assigns.1] line 2964 Check that pb is assignable: SUCCESS
[SymCryptWipeKnownSize.assigns.2] line 2977 Check that cbData is assignable: SUCCESS
[SymCryptWipeKnownSize.assigns.3] line 2978 Check that *((volatile BYTE *)(volatile BYTE *)&pb[(signed long int)cbData]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.1] line 2978 dereference failure: pointer NULL in *((volatile BYTE *)(volatile BYTE *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.2] line 2978 dereference failure: pointer invalid in *((volatile BYTE *)(volatile BYTE *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.3] line 2978 dereference failure: deallocated dynamic object in *((volatile BYTE *)(volatile BYTE *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.4] line 2978 dereference failure: dead object in *((volatile BYTE *)(volatile BYTE *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.5] line 2978 dereference failure: pointer outside object bounds in *((volatile BYTE *)(volatile BYTE *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.6] line 2978 dereference failure: invalid integer address in *((volatile BYTE *)(volatile BYTE *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.assigns.4] line 2982 Check that cbData is assignable: SUCCESS
[SymCryptWipeKnownSize.assigns.5] line 2983 Check that *((volatile UINT16 *)(volatile UINT16 *)&pb[(signed long int)cbData]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.7] line 2983 dereference failure: pointer NULL in *((volatile UINT16 *)(volatile UINT16 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.8] line 2983 dereference failure: pointer invalid in *((volatile UINT16 *)(volatile UINT16 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.9] line 2983 dereference failure: deallocated dynamic object in *((volatile UINT16 *)(volatile UINT16 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.10] line 2983 dereference failure: dead object in *((volatile UINT16 *)(volatile UINT16 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.11] line 2983 dereference failure: pointer outside object bounds in *((volatile UINT16 *)(volatile UINT16 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.12] line 2983 dereference failure: invalid integer address in *((volatile UINT16 *)(volatile UINT16 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.assigns.6] line 2987 Check that cbData is assignable: SUCCESS
[SymCryptWipeKnownSize.assigns.7] line 2988 Check that *((volatile UINT32 *)(volatile UINT32 *)&pb[(signed long int)cbData]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.13] line 2988 dereference failure: pointer NULL in *((volatile UINT32 *)(volatile UINT32 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.14] line 2988 dereference failure: pointer invalid in *((volatile UINT32 *)(volatile UINT32 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.15] line 2988 dereference failure: deallocated dynamic object in *((volatile UINT32 *)(volatile UINT32 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.16] line 2988 dereference failure: dead object in *((volatile UINT32 *)(volatile UINT32 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.17] line 2988 dereference failure: pointer outside object bounds in *((volatile UINT32 *)(volatile UINT32 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.18] line 2988 dereference failure: invalid integer address in *((volatile UINT32 *)(volatile UINT32 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.assigns.8] line 2992 Check that cbData is assignable: SUCCESS
[SymCryptWipeKnownSize.assigns.9] line 2993 Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.19] line 2993 dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.20] line 2993 dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.21] line 2993 dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.22] line 2993 dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.23] line 2993 dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.24] line 2993 dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.assigns.10] line 2997 Check that cbData is assignable: SUCCESS
[SymCryptWipeKnownSize.assigns.11] line 2998 Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.25] line 2998 dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.26] line 2998 dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.27] line 2998 dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.28] line 2998 dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.29] line 2998 dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.30] line 2998 dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.assigns.12] line 2999 Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.31] line 2999 dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.32] line 2999 dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.33] line 2999 dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.34] line 2999 dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.35] line 2999 dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.36] line 2999 dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.assigns.13] line 3003 Check that cbData is assignable: SUCCESS
[SymCryptWipeKnownSize.assigns.14] line 3004 Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.37] line 3004 dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.38] line 3004 dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.39] line 3004 dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.40] line 3004 dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.41] line 3004 dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.42] line 3004 dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.assigns.15] line 3005 Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.43] line 3005 dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.44] line 3005 dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.45] line 3005 dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.46] line 3005 dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.47] line 3005 dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.48] line 3005 dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.assigns.16] line 3006 Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.49] line 3006 dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.50] line 3006 dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.51] line 3006 dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.52] line 3006 dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.53] line 3006 dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.54] line 3006 dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)]): SUCCESS
[SymCryptWipeKnownSize.assigns.17] line 3007 Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.55] line 3007 dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.56] line 3007 dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.57] line 3007 dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.58] line 3007 dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.59] line 3007 dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.60] line 3007 dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)]): SUCCESS
[SymCryptWipeKnownSize.assigns.18] line 3012 Check that cbData is assignable: SUCCESS
[SymCryptWipeKnownSize.assigns.19] line 3013 Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.61] line 3013 dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.62] line 3013 dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.63] line 3013 dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.64] line 3013 dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.65] line 3013 dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.66] line 3013 dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]): SUCCESS
[SymCryptWipeKnownSize.assigns.20] line 3014 Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.67] line 3014 dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.68] line 3014 dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.69] line 3014 dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.70] line 3014 dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.71] line 3014 dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.72] line 3014 dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]): SUCCESS
[SymCryptWipeKnownSize.assigns.21] line 3015 Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.73] line 3015 dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.74] line 3015 dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.75] line 3015 dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.76] line 3015 dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.77] line 3015 dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.78] line 3015 dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)]): SUCCESS
[SymCryptWipeKnownSize.assigns.22] line 3016 Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.79] line 3016 dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.80] line 3016 dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.81] line 3016 dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.82] line 3016 dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.83] line 3016 dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.84] line 3016 dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)]): SUCCESS
[SymCryptWipeKnownSize.assigns.23] line 3017 Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)32)]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.85] line 3017 dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)32)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.86] line 3017 dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)32)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.87] line 3017 dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)32)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.88] line 3017 dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)32)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.89] line 3017 dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)32)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.90] line 3017 dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)32)]): SUCCESS
[SymCryptWipeKnownSize.assigns.24] line 3018 Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)40)]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.91] line 3018 dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)40)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.92] line 3018 dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)40)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.93] line 3018 dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)40)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.94] line 3018 dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)40)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.95] line 3018 dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)40)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.96] line 3018 dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)40)]): SUCCESS
[SymCryptWipeKnownSize.assigns.25] line 3019 Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)48)]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.97] line 3019 dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)48)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.98] line 3019 dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)48)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.99] line 3019 dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)48)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.100] line 3019 dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)48)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.101] line 3019 dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)48)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.102] line 3019 dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)48)]): SUCCESS
[SymCryptWipeKnownSize.assigns.26] line 3020 Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)56)]) is assignable: SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.103] line 3020 dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)56)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.104] line 3020 dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)56)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.105] line 3020 dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)56)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.106] line 3020 dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)56)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.107] line 3020 dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)56)]): SUCCESS
[SymCryptWipeKnownSize.pointer_dereference.108] line 3020 dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)56)]): SUCCESS

/home/jiggly/SymCrypt-CBMC/lib/hash.c function SymCryptHashAppendInternal
[SymCryptHashAppendInternal.assigns.1] line 22 Check that pState->dataLengthL is assignable: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.1] line 22 dereference failure: pointer NULL in pState->dataLengthL: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.2] line 22 dereference failure: pointer invalid in pState->dataLengthL: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.3] line 22 dereference failure: deallocated dynamic object in pState->dataLengthL: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.4] line 22 dereference failure: dead object in pState->dataLengthL: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.5] line 22 dereference failure: pointer outside object bounds in pState->dataLengthL: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.6] line 22 dereference failure: invalid integer address in pState->dataLengthL: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.7] line 23 dereference failure: pointer NULL in pState->dataLengthL: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.8] line 23 dereference failure: pointer invalid in pState->dataLengthL: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.9] line 23 dereference failure: deallocated dynamic object in pState->dataLengthL: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.10] line 23 dereference failure: dead object in pState->dataLengthL: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.11] line 23 dereference failure: pointer outside object bounds in pState->dataLengthL: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.12] line 23 dereference failure: invalid integer address in pState->dataLengthL: SUCCESS
[SymCryptHashAppendInternal.assigns.2] line 24 Check that pState->dataLengthH is assignable: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.13] line 24 dereference failure: pointer NULL in pState->dataLengthH: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.14] line 24 dereference failure: pointer invalid in pState->dataLengthH: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.15] line 24 dereference failure: deallocated dynamic object in pState->dataLengthH: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.16] line 24 dereference failure: dead object in pState->dataLengthH: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.17] line 24 dereference failure: pointer outside object bounds in pState->dataLengthH: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.18] line 24 dereference failure: invalid integer address in pState->dataLengthH: SUCCESS
[SymCryptHashAppendInternal.assigns.3] line 27 Check that bytesInBuffer is assignable: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.19] line 27 dereference failure: pointer NULL in pState->bytesInBuffer: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.20] line 27 dereference failure: pointer invalid in pState->bytesInBuffer: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.21] line 27 dereference failure: deallocated dynamic object in pState->bytesInBuffer: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.22] line 27 dereference failure: dead object in pState->bytesInBuffer: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.23] line 27 dereference failure: pointer outside object bounds in pState->bytesInBuffer: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.24] line 27 dereference failure: invalid integer address in pState->bytesInBuffer: SUCCESS
[SymCryptHashAppendInternal.assigns.4] line 36 Check that freeInBuffer is assignable: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.25] line 36 dereference failure: pointer NULL in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.26] line 36 dereference failure: pointer invalid in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.27] line 36 dereference failure: deallocated dynamic object in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.28] line 36 dereference failure: dead object in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.29] line 36 dereference failure: pointer outside object bounds in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.30] line 36 dereference failure: invalid integer address in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.precondition_instance.1] line 49 memcpy src/dst overlap: SUCCESS
[SymCryptHashAppendInternal.precondition_instance.2] line 49 memcpy source region readable: SUCCESS
[SymCryptHashAppendInternal.precondition_instance.3] line 49 memcpy destination region writeable: SUCCESS
[SymCryptHashAppendInternal.assigns.5] line 50 Check that pbData is assignable: SUCCESS
[SymCryptHashAppendInternal.assigns.6] line 51 Check that cbData is assignable: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.31] line 52 dereference failure: pointer NULL in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.32] line 52 dereference failure: pointer invalid in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.33] line 52 dereference failure: deallocated dynamic object in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.34] line 52 dereference failure: dead object in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.35] line 52 dereference failure: pointer outside object bounds in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.36] line 52 dereference failure: invalid integer address in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.37] line 52 dereference failure: pointer NULL in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.38] line 52 dereference failure: pointer invalid in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.39] line 52 dereference failure: deallocated dynamic object in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.40] line 52 dereference failure: dead object in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.41] line 52 dereference failure: pointer outside object bounds in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.42] line 52 dereference failure: invalid integer address in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.43] line 52 dereferenced function pointer must be SymCryptMd2AppendBlocks: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.44] line 52 dereference failure: pointer NULL in pHash->chainOffset: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.45] line 52 dereference failure: pointer invalid in pHash->chainOffset: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.46] line 52 dereference failure: deallocated dynamic object in pHash->chainOffset: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.47] line 52 dereference failure: dead object in pHash->chainOffset: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.48] line 52 dereference failure: pointer outside object bounds in pHash->chainOffset: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.49] line 52 dereference failure: invalid integer address in pHash->chainOffset: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.50] line 52 dereference failure: pointer NULL in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.51] line 52 dereference failure: pointer invalid in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.52] line 52 dereference failure: deallocated dynamic object in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.53] line 52 dereference failure: dead object in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.54] line 52 dereference failure: pointer outside object bounds in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.55] line 52 dereference failure: invalid integer address in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.assigns.7] line 54 Check that bytesInBuffer is assignable: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.56] line 61 dereference failure: pointer NULL in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.57] line 61 dereference failure: pointer invalid in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.58] line 61 dereference failure: deallocated dynamic object in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.59] line 61 dereference failure: dead object in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.60] line 61 dereference failure: pointer outside object bounds in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.61] line 61 dereference failure: invalid integer address in pHash->inputBlockSize: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.62] line 63 dereference failure: pointer NULL in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.63] line 63 dereference failure: pointer invalid in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.64] line 63 dereference failure: deallocated dynamic object in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.65] line 63 dereference failure: dead object in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.66] line 63 dereference failure: pointer outside object bounds in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.67] line 63 dereference failure: invalid integer address in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.68] line 63 dereference failure: pointer NULL in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.69] line 63 dereference failure: pointer invalid in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.70] line 63 dereference failure: deallocated dynamic object in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.71] line 63 dereference failure: dead object in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.72] line 63 dereference failure: pointer outside object bounds in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.73] line 63 dereference failure: invalid integer address in pHash->appendBlockFunc: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.74] line 63 dereferenced function pointer must be SymCryptMd2AppendBlocks: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.75] line 63 dereference failure: pointer NULL in pHash->chainOffset: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.76] line 63 dereference failure: pointer invalid in pHash->chainOffset: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.77] line 63 dereference failure: deallocated dynamic object in pHash->chainOffset: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.78] line 63 dereference failure: dead object in pHash->chainOffset: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.79] line 63 dereference failure: pointer outside object bounds in pHash->chainOffset: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.80] line 63 dereference failure: invalid integer address in pHash->chainOffset: SUCCESS
[SymCryptHashAppendInternal.assigns.8] line 65 Check that pbData is assignable: SUCCESS
[SymCryptHashAppendInternal.assigns.9] line 66 Check that cbData is assignable: SUCCESS
[SymCryptHashAppendInternal.precondition_instance.4] line 76 memcpy src/dst overlap: SUCCESS
[SymCryptHashAppendInternal.precondition_instance.5] line 76 memcpy source region readable: SUCCESS
[SymCryptHashAppendInternal.precondition_instance.6] line 76 memcpy destination region writeable: SUCCESS
[SymCryptHashAppendInternal.assigns.10] line 77 Check that bytesInBuffer is assignable: SUCCESS
[SymCryptHashAppendInternal.assigns.11] line 80 Check that pState->bytesInBuffer is assignable: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.81] line 80 dereference failure: pointer NULL in pState->bytesInBuffer: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.82] line 80 dereference failure: pointer invalid in pState->bytesInBuffer: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.83] line 80 dereference failure: deallocated dynamic object in pState->bytesInBuffer: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.84] line 80 dereference failure: dead object in pState->bytesInBuffer: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.85] line 80 dereference failure: pointer outside object bounds in pState->bytesInBuffer: SUCCESS
[SymCryptHashAppendInternal.pointer_dereference.86] line 80 dereference failure: invalid integer address in pState->bytesInBuffer: SUCCESS

/home/jiggly/SymCrypt-CBMC/lib/libmain.c function SymCryptXorBytes
[SymCryptXorBytes.assigns.1] line 200 Check that s1 is assignable: UNKNOWN
[SymCryptXorBytes.assigns.2] line 201 Check that s2 is assignable: UNKNOWN
[SymCryptXorBytes.assigns.3] line 202 Check that d is assignable: UNKNOWN
[SymCryptXorBytes.assigns.4] line 204 Check that d[(signed long int)0] is assignable: UNKNOWN
[SymCryptXorBytes.pointer_dereference.1] line 204 dereference failure: pointer NULL in d[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.2] line 204 dereference failure: pointer invalid in d[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.3] line 204 dereference failure: deallocated dynamic object in d[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.4] line 204 dereference failure: dead object in d[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.5] line 204 dereference failure: pointer outside object bounds in d[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.6] line 204 dereference failure: invalid integer address in d[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.7] line 204 dereference failure: pointer NULL in s1[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.8] line 204 dereference failure: pointer invalid in s1[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.9] line 204 dereference failure: deallocated dynamic object in s1[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.10] line 204 dereference failure: dead object in s1[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.11] line 204 dereference failure: pointer outside object bounds in s1[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.12] line 204 dereference failure: invalid integer address in s1[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.13] line 204 dereference failure: pointer NULL in s2[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.14] line 204 dereference failure: pointer invalid in s2[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.15] line 204 dereference failure: deallocated dynamic object in s2[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.16] line 204 dereference failure: dead object in s2[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.17] line 204 dereference failure: pointer outside object bounds in s2[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.18] line 204 dereference failure: invalid integer address in s2[(signed long int)0]: UNKNOWN
[SymCryptXorBytes.assigns.5] line 205 Check that d[(signed long int)1] is assignable: UNKNOWN
[SymCryptXorBytes.pointer_dereference.19] line 205 dereference failure: pointer NULL in d[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.20] line 205 dereference failure: pointer invalid in d[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.21] line 205 dereference failure: deallocated dynamic object in d[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.22] line 205 dereference failure: dead object in d[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.23] line 205 dereference failure: pointer outside object bounds in d[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.24] line 205 dereference failure: invalid integer address in d[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.25] line 205 dereference failure: pointer NULL in s1[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.26] line 205 dereference failure: pointer invalid in s1[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.27] line 205 dereference failure: deallocated dynamic object in s1[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.28] line 205 dereference failure: dead object in s1[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.29] line 205 dereference failure: pointer outside object bounds in s1[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.30] line 205 dereference failure: invalid integer address in s1[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.31] line 205 dereference failure: pointer NULL in s2[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.32] line 205 dereference failure: pointer invalid in s2[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.33] line 205 dereference failure: deallocated dynamic object in s2[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.34] line 205 dereference failure: dead object in s2[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.35] line 205 dereference failure: pointer outside object bounds in s2[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.pointer_dereference.36] line 205 dereference failure: invalid integer address in s2[(signed long int)1]: UNKNOWN
[SymCryptXorBytes.loop_assigns.1] line 209 Check assigns clause inclusion for loop SymCryptXorBytes.0: SUCCESS
[SymCryptXorBytes.loop_assigns.2] line 209 Check assigns clause inclusion for loop SymCryptXorBytes.0: UNKNOWN
[SymCryptXorBytes.loop_decreases.1] line 209 Check variant decreases after step for loop SymCryptXorBytes.0: UNKNOWN
[SymCryptXorBytes.loop_invariant_base.1] line 209 Check invariant before entry for loop SymCryptXorBytes.0: SUCCESS
[SymCryptXorBytes.loop_invariant_base.2] line 209 Check invariant before entry for loop SymCryptXorBytes.0: UNKNOWN
[SymCryptXorBytes.loop_invariant_step.1] line 209 Check invariant after step for loop SymCryptXorBytes.0: UNKNOWN
[SymCryptXorBytes.loop_step_unwinding.1] line 209 Check step was unwound for loop SymCryptXorBytes.0: UNKNOWN
[SymCryptXorBytes.pointer_dereference.55] line 210 dereference failure: pointer NULL in *__havoc_target: UNKNOWN
[SymCryptXorBytes.pointer_dereference.56] line 210 dereference failure: pointer invalid in *__havoc_target: UNKNOWN
[SymCryptXorBytes.pointer_dereference.57] line 210 dereference failure: deallocated dynamic object in *__havoc_target: UNKNOWN
[SymCryptXorBytes.pointer_dereference.58] line 210 dereference failure: dead object in *__havoc_target: UNKNOWN
[SymCryptXorBytes.pointer_dereference.59] line 210 dereference failure: pointer outside object bounds in *__havoc_target: UNKNOWN
[SymCryptXorBytes.pointer_dereference.60] line 210 dereference failure: invalid integer address in *__havoc_target: UNKNOWN
[SymCryptXorBytes.pointer_dereference.61] line 210 dereference failure: pointer NULL in *__havoc_target$0: UNKNOWN
[SymCryptXorBytes.pointer_dereference.62] line 210 dereference failure: pointer invalid in *__havoc_target$0: UNKNOWN
[SymCryptXorBytes.pointer_dereference.63] line 210 dereference failure: deallocated dynamic object in *__havoc_target$0: UNKNOWN
[SymCryptXorBytes.pointer_dereference.64] line 210 dereference failure: dead object in *__havoc_target$0: UNKNOWN
[SymCryptXorBytes.pointer_dereference.65] line 210 dereference failure: pointer outside object bounds in *__havoc_target$0: UNKNOWN
[SymCryptXorBytes.pointer_dereference.66] line 210 dereference failure: invalid integer address in *__havoc_target$0: UNKNOWN
[SymCryptXorBytes.pointer_dereference.67] line 210 dereference failure: pointer NULL in *__havoc_target$1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.68] line 210 dereference failure: pointer invalid in *__havoc_target$1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.69] line 210 dereference failure: deallocated dynamic object in *__havoc_target$1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.70] line 210 dereference failure: dead object in *__havoc_target$1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.71] line 210 dereference failure: pointer outside object bounds in *__havoc_target$1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.72] line 210 dereference failure: invalid integer address in *__havoc_target$1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.73] line 210 dereference failure: pointer NULL in *__havoc_target$2: UNKNOWN
[SymCryptXorBytes.pointer_dereference.74] line 210 dereference failure: pointer invalid in *__havoc_target$2: UNKNOWN
[SymCryptXorBytes.pointer_dereference.75] line 210 dereference failure: deallocated dynamic object in *__havoc_target$2: UNKNOWN
[SymCryptXorBytes.pointer_dereference.76] line 210 dereference failure: dead object in *__havoc_target$2: UNKNOWN
[SymCryptXorBytes.pointer_dereference.77] line 210 dereference failure: pointer outside object bounds in *__havoc_target$2: UNKNOWN
[SymCryptXorBytes.pointer_dereference.78] line 210 dereference failure: invalid integer address in *__havoc_target$2: UNKNOWN
[SymCryptXorBytes.assigns.6] line 214 Check that *((UINT64 *)pbResult) is assignable: UNKNOWN
[SymCryptXorBytes.assigns.11] line 214 Check that *((UINT64 *)pbResult) is assignable: UNKNOWN
[SymCryptXorBytes.pointer_dereference.37] line 214 dereference failure: pointer NULL in *((UINT64 *)pbResult): UNKNOWN
[SymCryptXorBytes.pointer_dereference.38] line 214 dereference failure: pointer invalid in *((UINT64 *)pbResult): UNKNOWN
[SymCryptXorBytes.pointer_dereference.39] line 214 dereference failure: deallocated dynamic object in *((UINT64 *)pbResult): UNKNOWN
[SymCryptXorBytes.pointer_dereference.40] line 214 dereference failure: dead object in *((UINT64 *)pbResult): UNKNOWN
[SymCryptXorBytes.pointer_dereference.41] line 214 dereference failure: pointer outside object bounds in *((UINT64 *)pbResult): UNKNOWN
[SymCryptXorBytes.pointer_dereference.42] line 214 dereference failure: invalid integer address in *((UINT64 *)pbResult): UNKNOWN
[SymCryptXorBytes.pointer_dereference.43] line 214 dereference failure: pointer NULL in *((UINT64 *)pbSrc1): UNKNOWN
[SymCryptXorBytes.pointer_dereference.44] line 214 dereference failure: pointer invalid in *((UINT64 *)pbSrc1): UNKNOWN
[SymCryptXorBytes.pointer_dereference.45] line 214 dereference failure: deallocated dynamic object in *((UINT64 *)pbSrc1): UNKNOWN
[SymCryptXorBytes.pointer_dereference.46] line 214 dereference failure: dead object in *((UINT64 *)pbSrc1): UNKNOWN
[SymCryptXorBytes.pointer_dereference.47] line 214 dereference failure: pointer outside object bounds in *((UINT64 *)pbSrc1): UNKNOWN
[SymCryptXorBytes.pointer_dereference.48] line 214 dereference failure: invalid integer address in *((UINT64 *)pbSrc1): UNKNOWN
[SymCryptXorBytes.pointer_dereference.49] line 214 dereference failure: pointer NULL in *((UINT64 *)pbSrc2): UNKNOWN
[SymCryptXorBytes.pointer_dereference.50] line 214 dereference failure: pointer invalid in *((UINT64 *)pbSrc2): UNKNOWN
[SymCryptXorBytes.pointer_dereference.51] line 214 dereference failure: deallocated dynamic object in *((UINT64 *)pbSrc2): UNKNOWN
[SymCryptXorBytes.pointer_dereference.52] line 214 dereference failure: dead object in *((UINT64 *)pbSrc2): UNKNOWN
[SymCryptXorBytes.pointer_dereference.53] line 214 dereference failure: pointer outside object bounds in *((UINT64 *)pbSrc2): UNKNOWN
[SymCryptXorBytes.pointer_dereference.54] line 214 dereference failure: invalid integer address in *((UINT64 *)pbSrc2): UNKNOWN
[SymCryptXorBytes.pointer_dereference.79] line 214 dereference failure: pointer NULL in *((UINT64 *)pbResult): UNKNOWN
[SymCryptXorBytes.pointer_dereference.80] line 214 dereference failure: pointer invalid in *((UINT64 *)pbResult): UNKNOWN
[SymCryptXorBytes.pointer_dereference.81] line 214 dereference failure: deallocated dynamic object in *((UINT64 *)pbResult): UNKNOWN
[SymCryptXorBytes.pointer_dereference.82] line 214 dereference failure: dead object in *((UINT64 *)pbResult): UNKNOWN
[SymCryptXorBytes.pointer_dereference.83] line 214 dereference failure: pointer outside object bounds in *((UINT64 *)pbResult): UNKNOWN
[SymCryptXorBytes.pointer_dereference.84] line 214 dereference failure: invalid integer address in *((UINT64 *)pbResult): UNKNOWN
[SymCryptXorBytes.pointer_dereference.85] line 214 dereference failure: pointer NULL in *((UINT64 *)pbSrc1): UNKNOWN
[SymCryptXorBytes.pointer_dereference.86] line 214 dereference failure: pointer invalid in *((UINT64 *)pbSrc1): UNKNOWN
[SymCryptXorBytes.pointer_dereference.87] line 214 dereference failure: deallocated dynamic object in *((UINT64 *)pbSrc1): UNKNOWN
[SymCryptXorBytes.pointer_dereference.88] line 214 dereference failure: dead object in *((UINT64 *)pbSrc1): UNKNOWN
[SymCryptXorBytes.pointer_dereference.89] line 214 dereference failure: pointer outside object bounds in *((UINT64 *)pbSrc1): UNKNOWN
[SymCryptXorBytes.pointer_dereference.90] line 214 dereference failure: invalid integer address in *((UINT64 *)pbSrc1): UNKNOWN
[SymCryptXorBytes.pointer_dereference.91] line 214 dereference failure: pointer NULL in *((UINT64 *)pbSrc2): UNKNOWN
[SymCryptXorBytes.pointer_dereference.92] line 214 dereference failure: pointer invalid in *((UINT64 *)pbSrc2): UNKNOWN
[SymCryptXorBytes.pointer_dereference.93] line 214 dereference failure: deallocated dynamic object in *((UINT64 *)pbSrc2): UNKNOWN
[SymCryptXorBytes.pointer_dereference.94] line 214 dereference failure: dead object in *((UINT64 *)pbSrc2): UNKNOWN
[SymCryptXorBytes.pointer_dereference.95] line 214 dereference failure: pointer outside object bounds in *((UINT64 *)pbSrc2): UNKNOWN
[SymCryptXorBytes.pointer_dereference.96] line 214 dereference failure: invalid integer address in *((UINT64 *)pbSrc2): UNKNOWN
[SymCryptXorBytes.assigns.7] line 215 Check that pbSrc1 is assignable: UNKNOWN
[SymCryptXorBytes.assigns.12] line 215 Check that pbSrc1 is assignable: UNKNOWN
[SymCryptXorBytes.assigns.8] line 216 Check that pbSrc2 is assignable: UNKNOWN
[SymCryptXorBytes.assigns.13] line 216 Check that pbSrc2 is assignable: UNKNOWN
[SymCryptXorBytes.assigns.9] line 217 Check that pbResult is assignable: UNKNOWN
[SymCryptXorBytes.assigns.14] line 217 Check that pbResult is assignable: UNKNOWN
[SymCryptXorBytes.assigns.10] line 218 Check that cbBytes is assignable: UNKNOWN
[SymCryptXorBytes.assigns.15] line 218 Check that cbBytes is assignable: UNKNOWN
[SymCryptXorBytes.loop_assigns.3] line 221 Check assigns clause inclusion for loop SymCryptXorBytes.1: SUCCESS
[SymCryptXorBytes.loop_assigns.4] line 221 Check assigns clause inclusion for loop SymCryptXorBytes.1: UNKNOWN
[SymCryptXorBytes.loop_decreases.2] line 221 Check variant decreases after step for loop SymCryptXorBytes.1: UNKNOWN
[SymCryptXorBytes.loop_invariant_base.3] line 221 Check invariant before entry for loop SymCryptXorBytes.1: SUCCESS
[SymCryptXorBytes.loop_invariant_base.4] line 221 Check invariant before entry for loop SymCryptXorBytes.1: UNKNOWN
[SymCryptXorBytes.loop_invariant_step.2] line 221 Check invariant after step for loop SymCryptXorBytes.1: UNKNOWN
[SymCryptXorBytes.loop_step_unwinding.2] line 221 Check step was unwound for loop SymCryptXorBytes.1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.115] line 222 dereference failure: pointer NULL in *__havoc_target$3: UNKNOWN
[SymCryptXorBytes.pointer_dereference.116] line 222 dereference failure: pointer invalid in *__havoc_target$3: UNKNOWN
[SymCryptXorBytes.pointer_dereference.117] line 222 dereference failure: deallocated dynamic object in *__havoc_target$3: UNKNOWN
[SymCryptXorBytes.pointer_dereference.118] line 222 dereference failure: dead object in *__havoc_target$3: UNKNOWN
[SymCryptXorBytes.pointer_dereference.119] line 222 dereference failure: pointer outside object bounds in *__havoc_target$3: UNKNOWN
[SymCryptXorBytes.pointer_dereference.120] line 222 dereference failure: invalid integer address in *__havoc_target$3: UNKNOWN
[SymCryptXorBytes.pointer_dereference.121] line 222 dereference failure: pointer NULL in *__havoc_target$4: UNKNOWN
[SymCryptXorBytes.pointer_dereference.122] line 222 dereference failure: pointer invalid in *__havoc_target$4: UNKNOWN
[SymCryptXorBytes.pointer_dereference.123] line 222 dereference failure: deallocated dynamic object in *__havoc_target$4: UNKNOWN
[SymCryptXorBytes.pointer_dereference.124] line 222 dereference failure: dead object in *__havoc_target$4: UNKNOWN
[SymCryptXorBytes.pointer_dereference.125] line 222 dereference failure: pointer outside object bounds in *__havoc_target$4: UNKNOWN
[SymCryptXorBytes.pointer_dereference.126] line 222 dereference failure: invalid integer address in *__havoc_target$4: UNKNOWN
[SymCryptXorBytes.pointer_dereference.127] line 222 dereference failure: pointer NULL in *__havoc_target$5: UNKNOWN
[SymCryptXorBytes.pointer_dereference.128] line 222 dereference failure: pointer invalid in *__havoc_target$5: UNKNOWN
[SymCryptXorBytes.pointer_dereference.129] line 222 dereference failure: deallocated dynamic object in *__havoc_target$5: UNKNOWN
[SymCryptXorBytes.pointer_dereference.130] line 222 dereference failure: dead object in *__havoc_target$5: UNKNOWN
[SymCryptXorBytes.pointer_dereference.131] line 222 dereference failure: pointer outside object bounds in *__havoc_target$5: UNKNOWN
[SymCryptXorBytes.pointer_dereference.132] line 222 dereference failure: invalid integer address in *__havoc_target$5: UNKNOWN
[SymCryptXorBytes.pointer_dereference.133] line 222 dereference failure: pointer NULL in *__havoc_target$6: UNKNOWN
[SymCryptXorBytes.pointer_dereference.134] line 222 dereference failure: pointer invalid in *__havoc_target$6: UNKNOWN
[SymCryptXorBytes.pointer_dereference.135] line 222 dereference failure: deallocated dynamic object in *__havoc_target$6: UNKNOWN
[SymCryptXorBytes.pointer_dereference.136] line 222 dereference failure: dead object in *__havoc_target$6: UNKNOWN
[SymCryptXorBytes.pointer_dereference.137] line 222 dereference failure: pointer outside object bounds in *__havoc_target$6: UNKNOWN
[SymCryptXorBytes.pointer_dereference.138] line 222 dereference failure: invalid integer address in *__havoc_target$6: UNKNOWN
[SymCryptXorBytes.assigns.16] line 226 Check that *pbResult is assignable: UNKNOWN
[SymCryptXorBytes.assigns.21] line 226 Check that *pbResult is assignable: UNKNOWN
[SymCryptXorBytes.pointer_dereference.97] line 226 dereference failure: pointer NULL in *pbResult: UNKNOWN
[SymCryptXorBytes.pointer_dereference.98] line 226 dereference failure: pointer invalid in *pbResult: UNKNOWN
[SymCryptXorBytes.pointer_dereference.99] line 226 dereference failure: deallocated dynamic object in *pbResult: UNKNOWN
[SymCryptXorBytes.pointer_dereference.100] line 226 dereference failure: dead object in *pbResult: UNKNOWN
[SymCryptXorBytes.pointer_dereference.101] line 226 dereference failure: pointer outside object bounds in *pbResult: UNKNOWN
[SymCryptXorBytes.pointer_dereference.102] line 226 dereference failure: invalid integer address in *pbResult: UNKNOWN
[SymCryptXorBytes.pointer_dereference.103] line 226 dereference failure: pointer NULL in *pbSrc1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.104] line 226 dereference failure: pointer invalid in *pbSrc1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.105] line 226 dereference failure: deallocated dynamic object in *pbSrc1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.106] line 226 dereference failure: dead object in *pbSrc1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.107] line 226 dereference failure: pointer outside object bounds in *pbSrc1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.108] line 226 dereference failure: invalid integer address in *pbSrc1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.109] line 226 dereference failure: pointer NULL in *pbSrc2: UNKNOWN
[SymCryptXorBytes.pointer_dereference.110] line 226 dereference failure: pointer invalid in *pbSrc2: UNKNOWN
[SymCryptXorBytes.pointer_dereference.111] line 226 dereference failure: deallocated dynamic object in *pbSrc2: UNKNOWN
[SymCryptXorBytes.pointer_dereference.112] line 226 dereference failure: dead object in *pbSrc2: UNKNOWN
[SymCryptXorBytes.pointer_dereference.113] line 226 dereference failure: pointer outside object bounds in *pbSrc2: UNKNOWN
[SymCryptXorBytes.pointer_dereference.114] line 226 dereference failure: invalid integer address in *pbSrc2: UNKNOWN
[SymCryptXorBytes.pointer_dereference.139] line 226 dereference failure: pointer NULL in *pbResult: UNKNOWN
[SymCryptXorBytes.pointer_dereference.140] line 226 dereference failure: pointer invalid in *pbResult: UNKNOWN
[SymCryptXorBytes.pointer_dereference.141] line 226 dereference failure: deallocated dynamic object in *pbResult: UNKNOWN
[SymCryptXorBytes.pointer_dereference.142] line 226 dereference failure: dead object in *pbResult: UNKNOWN
[SymCryptXorBytes.pointer_dereference.143] line 226 dereference failure: pointer outside object bounds in *pbResult: UNKNOWN
[SymCryptXorBytes.pointer_dereference.144] line 226 dereference failure: invalid integer address in *pbResult: UNKNOWN
[SymCryptXorBytes.pointer_dereference.145] line 226 dereference failure: pointer NULL in *pbSrc1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.146] line 226 dereference failure: pointer invalid in *pbSrc1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.147] line 226 dereference failure: deallocated dynamic object in *pbSrc1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.148] line 226 dereference failure: dead object in *pbSrc1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.149] line 226 dereference failure: pointer outside object bounds in *pbSrc1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.150] line 226 dereference failure: invalid integer address in *pbSrc1: UNKNOWN
[SymCryptXorBytes.pointer_dereference.151] line 226 dereference failure: pointer NULL in *pbSrc2: UNKNOWN
[SymCryptXorBytes.pointer_dereference.152] line 226 dereference failure: pointer invalid in *pbSrc2: UNKNOWN
[SymCryptXorBytes.pointer_dereference.153] line 226 dereference failure: deallocated dynamic object in *pbSrc2: UNKNOWN
[SymCryptXorBytes.pointer_dereference.154] line 226 dereference failure: dead object in *pbSrc2: UNKNOWN
[SymCryptXorBytes.pointer_dereference.155] line 226 dereference failure: pointer outside object bounds in *pbSrc2: UNKNOWN
[SymCryptXorBytes.pointer_dereference.156] line 226 dereference failure: invalid integer address in *pbSrc2: UNKNOWN
[SymCryptXorBytes.assigns.17] line 227 Check that pbResult is assignable: UNKNOWN
[SymCryptXorBytes.assigns.22] line 227 Check that pbResult is assignable: UNKNOWN
[SymCryptXorBytes.assigns.18] line 228 Check that pbSrc1 is assignable: UNKNOWN
[SymCryptXorBytes.assigns.23] line 228 Check that pbSrc1 is assignable: UNKNOWN
[SymCryptXorBytes.assigns.19] line 229 Check that pbSrc2 is assignable: UNKNOWN
[SymCryptXorBytes.assigns.24] line 229 Check that pbSrc2 is assignable: UNKNOWN
[SymCryptXorBytes.assigns.20] line 230 Check that cbBytes is assignable: UNKNOWN
[SymCryptXorBytes.assigns.25] line 230 Check that cbBytes is assignable: UNKNOWN

/home/jiggly/SymCrypt-CBMC/lib/md2.c function SymCryptMd2AppendBlocks
[SymCryptMd2AppendBlocks.loop_assigns.1] line 160 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.3: SUCCESS
[SymCryptMd2AppendBlocks.loop_assigns.10] line 160 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.3: SUCCESS
[SymCryptMd2AppendBlocks.loop_decreases.9] line 160 Check variant decreases after step for loop SymCryptMd2AppendBlocks.3: UNKNOWN
[SymCryptMd2AppendBlocks.loop_invariant_base.1] line 160 Check invariant before entry for loop SymCryptMd2AppendBlocks.3: SUCCESS
[SymCryptMd2AppendBlocks.loop_invariant_base.10] line 160 Check invariant before entry for loop SymCryptMd2AppendBlocks.3: SUCCESS
[SymCryptMd2AppendBlocks.loop_invariant_step.9] line 160 Check invariant after step for loop SymCryptMd2AppendBlocks.3: FAILURE
[SymCryptMd2AppendBlocks.loop_step_unwinding.9] line 160 Check step was unwound for loop SymCryptMd2AppendBlocks.3: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.157] line 161 dereference failure: pointer NULL in *__havoc_target$7: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.158] line 161 dereference failure: pointer invalid in *__havoc_target$7: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.159] line 161 dereference failure: deallocated dynamic object in *__havoc_target$7: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.160] line 161 dereference failure: dead object in *__havoc_target$7: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.161] line 161 dereference failure: pointer outside object bounds in *__havoc_target$7: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.162] line 161 dereference failure: invalid integer address in *__havoc_target$7: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.163] line 161 dereference failure: pointer NULL in *__havoc_target$8: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.164] line 161 dereference failure: pointer invalid in *__havoc_target$8: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.165] line 161 dereference failure: deallocated dynamic object in *__havoc_target$8: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.166] line 161 dereference failure: dead object in *__havoc_target$8: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.167] line 161 dereference failure: pointer outside object bounds in *__havoc_target$8: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.168] line 161 dereference failure: invalid integer address in *__havoc_target$8: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.169] line 161 dereference failure: pointer NULL in *__havoc_target$9: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.170] line 161 dereference failure: pointer invalid in *__havoc_target$9: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.171] line 161 dereference failure: deallocated dynamic object in *__havoc_target$9: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.172] line 161 dereference failure: dead object in *__havoc_target$9: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.173] line 161 dereference failure: pointer outside object bounds in *__havoc_target$9: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.174] line 161 dereference failure: invalid integer address in *__havoc_target$9: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.175] line 161 dereference failure: pointer NULL in *__havoc_target$10: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.176] line 161 dereference failure: pointer invalid in *__havoc_target$10: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.177] line 161 dereference failure: deallocated dynamic object in *__havoc_target$10: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.178] line 161 dereference failure: dead object in *__havoc_target$10: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.179] line 161 dereference failure: pointer outside object bounds in *__havoc_target$10: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.180] line 161 dereference failure: invalid integer address in *__havoc_target$10: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.181] line 161 dereference failure: pointer NULL in *__havoc_target$11: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.182] line 161 dereference failure: pointer invalid in *__havoc_target$11: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.183] line 161 dereference failure: deallocated dynamic object in *__havoc_target$11: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.184] line 161 dereference failure: dead object in *__havoc_target$11: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.185] line 161 dereference failure: pointer outside object bounds in *__havoc_target$11: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.186] line 161 dereference failure: invalid integer address in *__havoc_target$11: SUCCESS
[SymCryptMd2AppendBlocks.precondition_instance.1] line 170 memcpy src/dst overlap: SUCCESS
[SymCryptMd2AppendBlocks.precondition_instance.2] line 170 memcpy source region readable: SUCCESS
[SymCryptMd2AppendBlocks.precondition_instance.3] line 170 memcpy destination region writeable: SUCCESS
[SymCryptMd2AppendBlocks.precondition_instance.4] line 170 memcpy src/dst overlap: FAILURE
[SymCryptMd2AppendBlocks.precondition_instance.5] line 170 memcpy source region readable: FAILURE
[SymCryptMd2AppendBlocks.precondition_instance.6] line 170 memcpy destination region writeable: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.1] line 176 array.C dynamic object upper bound in pChain->C[(signed long int)15]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.24] line 176 array.C dynamic object upper bound in pChain->C[(signed long int)15]: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.1] line 176 Check that L is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.31] line 176 Check that L is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.1] line 176 dereference failure: pointer NULL in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.2] line 176 dereference failure: pointer invalid in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.3] line 176 dereference failure: deallocated dynamic object in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.4] line 176 dereference failure: dead object in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.5] line 176 dereference failure: pointer outside object bounds in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.6] line 176 dereference failure: invalid integer address in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.187] line 176 dereference failure: pointer NULL in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.188] line 176 dereference failure: pointer invalid in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.189] line 176 dereference failure: deallocated dynamic object in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.190] line 176 dereference failure: dead object in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.191] line 176 dereference failure: pointer outside object bounds in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.192] line 176 dereference failure: invalid integer address in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.2] line 178 Check that j is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.5] line 178 Check that j is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.8] line 178 Check that j is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.32] line 178 Check that j is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.35] line 178 Check that j is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.38] line 178 Check that j is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.loop_assigns.2] line 178 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.0: SUCCESS
[SymCryptMd2AppendBlocks.loop_assigns.3] line 178 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.0: SUCCESS
[SymCryptMd2AppendBlocks.loop_assigns.11] line 178 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.0: SUCCESS
[SymCryptMd2AppendBlocks.loop_assigns.12] line 178 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.0: UNKNOWN
[SymCryptMd2AppendBlocks.loop_decreases.1] line 178 Check variant decreases after step for loop SymCryptMd2AppendBlocks.0: SUCCESS
[SymCryptMd2AppendBlocks.loop_decreases.5] line 178 Check variant decreases after step for loop SymCryptMd2AppendBlocks.0: UNKNOWN
[SymCryptMd2AppendBlocks.loop_invariant_base.2] line 178 Check invariant before entry for loop SymCryptMd2AppendBlocks.0: SUCCESS
[SymCryptMd2AppendBlocks.loop_invariant_base.3] line 178 Check invariant before entry for loop SymCryptMd2AppendBlocks.0: SUCCESS
[SymCryptMd2AppendBlocks.loop_invariant_base.11] line 178 Check invariant before entry for loop SymCryptMd2AppendBlocks.0: SUCCESS
[SymCryptMd2AppendBlocks.loop_invariant_base.12] line 178 Check invariant before entry for loop SymCryptMd2AppendBlocks.0: UNKNOWN
[SymCryptMd2AppendBlocks.loop_invariant_step.1] line 178 Check invariant after step for loop SymCryptMd2AppendBlocks.0: SUCCESS
[SymCryptMd2AppendBlocks.loop_invariant_step.5] line 178 Check invariant after step for loop SymCryptMd2AppendBlocks.0: UNKNOWN
[SymCryptMd2AppendBlocks.loop_step_unwinding.1] line 178 Check step was unwound for loop SymCryptMd2AppendBlocks.0: SUCCESS
[SymCryptMd2AppendBlocks.loop_step_unwinding.5] line 178 Check step was unwound for loop SymCryptMd2AppendBlocks.0: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.3] line 178 arithmetic overflow on signed + in j + 1: SUCCESS
[SymCryptMd2AppendBlocks.overflow.6] line 178 arithmetic overflow on signed + in j + 1: SUCCESS
[SymCryptMd2AppendBlocks.overflow.25] line 178 arithmetic overflow on signed + in j + 1: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.28] line 178 arithmetic overflow on signed + in j + 1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.25] line 179 dereference failure: pointer NULL in *__havoc_target: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.26] line 179 dereference failure: pointer invalid in *__havoc_target: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.27] line 179 dereference failure: deallocated dynamic object in *__havoc_target: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.28] line 179 dereference failure: dead object in *__havoc_target: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.29] line 179 dereference failure: pointer outside object bounds in *__havoc_target: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.30] line 179 dereference failure: invalid integer address in *__havoc_target: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.31] line 179 dereference failure: pointer NULL in *__havoc_target$0: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.32] line 179 dereference failure: pointer invalid in *__havoc_target$0: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.33] line 179 dereference failure: deallocated dynamic object in *__havoc_target$0: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.34] line 179 dereference failure: dead object in *__havoc_target$0: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.35] line 179 dereference failure: pointer outside object bounds in *__havoc_target$0: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.36] line 179 dereference failure: invalid integer address in *__havoc_target$0: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.211] line 179 dereference failure: pointer NULL in *__havoc_target: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.212] line 179 dereference failure: pointer invalid in *__havoc_target: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.213] line 179 dereference failure: deallocated dynamic object in *__havoc_target: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.214] line 179 dereference failure: dead object in *__havoc_target: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.215] line 179 dereference failure: pointer outside object bounds in *__havoc_target: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.216] line 179 dereference failure: invalid integer address in *__havoc_target: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.217] line 179 dereference failure: pointer NULL in *__havoc_target$0: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.218] line 179 dereference failure: pointer invalid in *__havoc_target$0: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.219] line 179 dereference failure: deallocated dynamic object in *__havoc_target$0: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.220] line 179 dereference failure: dead object in *__havoc_target$0: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.221] line 179 dereference failure: pointer outside object bounds in *__havoc_target$0: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.222] line 179 dereference failure: invalid integer address in *__havoc_target$0: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.1] line 181 arithmetic overflow on signed - in 18 - j: SUCCESS
[SymCryptMd2AppendBlocks.overflow.4] line 181 arithmetic overflow on signed - in 18 - j: SUCCESS
[SymCryptMd2AppendBlocks.overflow.7] line 181 arithmetic overflow on signed - in 18 - j: SUCCESS
[SymCryptMd2AppendBlocks.overflow.23] line 181 arithmetic overflow on signed - in 18 - j: SUCCESS
[SymCryptMd2AppendBlocks.overflow.26] line 181 arithmetic overflow on signed - in 18 - j: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.29] line 181 arithmetic overflow on signed - in 18 - j: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.2] line 183 array.C dynamic object upper bound in pChain->C[(signed long int)j]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.3] line 183 array.X dynamic object upper bound in pChain->X[(signed long int)(16 + j)]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.4] line 183 array 'SymCryptMd2STable' lower bound in SymCryptMd2STable[(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)])]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.5] line 183 array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)])]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.6] line 183 array.C dynamic object upper bound in pChain->C[(signed long int)j]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.7] line 183 array.C dynamic object upper bound in pChain->C[(signed long int)j]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.8] line 183 array.X dynamic object upper bound in pChain->X[(signed long int)(16 + j)]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.9] line 183 array 'SymCryptMd2STable' lower bound in SymCryptMd2STable[(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)])]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.10] line 183 array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)])]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.11] line 183 array.C dynamic object upper bound in pChain->C[(signed long int)j]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.25] line 183 array.C dynamic object upper bound in pChain->C[(signed long int)j]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.26] line 183 array.X dynamic object upper bound in pChain->X[(signed long int)(16 + j)]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.27] line 183 array 'SymCryptMd2STable' lower bound in SymCryptMd2STable[(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)])]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.28] line 183 array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)])]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.29] line 183 array.C dynamic object upper bound in pChain->C[(signed long int)j]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.30] line 183 array.C dynamic object upper bound in pChain->C[(signed long int)j]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.31] line 183 array.X dynamic object upper bound in pChain->X[(signed long int)(16 + j)]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.32] line 183 array 'SymCryptMd2STable' lower bound in SymCryptMd2STable[(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)])]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.33] line 183 array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)])]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.34] line 183 array.C dynamic object upper bound in pChain->C[(signed long int)j]: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.3] line 183 Check that L is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.4] line 183 Check that pChain->C[(signed long int)j] is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.6] line 183 Check that L is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.7] line 183 Check that pChain->C[(signed long int)j] is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.33] line 183 Check that L is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.34] line 183 Check that pChain->C[(signed long int)j] is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.36] line 183 Check that L is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.37] line 183 Check that pChain->C[(signed long int)j] is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.2] line 183 arithmetic overflow on signed + in 16 + j: SUCCESS
[SymCryptMd2AppendBlocks.overflow.5] line 183 arithmetic overflow on signed + in 16 + j: SUCCESS
[SymCryptMd2AppendBlocks.overflow.24] line 183 arithmetic overflow on signed + in 16 + j: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.27] line 183 arithmetic overflow on signed + in 16 + j: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.7] line 183 dereference failure: pointer NULL in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.8] line 183 dereference failure: pointer invalid in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.9] line 183 dereference failure: deallocated dynamic object in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.10] line 183 dereference failure: dead object in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.11] line 183 dereference failure: pointer outside object bounds in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.12] line 183 dereference failure: invalid integer address in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.13] line 183 dereference failure: pointer NULL in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.14] line 183 dereference failure: pointer invalid in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.15] line 183 dereference failure: deallocated dynamic object in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.16] line 183 dereference failure: dead object in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.17] line 183 dereference failure: pointer outside object bounds in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.18] line 183 dereference failure: invalid integer address in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.19] line 183 dereference failure: pointer NULL in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.20] line 183 dereference failure: pointer invalid in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.21] line 183 dereference failure: deallocated dynamic object in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.22] line 183 dereference failure: dead object in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.23] line 183 dereference failure: pointer outside object bounds in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.24] line 183 dereference failure: invalid integer address in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.37] line 183 dereference failure: pointer NULL in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.38] line 183 dereference failure: pointer invalid in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.39] line 183 dereference failure: deallocated dynamic object in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.40] line 183 dereference failure: dead object in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.41] line 183 dereference failure: pointer outside object bounds in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.42] line 183 dereference failure: invalid integer address in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.43] line 183 dereference failure: pointer NULL in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.44] line 183 dereference failure: pointer invalid in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.45] line 183 dereference failure: deallocated dynamic object in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.46] line 183 dereference failure: dead object in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.47] line 183 dereference failure: pointer outside object bounds in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.48] line 183 dereference failure: invalid integer address in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.49] line 183 dereference failure: pointer NULL in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.50] line 183 dereference failure: pointer invalid in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.51] line 183 dereference failure: deallocated dynamic object in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.52] line 183 dereference failure: dead object in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.53] line 183 dereference failure: pointer outside object bounds in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.54] line 183 dereference failure: invalid integer address in pChain->C: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.193] line 183 dereference failure: pointer NULL in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.194] line 183 dereference failure: pointer invalid in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.195] line 183 dereference failure: deallocated dynamic object in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.196] line 183 dereference failure: dead object in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.197] line 183 dereference failure: pointer outside object bounds in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.198] line 183 dereference failure: invalid integer address in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.199] line 183 dereference failure: pointer NULL in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.200] line 183 dereference failure: pointer invalid in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.201] line 183 dereference failure: deallocated dynamic object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.202] line 183 dereference failure: dead object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.203] line 183 dereference failure: pointer outside object bounds in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.204] line 183 dereference failure: invalid integer address in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.205] line 183 dereference failure: pointer NULL in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.206] line 183 dereference failure: pointer invalid in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.207] line 183 dereference failure: deallocated dynamic object in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.208] line 183 dereference failure: dead object in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.209] line 183 dereference failure: pointer outside object bounds in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.210] line 183 dereference failure: invalid integer address in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.223] line 183 dereference failure: pointer NULL in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.224] line 183 dereference failure: pointer invalid in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.225] line 183 dereference failure: deallocated dynamic object in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.226] line 183 dereference failure: dead object in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.227] line 183 dereference failure: pointer outside object bounds in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.228] line 183 dereference failure: invalid integer address in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.229] line 183 dereference failure: pointer NULL in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.230] line 183 dereference failure: pointer invalid in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.231] line 183 dereference failure: deallocated dynamic object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.232] line 183 dereference failure: dead object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.233] line 183 dereference failure: pointer outside object bounds in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.234] line 183 dereference failure: invalid integer address in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.235] line 183 dereference failure: pointer NULL in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.236] line 183 dereference failure: pointer invalid in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.237] line 183 dereference failure: deallocated dynamic object in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.238] line 183 dereference failure: dead object in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.239] line 183 dereference failure: pointer outside object bounds in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.240] line 183 dereference failure: invalid integer address in pChain->C: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.9] line 191 Check that t is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.39] line 191 Check that t is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.10] line 192 Check that j is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.19] line 192 Check that j is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.28] line 192 Check that j is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.40] line 192 Check that j is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.49] line 192 Check that j is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.58] line 192 Check that j is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.loop_assigns.4] line 192 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.2: SUCCESS
[SymCryptMd2AppendBlocks.loop_assigns.7] line 192 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.2: SUCCESS
[SymCryptMd2AppendBlocks.loop_assigns.13] line 192 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.2: SUCCESS
[SymCryptMd2AppendBlocks.loop_assigns.16] line 192 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.2: UNKNOWN
[SymCryptMd2AppendBlocks.loop_decreases.4] line 192 Check variant decreases after step for loop SymCryptMd2AppendBlocks.2: FAILURE
[SymCryptMd2AppendBlocks.loop_decreases.8] line 192 Check variant decreases after step for loop SymCryptMd2AppendBlocks.2: FAILURE
[SymCryptMd2AppendBlocks.loop_invariant_base.4] line 192 Check invariant before entry for loop SymCryptMd2AppendBlocks.2: SUCCESS
[SymCryptMd2AppendBlocks.loop_invariant_base.7] line 192 Check invariant before entry for loop SymCryptMd2AppendBlocks.2: SUCCESS
[SymCryptMd2AppendBlocks.loop_invariant_base.13] line 192 Check invariant before entry for loop SymCryptMd2AppendBlocks.2: SUCCESS
[SymCryptMd2AppendBlocks.loop_invariant_base.16] line 192 Check invariant before entry for loop SymCryptMd2AppendBlocks.2: UNKNOWN
[SymCryptMd2AppendBlocks.loop_invariant_step.4] line 192 Check invariant after step for loop SymCryptMd2AppendBlocks.2: FAILURE
[SymCryptMd2AppendBlocks.loop_invariant_step.8] line 192 Check invariant after step for loop SymCryptMd2AppendBlocks.2: FAILURE
[SymCryptMd2AppendBlocks.loop_step_unwinding.4] line 192 Check step was unwound for loop SymCryptMd2AppendBlocks.2: SUCCESS
[SymCryptMd2AppendBlocks.loop_step_unwinding.8] line 192 Check step was unwound for loop SymCryptMd2AppendBlocks.2: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.14] line 192 arithmetic overflow on signed + in j + 1: FAILURE
[SymCryptMd2AppendBlocks.overflow.21] line 192 arithmetic overflow on signed + in j + 1: FAILURE
[SymCryptMd2AppendBlocks.overflow.36] line 192 arithmetic overflow on signed + in j + 1: FAILURE
[SymCryptMd2AppendBlocks.overflow.43] line 192 arithmetic overflow on signed + in j + 1: FAILURE
[SymCryptMd2AppendBlocks.pointer_dereference.97] line 193 dereference failure: pointer NULL in *__havoc_target$4: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.98] line 193 dereference failure: pointer invalid in *__havoc_target$4: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.99] line 193 dereference failure: deallocated dynamic object in *__havoc_target$4: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.100] line 193 dereference failure: dead object in *__havoc_target$4: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.101] line 193 dereference failure: pointer outside object bounds in *__havoc_target$4: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.102] line 193 dereference failure: invalid integer address in *__havoc_target$4: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.103] line 193 dereference failure: pointer NULL in *__havoc_target$5: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.104] line 193 dereference failure: pointer invalid in *__havoc_target$5: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.105] line 193 dereference failure: deallocated dynamic object in *__havoc_target$5: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.106] line 193 dereference failure: dead object in *__havoc_target$5: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.107] line 193 dereference failure: pointer outside object bounds in *__havoc_target$5: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.108] line 193 dereference failure: invalid integer address in *__havoc_target$5: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.109] line 193 dereference failure: pointer NULL in *__havoc_target$6: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.110] line 193 dereference failure: pointer invalid in *__havoc_target$6: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.111] line 193 dereference failure: deallocated dynamic object in *__havoc_target$6: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.112] line 193 dereference failure: dead object in *__havoc_target$6: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.113] line 193 dereference failure: pointer outside object bounds in *__havoc_target$6: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.114] line 193 dereference failure: invalid integer address in *__havoc_target$6: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.283] line 193 dereference failure: pointer NULL in *__havoc_target$4: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.284] line 193 dereference failure: pointer invalid in *__havoc_target$4: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.285] line 193 dereference failure: deallocated dynamic object in *__havoc_target$4: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.286] line 193 dereference failure: dead object in *__havoc_target$4: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.287] line 193 dereference failure: pointer outside object bounds in *__havoc_target$4: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.288] line 193 dereference failure: invalid integer address in *__havoc_target$4: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.289] line 193 dereference failure: pointer NULL in *__havoc_target$5: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.290] line 193 dereference failure: pointer invalid in *__havoc_target$5: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.291] line 193 dereference failure: deallocated dynamic object in *__havoc_target$5: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.292] line 193 dereference failure: dead object in *__havoc_target$5: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.293] line 193 dereference failure: pointer outside object bounds in *__havoc_target$5: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.294] line 193 dereference failure: invalid integer address in *__havoc_target$5: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.295] line 193 dereference failure: pointer NULL in *__havoc_target$6: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.296] line 193 dereference failure: pointer invalid in *__havoc_target$6: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.297] line 193 dereference failure: deallocated dynamic object in *__havoc_target$6: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.298] line 193 dereference failure: dead object in *__havoc_target$6: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.299] line 193 dereference failure: pointer outside object bounds in *__havoc_target$6: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.300] line 193 dereference failure: invalid integer address in *__havoc_target$6: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.8] line 195 arithmetic overflow on signed - in 18 - j: SUCCESS
[SymCryptMd2AppendBlocks.overflow.15] line 195 arithmetic overflow on signed - in 18 - j: SUCCESS
[SymCryptMd2AppendBlocks.overflow.22] line 195 arithmetic overflow on signed - in 18 - j: FAILURE
[SymCryptMd2AppendBlocks.overflow.30] line 195 arithmetic overflow on signed - in 18 - j: SUCCESS
[SymCryptMd2AppendBlocks.overflow.37] line 195 arithmetic overflow on signed - in 18 - j: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.44] line 195 arithmetic overflow on signed - in 18 - j: FAILURE
[SymCryptMd2AppendBlocks.assigns.11] line 197 Check that k is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.14] line 197 Check that k is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.17] line 197 Check that k is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.20] line 197 Check that k is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.23] line 197 Check that k is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.26] line 197 Check that k is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.41] line 197 Check that k is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.44] line 197 Check that k is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.47] line 197 Check that k is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.50] line 197 Check that k is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.53] line 197 Check that k is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.56] line 197 Check that k is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.loop_assigns.5] line 197 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.1: SUCCESS
[SymCryptMd2AppendBlocks.loop_assigns.6] line 197 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.1: SUCCESS
[SymCryptMd2AppendBlocks.loop_assigns.8] line 197 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.1: SUCCESS
[SymCryptMd2AppendBlocks.loop_assigns.9] line 197 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.1: UNKNOWN
[SymCryptMd2AppendBlocks.loop_assigns.14] line 197 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.1: SUCCESS
[SymCryptMd2AppendBlocks.loop_assigns.15] line 197 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.1: UNKNOWN
[SymCryptMd2AppendBlocks.loop_assigns.17] line 197 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.1: SUCCESS
[SymCryptMd2AppendBlocks.loop_assigns.18] line 197 Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.1: UNKNOWN
[SymCryptMd2AppendBlocks.loop_decreases.2] line 197 Check variant decreases after step for loop SymCryptMd2AppendBlocks.1: SUCCESS
[SymCryptMd2AppendBlocks.loop_decreases.3] line 197 Check variant decreases after step for loop SymCryptMd2AppendBlocks.1: UNKNOWN
[SymCryptMd2AppendBlocks.loop_decreases.6] line 197 Check variant decreases after step for loop SymCryptMd2AppendBlocks.1: UNKNOWN
[SymCryptMd2AppendBlocks.loop_decreases.7] line 197 Check variant decreases after step for loop SymCryptMd2AppendBlocks.1: UNKNOWN
[SymCryptMd2AppendBlocks.loop_invariant_base.5] line 197 Check invariant before entry for loop SymCryptMd2AppendBlocks.1: SUCCESS
[SymCryptMd2AppendBlocks.loop_invariant_base.6] line 197 Check invariant before entry for loop SymCryptMd2AppendBlocks.1: SUCCESS
[SymCryptMd2AppendBlocks.loop_invariant_base.8] line 197 Check invariant before entry for loop SymCryptMd2AppendBlocks.1: SUCCESS
[SymCryptMd2AppendBlocks.loop_invariant_base.9] line 197 Check invariant before entry for loop SymCryptMd2AppendBlocks.1: FAILURE
[SymCryptMd2AppendBlocks.loop_invariant_base.14] line 197 Check invariant before entry for loop SymCryptMd2AppendBlocks.1: SUCCESS
[SymCryptMd2AppendBlocks.loop_invariant_base.15] line 197 Check invariant before entry for loop SymCryptMd2AppendBlocks.1: UNKNOWN
[SymCryptMd2AppendBlocks.loop_invariant_base.17] line 197 Check invariant before entry for loop SymCryptMd2AppendBlocks.1: SUCCESS
[SymCryptMd2AppendBlocks.loop_invariant_base.18] line 197 Check invariant before entry for loop SymCryptMd2AppendBlocks.1: FAILURE
[SymCryptMd2AppendBlocks.loop_invariant_step.2] line 197 Check invariant after step for loop SymCryptMd2AppendBlocks.1: SUCCESS
[SymCryptMd2AppendBlocks.loop_invariant_step.3] line 197 Check invariant after step for loop SymCryptMd2AppendBlocks.1: UNKNOWN
[SymCryptMd2AppendBlocks.loop_invariant_step.6] line 197 Check invariant after step for loop SymCryptMd2AppendBlocks.1: UNKNOWN
[SymCryptMd2AppendBlocks.loop_invariant_step.7] line 197 Check invariant after step for loop SymCryptMd2AppendBlocks.1: UNKNOWN
[SymCryptMd2AppendBlocks.loop_step_unwinding.2] line 197 Check step was unwound for loop SymCryptMd2AppendBlocks.1: SUCCESS
[SymCryptMd2AppendBlocks.loop_step_unwinding.3] line 197 Check step was unwound for loop SymCryptMd2AppendBlocks.1: UNKNOWN
[SymCryptMd2AppendBlocks.loop_step_unwinding.6] line 197 Check step was unwound for loop SymCryptMd2AppendBlocks.1: UNKNOWN
[SymCryptMd2AppendBlocks.loop_step_unwinding.7] line 197 Check step was unwound for loop SymCryptMd2AppendBlocks.1: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.10] line 197 arithmetic overflow on signed + in k + 1: SUCCESS
[SymCryptMd2AppendBlocks.overflow.12] line 197 arithmetic overflow on signed + in k + 1: SUCCESS
[SymCryptMd2AppendBlocks.overflow.17] line 197 arithmetic overflow on signed + in k + 1: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.19] line 197 arithmetic overflow on signed + in k + 1: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.32] line 197 arithmetic overflow on signed + in k + 1: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.34] line 197 arithmetic overflow on signed + in k + 1: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.39] line 197 arithmetic overflow on signed + in k + 1: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.41] line 197 arithmetic overflow on signed + in k + 1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.67] line 198 dereference failure: pointer NULL in *__havoc_target$1: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.68] line 198 dereference failure: pointer invalid in *__havoc_target$1: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.69] line 198 dereference failure: deallocated dynamic object in *__havoc_target$1: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.70] line 198 dereference failure: dead object in *__havoc_target$1: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.71] line 198 dereference failure: pointer outside object bounds in *__havoc_target$1: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.72] line 198 dereference failure: invalid integer address in *__havoc_target$1: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.73] line 198 dereference failure: pointer NULL in *__havoc_target$2: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.74] line 198 dereference failure: pointer invalid in *__havoc_target$2: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.75] line 198 dereference failure: deallocated dynamic object in *__havoc_target$2: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.76] line 198 dereference failure: dead object in *__havoc_target$2: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.77] line 198 dereference failure: pointer outside object bounds in *__havoc_target$2: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.78] line 198 dereference failure: invalid integer address in *__havoc_target$2: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.79] line 198 dereference failure: pointer NULL in *__havoc_target$3: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.80] line 198 dereference failure: pointer invalid in *__havoc_target$3: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.81] line 198 dereference failure: deallocated dynamic object in *__havoc_target$3: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.82] line 198 dereference failure: dead object in *__havoc_target$3: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.83] line 198 dereference failure: pointer outside object bounds in *__havoc_target$3: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.84] line 198 dereference failure: invalid integer address in *__havoc_target$3: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.127] line 198 dereference failure: pointer NULL in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.128] line 198 dereference failure: pointer invalid in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.129] line 198 dereference failure: deallocated dynamic object in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.130] line 198 dereference failure: dead object in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.131] line 198 dereference failure: pointer outside object bounds in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.132] line 198 dereference failure: invalid integer address in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.133] line 198 dereference failure: pointer NULL in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.134] line 198 dereference failure: pointer invalid in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.135] line 198 dereference failure: deallocated dynamic object in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.136] line 198 dereference failure: dead object in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.137] line 198 dereference failure: pointer outside object bounds in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.138] line 198 dereference failure: invalid integer address in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.139] line 198 dereference failure: pointer NULL in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.140] line 198 dereference failure: pointer invalid in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.141] line 198 dereference failure: deallocated dynamic object in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.142] line 198 dereference failure: dead object in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.143] line 198 dereference failure: pointer outside object bounds in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.144] line 198 dereference failure: invalid integer address in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.253] line 198 dereference failure: pointer NULL in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.254] line 198 dereference failure: pointer invalid in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.255] line 198 dereference failure: deallocated dynamic object in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.256] line 198 dereference failure: dead object in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.257] line 198 dereference failure: pointer outside object bounds in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.258] line 198 dereference failure: invalid integer address in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.259] line 198 dereference failure: pointer NULL in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.260] line 198 dereference failure: pointer invalid in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.261] line 198 dereference failure: deallocated dynamic object in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.262] line 198 dereference failure: dead object in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.263] line 198 dereference failure: pointer outside object bounds in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.264] line 198 dereference failure: invalid integer address in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.265] line 198 dereference failure: pointer NULL in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.266] line 198 dereference failure: pointer invalid in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.267] line 198 dereference failure: deallocated dynamic object in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.268] line 198 dereference failure: dead object in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.269] line 198 dereference failure: pointer outside object bounds in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.270] line 198 dereference failure: invalid integer address in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.313] line 198 dereference failure: pointer NULL in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.314] line 198 dereference failure: pointer invalid in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.315] line 198 dereference failure: deallocated dynamic object in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.316] line 198 dereference failure: dead object in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.317] line 198 dereference failure: pointer outside object bounds in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.318] line 198 dereference failure: invalid integer address in *__havoc_target$1: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.319] line 198 dereference failure: pointer NULL in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.320] line 198 dereference failure: pointer invalid in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.321] line 198 dereference failure: deallocated dynamic object in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.322] line 198 dereference failure: dead object in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.323] line 198 dereference failure: pointer outside object bounds in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.324] line 198 dereference failure: invalid integer address in *__havoc_target$2: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.325] line 198 dereference failure: pointer NULL in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.326] line 198 dereference failure: pointer invalid in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.327] line 198 dereference failure: deallocated dynamic object in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.328] line 198 dereference failure: dead object in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.329] line 198 dereference failure: pointer outside object bounds in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.330] line 198 dereference failure: invalid integer address in *__havoc_target$3: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.9] line 200 arithmetic overflow on signed - in 48 - k: SUCCESS
[SymCryptMd2AppendBlocks.overflow.11] line 200 arithmetic overflow on signed - in 48 - k: SUCCESS
[SymCryptMd2AppendBlocks.overflow.13] line 200 arithmetic overflow on signed - in 48 - k: SUCCESS
[SymCryptMd2AppendBlocks.overflow.16] line 200 arithmetic overflow on signed - in 48 - k: SUCCESS
[SymCryptMd2AppendBlocks.overflow.18] line 200 arithmetic overflow on signed - in 48 - k: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.20] line 200 arithmetic overflow on signed - in 48 - k: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.31] line 200 arithmetic overflow on signed - in 48 - k: SUCCESS
[SymCryptMd2AppendBlocks.overflow.33] line 200 arithmetic overflow on signed - in 48 - k: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.35] line 200 arithmetic overflow on signed - in 48 - k: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.38] line 200 arithmetic overflow on signed - in 48 - k: SUCCESS
[SymCryptMd2AppendBlocks.overflow.40] line 200 arithmetic overflow on signed - in 48 - k: UNKNOWN
[SymCryptMd2AppendBlocks.overflow.42] line 200 arithmetic overflow on signed - in 48 - k: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.12] line 202 array.X dynamic object upper bound in pChain->X[(signed long int)k]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.13] line 202 array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)t]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.15] line 202 array.X dynamic object upper bound in pChain->X[(signed long int)k]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.16] line 202 array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)t]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.18] line 202 array.X dynamic object upper bound in pChain->X[(signed long int)k]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.19] line 202 array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)t]: FAILURE
[SymCryptMd2AppendBlocks.array_bounds.21] line 202 array.X dynamic object upper bound in pChain->X[(signed long int)k]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.22] line 202 array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)t]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.35] line 202 array.X dynamic object upper bound in pChain->X[(signed long int)k]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.36] line 202 array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)t]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.38] line 202 array.X dynamic object upper bound in pChain->X[(signed long int)k]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.39] line 202 array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)t]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.41] line 202 array.X dynamic object upper bound in pChain->X[(signed long int)k]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.42] line 202 array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)t]: FAILURE
[SymCryptMd2AppendBlocks.array_bounds.44] line 202 array.X dynamic object upper bound in pChain->X[(signed long int)k]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.45] line 202 array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)t]: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.12] line 202 Check that t is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.15] line 202 Check that t is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.21] line 202 Check that t is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.24] line 202 Check that t is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.42] line 202 Check that t is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.45] line 202 Check that t is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.51] line 202 Check that t is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.54] line 202 Check that t is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.55] line 202 dereference failure: pointer NULL in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.56] line 202 dereference failure: pointer invalid in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.57] line 202 dereference failure: deallocated dynamic object in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.58] line 202 dereference failure: dead object in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.59] line 202 dereference failure: pointer outside object bounds in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.60] line 202 dereference failure: invalid integer address in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.85] line 202 dereference failure: pointer NULL in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.86] line 202 dereference failure: pointer invalid in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.87] line 202 dereference failure: deallocated dynamic object in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.88] line 202 dereference failure: dead object in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.89] line 202 dereference failure: pointer outside object bounds in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.90] line 202 dereference failure: invalid integer address in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.115] line 202 dereference failure: pointer NULL in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.116] line 202 dereference failure: pointer invalid in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.117] line 202 dereference failure: deallocated dynamic object in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.118] line 202 dereference failure: dead object in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.119] line 202 dereference failure: pointer outside object bounds in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.120] line 202 dereference failure: invalid integer address in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.145] line 202 dereference failure: pointer NULL in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.146] line 202 dereference failure: pointer invalid in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.147] line 202 dereference failure: deallocated dynamic object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.148] line 202 dereference failure: dead object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.149] line 202 dereference failure: pointer outside object bounds in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.150] line 202 dereference failure: invalid integer address in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.241] line 202 dereference failure: pointer NULL in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.242] line 202 dereference failure: pointer invalid in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.243] line 202 dereference failure: deallocated dynamic object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.244] line 202 dereference failure: dead object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.245] line 202 dereference failure: pointer outside object bounds in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.246] line 202 dereference failure: invalid integer address in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.271] line 202 dereference failure: pointer NULL in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.272] line 202 dereference failure: pointer invalid in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.273] line 202 dereference failure: deallocated dynamic object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.274] line 202 dereference failure: dead object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.275] line 202 dereference failure: pointer outside object bounds in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.276] line 202 dereference failure: invalid integer address in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.301] line 202 dereference failure: pointer NULL in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.302] line 202 dereference failure: pointer invalid in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.303] line 202 dereference failure: deallocated dynamic object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.304] line 202 dereference failure: dead object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.305] line 202 dereference failure: pointer outside object bounds in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.306] line 202 dereference failure: invalid integer address in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.331] line 202 dereference failure: pointer NULL in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.332] line 202 dereference failure: pointer invalid in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.333] line 202 dereference failure: deallocated dynamic object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.334] line 202 dereference failure: dead object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.335] line 202 dereference failure: pointer outside object bounds in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.336] line 202 dereference failure: invalid integer address in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.14] line 203 array.X dynamic object upper bound in pChain->X[(signed long int)k]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.17] line 203 array.X dynamic object upper bound in pChain->X[(signed long int)k]: SUCCESS
[SymCryptMd2AppendBlocks.array_bounds.20] line 203 array.X dynamic object upper bound in pChain->X[(signed long int)k]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.23] line 203 array.X dynamic object upper bound in pChain->X[(signed long int)k]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.37] line 203 array.X dynamic object upper bound in pChain->X[(signed long int)k]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.40] line 203 array.X dynamic object upper bound in pChain->X[(signed long int)k]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.43] line 203 array.X dynamic object upper bound in pChain->X[(signed long int)k]: UNKNOWN
[SymCryptMd2AppendBlocks.array_bounds.46] line 203 array.X dynamic object upper bound in pChain->X[(signed long int)k]: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.13] line 203 Check that pChain->X[(signed long int)k] is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.16] line 203 Check that pChain->X[(signed long int)k] is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.22] line 203 Check that pChain->X[(signed long int)k] is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.25] line 203 Check that pChain->X[(signed long int)k] is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.43] line 203 Check that pChain->X[(signed long int)k] is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.46] line 203 Check that pChain->X[(signed long int)k] is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.52] line 203 Check that pChain->X[(signed long int)k] is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.55] line 203 Check that pChain->X[(signed long int)k] is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.61] line 203 dereference failure: pointer NULL in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.62] line 203 dereference failure: pointer invalid in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.63] line 203 dereference failure: deallocated dynamic object in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.64] line 203 dereference failure: dead object in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.65] line 203 dereference failure: pointer outside object bounds in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.66] line 203 dereference failure: invalid integer address in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.91] line 203 dereference failure: pointer NULL in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.92] line 203 dereference failure: pointer invalid in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.93] line 203 dereference failure: deallocated dynamic object in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.94] line 203 dereference failure: dead object in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.95] line 203 dereference failure: pointer outside object bounds in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.96] line 203 dereference failure: invalid integer address in pChain->X: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.121] line 203 dereference failure: pointer NULL in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.122] line 203 dereference failure: pointer invalid in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.123] line 203 dereference failure: deallocated dynamic object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.124] line 203 dereference failure: dead object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.125] line 203 dereference failure: pointer outside object bounds in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.126] line 203 dereference failure: invalid integer address in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.151] line 203 dereference failure: pointer NULL in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.152] line 203 dereference failure: pointer invalid in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.153] line 203 dereference failure: deallocated dynamic object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.154] line 203 dereference failure: dead object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.155] line 203 dereference failure: pointer outside object bounds in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.156] line 203 dereference failure: invalid integer address in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.247] line 203 dereference failure: pointer NULL in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.248] line 203 dereference failure: pointer invalid in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.249] line 203 dereference failure: deallocated dynamic object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.250] line 203 dereference failure: dead object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.251] line 203 dereference failure: pointer outside object bounds in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.252] line 203 dereference failure: invalid integer address in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.277] line 203 dereference failure: pointer NULL in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.278] line 203 dereference failure: pointer invalid in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.279] line 203 dereference failure: deallocated dynamic object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.280] line 203 dereference failure: dead object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.281] line 203 dereference failure: pointer outside object bounds in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.282] line 203 dereference failure: invalid integer address in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.307] line 203 dereference failure: pointer NULL in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.308] line 203 dereference failure: pointer invalid in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.309] line 203 dereference failure: deallocated dynamic object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.310] line 203 dereference failure: dead object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.311] line 203 dereference failure: pointer outside object bounds in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.312] line 203 dereference failure: invalid integer address in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.337] line 203 dereference failure: pointer NULL in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.338] line 203 dereference failure: pointer invalid in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.339] line 203 dereference failure: deallocated dynamic object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.340] line 203 dereference failure: dead object in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.341] line 203 dereference failure: pointer outside object bounds in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.pointer_dereference.342] line 203 dereference failure: invalid integer address in pChain->X: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.18] line 205 Check that t is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.27] line 205 Check that t is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.48] line 205 Check that t is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.57] line 205 Check that t is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.29] line 208 Check that pbData is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.59] line 208 Check that pbData is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.30] line 209 Check that cbData is assignable: SUCCESS
[SymCryptMd2AppendBlocks.assigns.60] line 209 Check that cbData is assignable: UNKNOWN
[SymCryptMd2AppendBlocks.assigns.61] line 212 Check that *pcbRemaining is assignable: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.343] line 212 dereference failure: pointer NULL in *pcbRemaining: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.344] line 212 dereference failure: pointer invalid in *pcbRemaining: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.345] line 212 dereference failure: deallocated dynamic object in *pcbRemaining: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.346] line 212 dereference failure: dead object in *pcbRemaining: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.347] line 212 dereference failure: pointer outside object bounds in *pcbRemaining: SUCCESS
[SymCryptMd2AppendBlocks.pointer_dereference.348] line 212 dereference failure: invalid integer address in *pcbRemaining: SUCCESS

/home/jiggly/SymCrypt-CBMC/lib/md2.c function SymCryptMd2Result
[SymCryptMd2Result.assertion.1] line 120 hash buffer length should always <= 16: SUCCESS
[SymCryptMd2Result.pointer_dereference.1] line 120 dereference failure: pointer NULL in state->bytesInBuffer: SUCCESS
[SymCryptMd2Result.pointer_dereference.2] line 120 dereference failure: pointer invalid in state->bytesInBuffer: SUCCESS
[SymCryptMd2Result.pointer_dereference.3] line 120 dereference failure: deallocated dynamic object in state->bytesInBuffer: SUCCESS
[SymCryptMd2Result.pointer_dereference.4] line 120 dereference failure: dead object in state->bytesInBuffer: SUCCESS
[SymCryptMd2Result.pointer_dereference.5] line 120 dereference failure: pointer outside object bounds in state->bytesInBuffer: SUCCESS
[SymCryptMd2Result.pointer_dereference.6] line 120 dereference failure: invalid integer address in state->bytesInBuffer: SUCCESS
[SymCryptMd2Result.assigns.1] line 121 Check that paddingBytes is assignable: SUCCESS
[SymCryptMd2Result.pointer_dereference.7] line 121 dereference failure: pointer NULL in state->bytesInBuffer: SUCCESS
[SymCryptMd2Result.pointer_dereference.8] line 121 dereference failure: pointer invalid in state->bytesInBuffer: SUCCESS
[SymCryptMd2Result.pointer_dereference.9] line 121 dereference failure: deallocated dynamic object in state->bytesInBuffer: SUCCESS
[SymCryptMd2Result.pointer_dereference.10] line 121 dereference failure: dead object in state->bytesInBuffer: SUCCESS
[SymCryptMd2Result.pointer_dereference.11] line 121 dereference failure: pointer outside object bounds in state->bytesInBuffer: SUCCESS
[SymCryptMd2Result.pointer_dereference.12] line 121 dereference failure: invalid integer address in state->bytesInBuffer: SUCCESS
[SymCryptMd2Result.precondition_instance.1] line 126 memset destination region writeable: SUCCESS
[SymCryptMd2Result.precondition_instance.2] line 135 memcpy src/dst overlap: SUCCESS
[SymCryptMd2Result.precondition_instance.3] line 135 memcpy source region readable: SUCCESS
[SymCryptMd2Result.precondition_instance.4] line 135 memcpy destination region writeable: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_car_create
[__CPROVER_contracts_car_create.assertion.1] line 113 ptr NULL or writable up to size: SUCCESS
[__CPROVER_contracts_car_create.assertion.2] line 116 CAR size is less than __CPROVER_max_malloc_size: SUCCESS
[__CPROVER_contracts_car_create.assertion.3] line 120 no offset bits overflow on CAR upper bound computation: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_car_set_contains
[__CPROVER_contracts_car_set_contains.pointer_dereference.1] line 208 dereference failure: pointer NULL in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.2] line 208 dereference failure: pointer invalid in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.3] line 208 dereference failure: deallocated dynamic object in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.4] line 208 dereference failure: dead object in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.5] line 208 dereference failure: pointer outside object bounds in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.6] line 208 dereference failure: invalid integer address in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.7] line 209 dereference failure: pointer NULL in set->elems: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.8] line 209 dereference failure: pointer invalid in set->elems: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.9] line 209 dereference failure: deallocated dynamic object in set->elems: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.10] line 209 dereference failure: dead object in set->elems: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.11] line 209 dereference failure: pointer outside object bounds in set->elems: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.12] line 209 dereference failure: invalid integer address in set->elems: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.13] line 213 dereference failure: pointer NULL in elem->is_writable: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.14] line 213 dereference failure: pointer invalid in elem->is_writable: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.15] line 213 dereference failure: deallocated dynamic object in elem->is_writable: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.16] line 213 dereference failure: dead object in elem->is_writable: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.17] line 213 dereference failure: pointer outside object bounds in elem->is_writable: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.18] line 213 dereference failure: invalid integer address in elem->is_writable: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.19] line 214 dereference failure: pointer NULL in elem->lb: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.20] line 214 dereference failure: pointer invalid in elem->lb: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.21] line 214 dereference failure: deallocated dynamic object in elem->lb: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.22] line 214 dereference failure: dead object in elem->lb: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.23] line 214 dereference failure: pointer outside object bounds in elem->lb: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.24] line 214 dereference failure: invalid integer address in elem->lb: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.25] line 218 dereference failure: pointer NULL in elem->ub: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.26] line 218 dereference failure: pointer invalid in elem->ub: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.27] line 218 dereference failure: deallocated dynamic object in elem->ub: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.28] line 218 dereference failure: dead object in elem->ub: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.29] line 218 dereference failure: pointer outside object bounds in elem->ub: SUCCESS
[__CPROVER_contracts_car_set_contains.pointer_dereference.30] line 218 dereference failure: invalid integer address in elem->ub: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_car_set_create
[__CPROVER_contracts_car_set_create.pointer_dereference.1] line 140 dereference failure: pointer NULL in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_create.pointer_dereference.2] line 140 dereference failure: pointer invalid in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_create.pointer_dereference.3] line 140 dereference failure: deallocated dynamic object in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_create.pointer_dereference.4] line 140 dereference failure: dead object in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_create.pointer_dereference.5] line 140 dereference failure: pointer outside object bounds in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_create.pointer_dereference.6] line 140 dereference failure: invalid integer address in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_create.pointer_dereference.7] line 141 dereference failure: pointer NULL in set->elems: SUCCESS
[__CPROVER_contracts_car_set_create.pointer_dereference.8] line 141 dereference failure: pointer invalid in set->elems: SUCCESS
[__CPROVER_contracts_car_set_create.pointer_dereference.9] line 141 dereference failure: deallocated dynamic object in set->elems: SUCCESS
[__CPROVER_contracts_car_set_create.pointer_dereference.10] line 141 dereference failure: dead object in set->elems: SUCCESS
[__CPROVER_contracts_car_set_create.pointer_dereference.11] line 141 dereference failure: pointer outside object bounds in set->elems: SUCCESS
[__CPROVER_contracts_car_set_create.pointer_dereference.12] line 141 dereference failure: invalid integer address in set->elems: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_car_set_insert
[__CPROVER_contracts_car_set_insert.assertion.1] line 161 ptr NULL or writable up to size: SUCCESS
[__CPROVER_contracts_car_set_insert.assertion.4] line 161 ptr NULL or writable up to size: UNKNOWN
[__CPROVER_contracts_car_set_insert.assertion.7] line 161 ptr NULL or writable up to size: UNKNOWN
[__CPROVER_contracts_car_set_insert.assertion.2] line 164 CAR size is less than __CPROVER_max_malloc_size: SUCCESS
[__CPROVER_contracts_car_set_insert.assertion.5] line 164 CAR size is less than __CPROVER_max_malloc_size: UNKNOWN
[__CPROVER_contracts_car_set_insert.assertion.8] line 164 CAR size is less than __CPROVER_max_malloc_size: UNKNOWN
[__CPROVER_contracts_car_set_insert.assertion.3] line 168 no offset bits overflow on CAR upper bound computation: SUCCESS
[__CPROVER_contracts_car_set_insert.assertion.6] line 168 no offset bits overflow on CAR upper bound computation: UNKNOWN
[__CPROVER_contracts_car_set_insert.assertion.9] line 168 no offset bits overflow on CAR upper bound computation: UNKNOWN
[__CPROVER_contracts_car_set_insert.pointer_dereference.1] line 171 dereference failure: pointer NULL in set->elems: SUCCESS
[__CPROVER_contracts_car_set_insert.pointer_dereference.2] line 171 dereference failure: pointer invalid in set->elems: SUCCESS
[__CPROVER_contracts_car_set_insert.pointer_dereference.3] line 171 dereference failure: deallocated dynamic object in set->elems: SUCCESS
[__CPROVER_contracts_car_set_insert.pointer_dereference.4] line 171 dereference failure: dead object in set->elems: SUCCESS
[__CPROVER_contracts_car_set_insert.pointer_dereference.5] line 171 dereference failure: pointer outside object bounds in set->elems: SUCCESS
[__CPROVER_contracts_car_set_insert.pointer_dereference.6] line 171 dereference failure: invalid integer address in set->elems: SUCCESS
[__CPROVER_contracts_car_set_insert.pointer_dereference.7] line 172 dereference failure: pointer NULL in *elem: SUCCESS
[__CPROVER_contracts_car_set_insert.pointer_dereference.8] line 172 dereference failure: pointer invalid in *elem: SUCCESS
[__CPROVER_contracts_car_set_insert.pointer_dereference.9] line 172 dereference failure: deallocated dynamic object in *elem: SUCCESS
[__CPROVER_contracts_car_set_insert.pointer_dereference.10] line 172 dereference failure: dead object in *elem: SUCCESS
[__CPROVER_contracts_car_set_insert.pointer_dereference.11] line 172 dereference failure: pointer outside object bounds in *elem: SUCCESS
[__CPROVER_contracts_car_set_insert.pointer_dereference.12] line 172 dereference failure: invalid integer address in *elem: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_car_set_remove
[__CPROVER_contracts_car_set_remove.pointer_dereference.1] line 186 dereference failure: pointer NULL in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.2] line 186 dereference failure: pointer invalid in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.3] line 186 dereference failure: deallocated dynamic object in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.4] line 186 dereference failure: dead object in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.5] line 186 dereference failure: pointer outside object bounds in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.6] line 186 dereference failure: invalid integer address in set->max_elems: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.7] line 187 dereference failure: pointer NULL in set->elems: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.8] line 187 dereference failure: pointer invalid in set->elems: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.9] line 187 dereference failure: deallocated dynamic object in set->elems: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.10] line 187 dereference failure: dead object in set->elems: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.11] line 187 dereference failure: pointer outside object bounds in set->elems: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.12] line 187 dereference failure: invalid integer address in set->elems: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.13] line 191 dereference failure: pointer NULL in elem->lb: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.14] line 191 dereference failure: pointer invalid in elem->lb: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.15] line 191 dereference failure: deallocated dynamic object in elem->lb: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.16] line 191 dereference failure: dead object in elem->lb: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.17] line 191 dereference failure: pointer outside object bounds in elem->lb: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.18] line 191 dereference failure: invalid integer address in elem->lb: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.19] line 192 dereference failure: pointer NULL in elem->is_writable: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.20] line 192 dereference failure: pointer invalid in elem->is_writable: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.21] line 192 dereference failure: deallocated dynamic object in elem->is_writable: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.22] line 192 dereference failure: dead object in elem->is_writable: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.23] line 192 dereference failure: pointer outside object bounds in elem->is_writable: SUCCESS
[__CPROVER_contracts_car_set_remove.pointer_dereference.24] line 192 dereference failure: invalid integer address in elem->is_writable: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_check_replace_ensures_was_freed_preconditions
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.assertion.1] line 1497 __CPROVER_was_freed is used only in ensures clauses: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.1] line 1498 dereference failure: pointer NULL in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.2] line 1498 dereference failure: pointer invalid in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.3] line 1498 dereference failure: deallocated dynamic object in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.4] line 1498 dereference failure: dead object in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.5] line 1498 dereference failure: pointer outside object bounds in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.6] line 1498 dereference failure: invalid integer address in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.7] line 1498 dereference failure: pointer NULL in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.8] line 1498 dereference failure: pointer invalid in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.9] line 1498 dereference failure: deallocated dynamic object in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.10] line 1498 dereference failure: dead object in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.11] line 1498 dereference failure: pointer outside object bounds in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.12] line 1498 dereference failure: invalid integer address in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.13] line 1501 dereference failure: pointer NULL in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.14] line 1501 dereference failure: pointer invalid in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.15] line 1501 dereference failure: deallocated dynamic object in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.16] line 1501 dereference failure: dead object in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.17] line 1501 dereference failure: pointer outside object bounds in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.18] line 1501 dereference failure: invalid integer address in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.assertion.2] line 1511 assuming __CPROVER_was_freed(ptr) requires ptr to always exist in the contract's frees clause: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.19] line 1512 dereference failure: pointer NULL in set->contract_frees: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.20] line 1512 dereference failure: pointer invalid in set->contract_frees: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.21] line 1512 dereference failure: deallocated dynamic object in set->contract_frees: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.22] line 1512 dereference failure: dead object in set->contract_frees: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.23] line 1512 dereference failure: pointer outside object bounds in set->contract_frees: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.24] line 1512 dereference failure: invalid integer address in set->contract_frees: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.25] line 1512 dereference failure: pointer NULL in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.26] line 1512 dereference failure: pointer invalid in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.27] line 1512 dereference failure: deallocated dynamic object in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.28] line 1512 dereference failure: dead object in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.29] line 1512 dereference failure: pointer outside object bounds in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.30] line 1512 dereference failure: invalid integer address in set->contract_frees.elems[(signed long int)object_id]: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_is_freeable
[__CPROVER_contracts_is_freeable.assertion.1] line 1439 __CPROVER_is_freeable is used only in requires or ensures clauses: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.1] line 1441 dereference failure: pointer NULL in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.2] line 1441 dereference failure: pointer invalid in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.3] line 1441 dereference failure: deallocated dynamic object in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.4] line 1441 dereference failure: dead object in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.5] line 1441 dereference failure: pointer outside object bounds in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.6] line 1441 dereference failure: invalid integer address in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.7] line 1441 dereference failure: pointer NULL in set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.8] line 1441 dereference failure: pointer invalid in set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.9] line 1441 dereference failure: deallocated dynamic object in set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.10] line 1441 dereference failure: dead object in set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.11] line 1441 dereference failure: pointer outside object bounds in set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.12] line 1441 dereference failure: invalid integer address in set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.13] line 1442 dereference failure: pointer NULL in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.14] line 1442 dereference failure: pointer invalid in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.15] line 1442 dereference failure: deallocated dynamic object in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.16] line 1442 dereference failure: dead object in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.17] line 1442 dereference failure: pointer outside object bounds in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.18] line 1442 dereference failure: invalid integer address in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.19] line 1442 dereference failure: pointer NULL in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.20] line 1442 dereference failure: pointer invalid in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.21] line 1442 dereference failure: deallocated dynamic object in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.22] line 1442 dereference failure: dead object in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.23] line 1442 dereference failure: pointer outside object bounds in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.24] line 1442 dereference failure: invalid integer address in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.25] line 1450 dereference failure: pointer NULL in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.26] line 1450 dereference failure: pointer invalid in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.27] line 1450 dereference failure: deallocated dynamic object in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.28] line 1450 dereference failure: dead object in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.29] line 1450 dereference failure: pointer outside object bounds in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.30] line 1450 dereference failure: invalid integer address in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.31] line 1450 dereference failure: pointer NULL in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.32] line 1450 dereference failure: pointer invalid in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.33] line 1450 dereference failure: deallocated dynamic object in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.34] line 1450 dereference failure: dead object in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.35] line 1450 dereference failure: pointer outside object bounds in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_freeable.pointer_dereference.36] line 1450 dereference failure: invalid integer address in set->assume_ensures_ctx: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_is_fresh
[__CPROVER_contracts_is_fresh.assertion.1] line 1161 __CPROVER_is_fresh is used only in requires or ensures clauses: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.1] line 1162 dereference failure: pointer NULL in write_set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.2] line 1162 dereference failure: pointer invalid in write_set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.3] line 1162 dereference failure: deallocated dynamic object in write_set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.4] line 1162 dereference failure: dead object in write_set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.5] line 1162 dereference failure: pointer outside object bounds in write_set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.6] line 1162 dereference failure: invalid integer address in write_set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.7] line 1163 dereference failure: pointer NULL in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.8] line 1163 dereference failure: pointer invalid in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.9] line 1163 dereference failure: deallocated dynamic object in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.10] line 1163 dereference failure: dead object in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.11] line 1163 dereference failure: pointer outside object bounds in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.12] line 1163 dereference failure: invalid integer address in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.13] line 1164 dereference failure: pointer NULL in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.14] line 1164 dereference failure: pointer invalid in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.15] line 1164 dereference failure: deallocated dynamic object in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.16] line 1164 dereference failure: dead object in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.17] line 1164 dereference failure: pointer outside object bounds in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.18] line 1164 dereference failure: invalid integer address in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.19] line 1165 dereference failure: pointer NULL in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.20] line 1165 dereference failure: pointer invalid in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.21] line 1165 dereference failure: deallocated dynamic object in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.22] line 1165 dereference failure: dead object in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.23] line 1165 dereference failure: pointer outside object bounds in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.24] line 1165 dereference failure: invalid integer address in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.assertion.2] line 1198 __CPROVER_is_fresh max allocation size exceeded: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.25] line 1205 dereference failure: pointer NULL in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.26] line 1205 dereference failure: pointer invalid in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.27] line 1205 dereference failure: deallocated dynamic object in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.28] line 1205 dereference failure: dead object in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.29] line 1205 dereference failure: pointer outside object bounds in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.30] line 1205 dereference failure: invalid integer address in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.31] line 1223 dereference failure: pointer NULL in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.32] line 1223 dereference failure: pointer invalid in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.33] line 1223 dereference failure: deallocated dynamic object in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.34] line 1223 dereference failure: dead object in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.35] line 1223 dereference failure: pointer outside object bounds in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.36] line 1223 dereference failure: invalid integer address in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.37] line 1223 dereference failure: pointer NULL in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.38] line 1223 dereference failure: pointer invalid in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.39] line 1223 dereference failure: deallocated dynamic object in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.40] line 1223 dereference failure: dead object in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.41] line 1223 dereference failure: pointer outside object bounds in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.42] line 1223 dereference failure: invalid integer address in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.43] line 1224 dereference failure: pointer NULL in write_set->linked_is_fresh->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.44] line 1224 dereference failure: pointer invalid in write_set->linked_is_fresh->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.45] line 1224 dereference failure: deallocated dynamic object in write_set->linked_is_fresh->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.46] line 1224 dereference failure: dead object in write_set->linked_is_fresh->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.47] line 1224 dereference failure: pointer outside object bounds in write_set->linked_is_fresh->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.48] line 1224 dereference failure: invalid integer address in write_set->linked_is_fresh->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.49] line 1224 dereference failure: pointer NULL in write_set->linked_is_fresh->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.50] line 1224 dereference failure: pointer invalid in write_set->linked_is_fresh->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.51] line 1224 dereference failure: deallocated dynamic object in write_set->linked_is_fresh->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.52] line 1224 dereference failure: dead object in write_set->linked_is_fresh->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.53] line 1224 dereference failure: pointer outside object bounds in write_set->linked_is_fresh->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.54] line 1224 dereference failure: invalid integer address in write_set->linked_is_fresh->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.55] line 1225 dereference failure: pointer NULL in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.56] line 1225 dereference failure: pointer invalid in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.57] line 1225 dereference failure: deallocated dynamic object in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.58] line 1225 dereference failure: dead object in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.59] line 1225 dereference failure: pointer outside object bounds in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.60] line 1225 dereference failure: invalid integer address in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.61] line 1225 dereference failure: pointer NULL in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.62] line 1225 dereference failure: pointer invalid in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.63] line 1225 dereference failure: deallocated dynamic object in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.64] line 1225 dereference failure: dead object in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.65] line 1225 dereference failure: pointer outside object bounds in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.66] line 1225 dereference failure: invalid integer address in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.67] line 1226 dereference failure: pointer NULL in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.68] line 1226 dereference failure: pointer invalid in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.69] line 1226 dereference failure: deallocated dynamic object in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.70] line 1226 dereference failure: dead object in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.71] line 1226 dereference failure: pointer outside object bounds in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.72] line 1226 dereference failure: invalid integer address in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.73] line 1226 dereference failure: pointer NULL in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.74] line 1226 dereference failure: pointer invalid in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.75] line 1226 dereference failure: deallocated dynamic object in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.76] line 1226 dereference failure: dead object in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.77] line 1226 dereference failure: pointer outside object bounds in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.78] line 1226 dereference failure: invalid integer address in write_set->linked_is_fresh->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.79] line 1227 dereference failure: pointer NULL in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.80] line 1227 dereference failure: pointer invalid in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.81] line 1227 dereference failure: deallocated dynamic object in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.82] line 1227 dereference failure: dead object in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.83] line 1227 dereference failure: pointer outside object bounds in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.84] line 1227 dereference failure: invalid integer address in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.85] line 1227 dereference failure: pointer NULL in write_set->linked_is_fresh->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.86] line 1227 dereference failure: pointer invalid in write_set->linked_is_fresh->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.87] line 1227 dereference failure: deallocated dynamic object in write_set->linked_is_fresh->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.88] line 1227 dereference failure: dead object in write_set->linked_is_fresh->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.89] line 1227 dereference failure: pointer outside object bounds in write_set->linked_is_fresh->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.90] line 1227 dereference failure: invalid integer address in write_set->linked_is_fresh->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.91] line 1227 dereference failure: pointer NULL in write_set->linked_is_fresh->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.92] line 1227 dereference failure: pointer invalid in write_set->linked_is_fresh->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.93] line 1227 dereference failure: deallocated dynamic object in write_set->linked_is_fresh->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.94] line 1227 dereference failure: dead object in write_set->linked_is_fresh->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.95] line 1227 dereference failure: pointer outside object bounds in write_set->linked_is_fresh->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.96] line 1227 dereference failure: invalid integer address in write_set->linked_is_fresh->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.97] line 1228 dereference failure: pointer NULL in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.98] line 1228 dereference failure: pointer invalid in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.99] line 1228 dereference failure: deallocated dynamic object in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.100] line 1228 dereference failure: dead object in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.101] line 1228 dereference failure: pointer outside object bounds in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.102] line 1228 dereference failure: invalid integer address in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.103] line 1228 dereference failure: pointer NULL in write_set->linked_is_fresh->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.104] line 1228 dereference failure: pointer invalid in write_set->linked_is_fresh->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.105] line 1228 dereference failure: deallocated dynamic object in write_set->linked_is_fresh->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.106] line 1228 dereference failure: dead object in write_set->linked_is_fresh->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.107] line 1228 dereference failure: pointer outside object bounds in write_set->linked_is_fresh->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.108] line 1228 dereference failure: invalid integer address in write_set->linked_is_fresh->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.109] line 1232 dereference failure: pointer NULL in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.110] line 1232 dereference failure: pointer invalid in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.111] line 1232 dereference failure: deallocated dynamic object in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.112] line 1232 dereference failure: dead object in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.113] line 1232 dereference failure: pointer outside object bounds in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.114] line 1232 dereference failure: invalid integer address in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.assertion.3] line 1252 __CPROVER_is_fresh requires size <= __CPROVER_max_malloc_size: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.115] line 1259 dereference failure: pointer NULL in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.116] line 1259 dereference failure: pointer invalid in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.117] line 1259 dereference failure: deallocated dynamic object in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.118] line 1259 dereference failure: dead object in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.119] line 1259 dereference failure: pointer outside object bounds in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.120] line 1259 dereference failure: invalid integer address in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.121] line 1277 dereference failure: pointer NULL in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.122] line 1277 dereference failure: pointer invalid in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.123] line 1277 dereference failure: deallocated dynamic object in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.124] line 1277 dereference failure: dead object in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.125] line 1277 dereference failure: pointer outside object bounds in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.126] line 1277 dereference failure: invalid integer address in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.127] line 1277 dereference failure: pointer NULL in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.128] line 1277 dereference failure: pointer invalid in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.129] line 1277 dereference failure: deallocated dynamic object in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.130] line 1277 dereference failure: dead object in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.131] line 1277 dereference failure: pointer outside object bounds in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.132] line 1277 dereference failure: invalid integer address in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.133] line 1278 dereference failure: pointer NULL in write_set->linked_allocated->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.134] line 1278 dereference failure: pointer invalid in write_set->linked_allocated->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.135] line 1278 dereference failure: deallocated dynamic object in write_set->linked_allocated->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.136] line 1278 dereference failure: dead object in write_set->linked_allocated->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.137] line 1278 dereference failure: pointer outside object bounds in write_set->linked_allocated->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.138] line 1278 dereference failure: invalid integer address in write_set->linked_allocated->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.139] line 1278 dereference failure: pointer NULL in write_set->linked_allocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.140] line 1278 dereference failure: pointer invalid in write_set->linked_allocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.141] line 1278 dereference failure: deallocated dynamic object in write_set->linked_allocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.142] line 1278 dereference failure: dead object in write_set->linked_allocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.143] line 1278 dereference failure: pointer outside object bounds in write_set->linked_allocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.144] line 1278 dereference failure: invalid integer address in write_set->linked_allocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.145] line 1279 dereference failure: pointer NULL in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.146] line 1279 dereference failure: pointer invalid in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.147] line 1279 dereference failure: deallocated dynamic object in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.148] line 1279 dereference failure: dead object in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.149] line 1279 dereference failure: pointer outside object bounds in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.150] line 1279 dereference failure: invalid integer address in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.151] line 1279 dereference failure: pointer NULL in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.152] line 1279 dereference failure: pointer invalid in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.153] line 1279 dereference failure: deallocated dynamic object in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.154] line 1279 dereference failure: dead object in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.155] line 1279 dereference failure: pointer outside object bounds in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.156] line 1279 dereference failure: invalid integer address in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.157] line 1280 dereference failure: pointer NULL in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.158] line 1280 dereference failure: pointer invalid in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.159] line 1280 dereference failure: deallocated dynamic object in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.160] line 1280 dereference failure: dead object in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.161] line 1280 dereference failure: pointer outside object bounds in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.162] line 1280 dereference failure: invalid integer address in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.163] line 1280 dereference failure: pointer NULL in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.164] line 1280 dereference failure: pointer invalid in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.165] line 1280 dereference failure: deallocated dynamic object in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.166] line 1280 dereference failure: dead object in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.167] line 1280 dereference failure: pointer outside object bounds in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.168] line 1280 dereference failure: invalid integer address in write_set->linked_allocated->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.169] line 1281 dereference failure: pointer NULL in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.170] line 1281 dereference failure: pointer invalid in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.171] line 1281 dereference failure: deallocated dynamic object in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.172] line 1281 dereference failure: dead object in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.173] line 1281 dereference failure: pointer outside object bounds in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.174] line 1281 dereference failure: invalid integer address in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.175] line 1281 dereference failure: pointer NULL in write_set->linked_allocated->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.176] line 1281 dereference failure: pointer invalid in write_set->linked_allocated->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.177] line 1281 dereference failure: deallocated dynamic object in write_set->linked_allocated->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.178] line 1281 dereference failure: dead object in write_set->linked_allocated->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.179] line 1281 dereference failure: pointer outside object bounds in write_set->linked_allocated->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.180] line 1281 dereference failure: invalid integer address in write_set->linked_allocated->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.181] line 1281 dereference failure: pointer NULL in write_set->linked_allocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.182] line 1281 dereference failure: pointer invalid in write_set->linked_allocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.183] line 1281 dereference failure: deallocated dynamic object in write_set->linked_allocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.184] line 1281 dereference failure: dead object in write_set->linked_allocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.185] line 1281 dereference failure: pointer outside object bounds in write_set->linked_allocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.186] line 1281 dereference failure: invalid integer address in write_set->linked_allocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.187] line 1282 dereference failure: pointer NULL in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.188] line 1282 dereference failure: pointer invalid in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.189] line 1282 dereference failure: deallocated dynamic object in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.190] line 1282 dereference failure: dead object in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.191] line 1282 dereference failure: pointer outside object bounds in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.192] line 1282 dereference failure: invalid integer address in write_set->linked_allocated: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.193] line 1282 dereference failure: pointer NULL in write_set->linked_allocated->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.194] line 1282 dereference failure: pointer invalid in write_set->linked_allocated->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.195] line 1282 dereference failure: deallocated dynamic object in write_set->linked_allocated->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.196] line 1282 dereference failure: dead object in write_set->linked_allocated->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.197] line 1282 dereference failure: pointer outside object bounds in write_set->linked_allocated->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.198] line 1282 dereference failure: invalid integer address in write_set->linked_allocated->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.199] line 1286 dereference failure: pointer NULL in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.200] line 1286 dereference failure: pointer invalid in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.201] line 1286 dereference failure: deallocated dynamic object in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.202] line 1286 dereference failure: dead object in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.203] line 1286 dereference failure: pointer outside object bounds in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.204] line 1286 dereference failure: invalid integer address in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.205] line 1286 dereference failure: pointer NULL in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.206] line 1286 dereference failure: pointer invalid in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.207] line 1286 dereference failure: deallocated dynamic object in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.208] line 1286 dereference failure: dead object in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.209] line 1286 dereference failure: pointer outside object bounds in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.210] line 1286 dereference failure: invalid integer address in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.211] line 1294 dereference failure: pointer NULL in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.212] line 1294 dereference failure: pointer invalid in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.213] line 1294 dereference failure: deallocated dynamic object in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.214] line 1294 dereference failure: dead object in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.215] line 1294 dereference failure: pointer outside object bounds in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.216] line 1294 dereference failure: invalid integer address in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.217] line 1295 dereference failure: pointer NULL in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.218] line 1295 dereference failure: pointer invalid in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.219] line 1295 dereference failure: deallocated dynamic object in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.220] line 1295 dereference failure: dead object in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.221] line 1295 dereference failure: pointer outside object bounds in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.222] line 1295 dereference failure: invalid integer address in *elem: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.223] line 1307 dereference failure: pointer NULL in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.224] line 1307 dereference failure: pointer invalid in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.225] line 1307 dereference failure: deallocated dynamic object in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.226] line 1307 dereference failure: dead object in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.227] line 1307 dereference failure: pointer outside object bounds in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.228] line 1307 dereference failure: invalid integer address in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.229] line 1307 dereference failure: pointer NULL in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.230] line 1307 dereference failure: pointer invalid in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.231] line 1307 dereference failure: deallocated dynamic object in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.232] line 1307 dereference failure: dead object in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.233] line 1307 dereference failure: pointer outside object bounds in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.234] line 1307 dereference failure: invalid integer address in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.235] line 1315 dereference failure: pointer NULL in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.236] line 1315 dereference failure: pointer invalid in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.237] line 1315 dereference failure: deallocated dynamic object in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.238] line 1315 dereference failure: dead object in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.239] line 1315 dereference failure: pointer outside object bounds in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.240] line 1315 dereference failure: invalid integer address in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.241] line 1316 dereference failure: pointer NULL in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.242] line 1316 dereference failure: pointer invalid in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.243] line 1316 dereference failure: deallocated dynamic object in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.244] line 1316 dereference failure: dead object in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.245] line 1316 dereference failure: pointer outside object bounds in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.246] line 1316 dereference failure: invalid integer address in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.247] line 1316 dereference failure: pointer NULL in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.248] line 1316 dereference failure: pointer invalid in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.249] line 1316 dereference failure: deallocated dynamic object in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.250] line 1316 dereference failure: dead object in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.251] line 1316 dereference failure: pointer outside object bounds in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.252] line 1316 dereference failure: invalid integer address in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.253] line 1316 dereference failure: pointer NULL in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.254] line 1316 dereference failure: pointer invalid in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.255] line 1316 dereference failure: deallocated dynamic object in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.256] line 1316 dereference failure: dead object in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.257] line 1316 dereference failure: pointer outside object bounds in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.258] line 1316 dereference failure: invalid integer address in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.259] line 1316 dereference failure: pointer NULL in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.260] line 1316 dereference failure: pointer invalid in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.261] line 1316 dereference failure: deallocated dynamic object in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.262] line 1316 dereference failure: dead object in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.263] line 1316 dereference failure: pointer outside object bounds in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.264] line 1316 dereference failure: invalid integer address in seen->nof_elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.265] line 1317 dereference failure: pointer NULL in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.266] line 1317 dereference failure: pointer invalid in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.267] line 1317 dereference failure: deallocated dynamic object in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.268] line 1317 dereference failure: dead object in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.269] line 1317 dereference failure: pointer outside object bounds in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.270] line 1317 dereference failure: invalid integer address in seen->elems: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.271] line 1317 dereference failure: pointer NULL in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.272] line 1317 dereference failure: pointer invalid in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.273] line 1317 dereference failure: deallocated dynamic object in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.274] line 1317 dereference failure: dead object in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.275] line 1317 dereference failure: pointer outside object bounds in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.276] line 1317 dereference failure: invalid integer address in seen->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.277] line 1318 dereference failure: pointer NULL in seen->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.278] line 1318 dereference failure: pointer invalid in seen->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.279] line 1318 dereference failure: deallocated dynamic object in seen->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.280] line 1318 dereference failure: dead object in seen->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.281] line 1318 dereference failure: pointer outside object bounds in seen->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.pointer_dereference.282] line 1318 dereference failure: invalid integer address in seen->is_empty: SUCCESS
[__CPROVER_contracts_is_fresh.assertion.4] line 1325 __CPROVER_is_fresh is only called in requires or ensures clauses: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_link_allocated
[__CPROVER_contracts_link_allocated.pointer_dereference.1] line 1094 dereference failure: pointer NULL in write_set_postconditions->linked_allocated: SUCCESS
[__CPROVER_contracts_link_allocated.pointer_dereference.2] line 1094 dereference failure: pointer invalid in write_set_postconditions->linked_allocated: SUCCESS
[__CPROVER_contracts_link_allocated.pointer_dereference.3] line 1094 dereference failure: deallocated dynamic object in write_set_postconditions->linked_allocated: SUCCESS
[__CPROVER_contracts_link_allocated.pointer_dereference.4] line 1094 dereference failure: dead object in write_set_postconditions->linked_allocated: SUCCESS
[__CPROVER_contracts_link_allocated.pointer_dereference.5] line 1094 dereference failure: pointer outside object bounds in write_set_postconditions->linked_allocated: SUCCESS
[__CPROVER_contracts_link_allocated.pointer_dereference.6] line 1094 dereference failure: invalid integer address in write_set_postconditions->linked_allocated: SUCCESS
[__CPROVER_contracts_link_allocated.pointer_dereference.7] line 1099 dereference failure: pointer NULL in write_set_postconditions->linked_allocated: SUCCESS
[__CPROVER_contracts_link_allocated.pointer_dereference.8] line 1099 dereference failure: pointer invalid in write_set_postconditions->linked_allocated: SUCCESS
[__CPROVER_contracts_link_allocated.pointer_dereference.9] line 1099 dereference failure: deallocated dynamic object in write_set_postconditions->linked_allocated: SUCCESS
[__CPROVER_contracts_link_allocated.pointer_dereference.10] line 1099 dereference failure: dead object in write_set_postconditions->linked_allocated: SUCCESS
[__CPROVER_contracts_link_allocated.pointer_dereference.11] line 1099 dereference failure: pointer outside object bounds in write_set_postconditions->linked_allocated: SUCCESS
[__CPROVER_contracts_link_allocated.pointer_dereference.12] line 1099 dereference failure: invalid integer address in write_set_postconditions->linked_allocated: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_link_deallocated
[__CPROVER_contracts_link_deallocated.pointer_dereference.1] line 1119 dereference failure: pointer NULL in write_set_postconditions->linked_deallocated: SUCCESS
[__CPROVER_contracts_link_deallocated.pointer_dereference.2] line 1119 dereference failure: pointer invalid in write_set_postconditions->linked_deallocated: SUCCESS
[__CPROVER_contracts_link_deallocated.pointer_dereference.3] line 1119 dereference failure: deallocated dynamic object in write_set_postconditions->linked_deallocated: SUCCESS
[__CPROVER_contracts_link_deallocated.pointer_dereference.4] line 1119 dereference failure: dead object in write_set_postconditions->linked_deallocated: SUCCESS
[__CPROVER_contracts_link_deallocated.pointer_dereference.5] line 1119 dereference failure: pointer outside object bounds in write_set_postconditions->linked_deallocated: SUCCESS
[__CPROVER_contracts_link_deallocated.pointer_dereference.6] line 1119 dereference failure: invalid integer address in write_set_postconditions->linked_deallocated: SUCCESS
[__CPROVER_contracts_link_deallocated.pointer_dereference.7] line 1124 dereference failure: pointer NULL in write_set_postconditions->linked_deallocated: SUCCESS
[__CPROVER_contracts_link_deallocated.pointer_dereference.8] line 1124 dereference failure: pointer invalid in write_set_postconditions->linked_deallocated: SUCCESS
[__CPROVER_contracts_link_deallocated.pointer_dereference.9] line 1124 dereference failure: deallocated dynamic object in write_set_postconditions->linked_deallocated: SUCCESS
[__CPROVER_contracts_link_deallocated.pointer_dereference.10] line 1124 dereference failure: dead object in write_set_postconditions->linked_deallocated: SUCCESS
[__CPROVER_contracts_link_deallocated.pointer_dereference.11] line 1124 dereference failure: pointer outside object bounds in write_set_postconditions->linked_deallocated: SUCCESS
[__CPROVER_contracts_link_deallocated.pointer_dereference.12] line 1124 dereference failure: invalid integer address in write_set_postconditions->linked_deallocated: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_link_is_fresh
[__CPROVER_contracts_link_is_fresh.pointer_dereference.1] line 1071 dereference failure: pointer NULL in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_link_is_fresh.pointer_dereference.2] line 1071 dereference failure: pointer invalid in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_link_is_fresh.pointer_dereference.3] line 1071 dereference failure: deallocated dynamic object in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_link_is_fresh.pointer_dereference.4] line 1071 dereference failure: dead object in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_link_is_fresh.pointer_dereference.5] line 1071 dereference failure: pointer outside object bounds in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_link_is_fresh.pointer_dereference.6] line 1071 dereference failure: invalid integer address in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_link_is_fresh.pointer_dereference.7] line 1075 dereference failure: pointer NULL in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_link_is_fresh.pointer_dereference.8] line 1075 dereference failure: pointer invalid in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_link_is_fresh.pointer_dereference.9] line 1075 dereference failure: deallocated dynamic object in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_link_is_fresh.pointer_dereference.10] line 1075 dereference failure: dead object in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_link_is_fresh.pointer_dereference.11] line 1075 dereference failure: pointer outside object bounds in write_set->linked_is_fresh: SUCCESS
[__CPROVER_contracts_link_is_fresh.pointer_dereference.12] line 1075 dereference failure: invalid integer address in write_set->linked_is_fresh: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_obeys_contract
[__CPROVER_contracts_obeys_contract.assertion.1] line 1533 __CPROVER_obeys_contract is used only in requires or ensures clauses: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.1] line 1535 dereference failure: pointer NULL in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.2] line 1535 dereference failure: pointer invalid in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.3] line 1535 dereference failure: deallocated dynamic object in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.4] line 1535 dereference failure: dead object in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.5] line 1535 dereference failure: pointer outside object bounds in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.6] line 1535 dereference failure: invalid integer address in set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.7] line 1535 dereference failure: pointer NULL in set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.8] line 1535 dereference failure: pointer invalid in set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.9] line 1535 dereference failure: deallocated dynamic object in set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.10] line 1535 dereference failure: dead object in set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.11] line 1535 dereference failure: pointer outside object bounds in set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.12] line 1535 dereference failure: invalid integer address in set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.13] line 1536 dereference failure: pointer NULL in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.14] line 1536 dereference failure: pointer invalid in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.15] line 1536 dereference failure: deallocated dynamic object in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.16] line 1536 dereference failure: dead object in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.17] line 1536 dereference failure: pointer outside object bounds in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.18] line 1536 dereference failure: invalid integer address in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.19] line 1536 dereference failure: pointer NULL in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.20] line 1536 dereference failure: pointer invalid in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.21] line 1536 dereference failure: deallocated dynamic object in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.22] line 1536 dereference failure: dead object in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.23] line 1536 dereference failure: pointer outside object bounds in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.24] line 1536 dereference failure: invalid integer address in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.25] line 1545 dereference failure: pointer NULL in *function_pointer: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.26] line 1545 dereference failure: pointer invalid in *function_pointer: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.27] line 1545 dereference failure: deallocated dynamic object in *function_pointer: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.28] line 1545 dereference failure: dead object in *function_pointer: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.29] line 1545 dereference failure: pointer outside object bounds in *function_pointer: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.30] line 1545 dereference failure: invalid integer address in *function_pointer: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.31] line 1551 dereference failure: pointer NULL in *function_pointer: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.32] line 1551 dereference failure: pointer invalid in *function_pointer: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.33] line 1551 dereference failure: deallocated dynamic object in *function_pointer: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.34] line 1551 dereference failure: dead object in *function_pointer: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.35] line 1551 dereference failure: pointer outside object bounds in *function_pointer: SUCCESS
[__CPROVER_contracts_obeys_contract.pointer_dereference.36] line 1551 dereference failure: invalid integer address in *function_pointer: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_obj_set_add
[__CPROVER_contracts_obj_set_add.pointer_dereference.1] line 314 dereference failure: pointer NULL in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.2] line 314 dereference failure: pointer invalid in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.3] line 314 dereference failure: deallocated dynamic object in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.4] line 314 dereference failure: dead object in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.5] line 314 dereference failure: pointer outside object bounds in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.6] line 314 dereference failure: invalid integer address in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.7] line 314 dereference failure: pointer NULL in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.8] line 314 dereference failure: pointer invalid in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.9] line 314 dereference failure: deallocated dynamic object in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.10] line 314 dereference failure: dead object in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.11] line 314 dereference failure: pointer outside object bounds in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.12] line 314 dereference failure: invalid integer address in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.13] line 314 dereference failure: pointer NULL in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.14] line 314 dereference failure: pointer invalid in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.15] line 314 dereference failure: deallocated dynamic object in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.16] line 314 dereference failure: dead object in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.17] line 314 dereference failure: pointer outside object bounds in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.18] line 314 dereference failure: invalid integer address in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.19] line 314 dereference failure: pointer NULL in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.20] line 314 dereference failure: pointer invalid in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.21] line 314 dereference failure: deallocated dynamic object in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.22] line 314 dereference failure: dead object in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.23] line 314 dereference failure: pointer outside object bounds in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.24] line 314 dereference failure: invalid integer address in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.25] line 314 dereference failure: pointer NULL in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.26] line 314 dereference failure: pointer invalid in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.27] line 314 dereference failure: deallocated dynamic object in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.28] line 314 dereference failure: dead object in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.29] line 314 dereference failure: pointer outside object bounds in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.30] line 314 dereference failure: invalid integer address in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.31] line 315 dereference failure: pointer NULL in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.32] line 315 dereference failure: pointer invalid in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.33] line 315 dereference failure: deallocated dynamic object in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.34] line 315 dereference failure: dead object in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.35] line 315 dereference failure: pointer outside object bounds in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.36] line 315 dereference failure: invalid integer address in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.37] line 315 dereference failure: pointer NULL in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.38] line 315 dereference failure: pointer invalid in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.39] line 315 dereference failure: deallocated dynamic object in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.40] line 315 dereference failure: dead object in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.41] line 315 dereference failure: pointer outside object bounds in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.42] line 315 dereference failure: invalid integer address in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.43] line 316 dereference failure: pointer NULL in set->is_empty: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.44] line 316 dereference failure: pointer invalid in set->is_empty: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.45] line 316 dereference failure: deallocated dynamic object in set->is_empty: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.46] line 316 dereference failure: dead object in set->is_empty: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.47] line 316 dereference failure: pointer outside object bounds in set->is_empty: SUCCESS
[__CPROVER_contracts_obj_set_add.pointer_dereference.48] line 316 dereference failure: invalid integer address in set->is_empty: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_obj_set_append
[__CPROVER_contracts_obj_set_append.pointer_dereference.1] line 332 dereference failure: pointer NULL in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.2] line 332 dereference failure: pointer invalid in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.3] line 332 dereference failure: deallocated dynamic object in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.4] line 332 dereference failure: dead object in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.5] line 332 dereference failure: pointer outside object bounds in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.6] line 332 dereference failure: invalid integer address in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.7] line 332 dereference failure: pointer NULL in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.8] line 332 dereference failure: pointer invalid in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.9] line 332 dereference failure: deallocated dynamic object in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.10] line 332 dereference failure: dead object in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.11] line 332 dereference failure: pointer outside object bounds in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.12] line 332 dereference failure: invalid integer address in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.13] line 333 dereference failure: pointer NULL in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.14] line 333 dereference failure: pointer invalid in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.15] line 333 dereference failure: deallocated dynamic object in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.16] line 333 dereference failure: dead object in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.17] line 333 dereference failure: pointer outside object bounds in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.18] line 333 dereference failure: invalid integer address in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.19] line 333 dereference failure: pointer NULL in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.20] line 333 dereference failure: pointer invalid in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.21] line 333 dereference failure: deallocated dynamic object in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.22] line 333 dereference failure: dead object in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.23] line 333 dereference failure: pointer outside object bounds in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.24] line 333 dereference failure: invalid integer address in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.25] line 333 dereference failure: pointer NULL in set->elems[(signed long int)set->watermark]: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.26] line 333 dereference failure: pointer invalid in set->elems[(signed long int)set->watermark]: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.27] line 333 dereference failure: deallocated dynamic object in set->elems[(signed long int)set->watermark]: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.28] line 333 dereference failure: dead object in set->elems[(signed long int)set->watermark]: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.29] line 333 dereference failure: pointer outside object bounds in set->elems[(signed long int)set->watermark]: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.30] line 333 dereference failure: invalid integer address in set->elems[(signed long int)set->watermark]: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.31] line 334 dereference failure: pointer NULL in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.32] line 334 dereference failure: pointer invalid in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.33] line 334 dereference failure: deallocated dynamic object in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.34] line 334 dereference failure: dead object in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.35] line 334 dereference failure: pointer outside object bounds in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.36] line 334 dereference failure: invalid integer address in set->watermark: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.37] line 335 dereference failure: pointer NULL in set->is_empty: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.38] line 335 dereference failure: pointer invalid in set->is_empty: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.39] line 335 dereference failure: deallocated dynamic object in set->is_empty: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.40] line 335 dereference failure: dead object in set->is_empty: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.41] line 335 dereference failure: pointer outside object bounds in set->is_empty: SUCCESS
[__CPROVER_contracts_obj_set_append.pointer_dereference.42] line 335 dereference failure: invalid integer address in set->is_empty: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_obj_set_contains
[__CPROVER_contracts_obj_set_contains.pointer_dereference.1] line 372 dereference failure: pointer NULL in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_contains.pointer_dereference.2] line 372 dereference failure: pointer invalid in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_contains.pointer_dereference.3] line 372 dereference failure: deallocated dynamic object in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_contains.pointer_dereference.4] line 372 dereference failure: dead object in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_contains.pointer_dereference.5] line 372 dereference failure: pointer outside object bounds in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_contains.pointer_dereference.6] line 372 dereference failure: invalid integer address in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_contains.pointer_dereference.7] line 372 dereference failure: pointer NULL in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_contains.pointer_dereference.8] line 372 dereference failure: pointer invalid in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_contains.pointer_dereference.9] line 372 dereference failure: deallocated dynamic object in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_contains.pointer_dereference.10] line 372 dereference failure: dead object in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_contains.pointer_dereference.11] line 372 dereference failure: pointer outside object bounds in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_contains.pointer_dereference.12] line 372 dereference failure: invalid integer address in set->elems[(signed long int)object_id]: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_obj_set_contains_exact
[__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.1] line 389 dereference failure: pointer NULL in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.2] line 389 dereference failure: pointer invalid in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.3] line 389 dereference failure: deallocated dynamic object in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.4] line 389 dereference failure: dead object in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.5] line 389 dereference failure: pointer outside object bounds in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.6] line 389 dereference failure: invalid integer address in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.7] line 389 dereference failure: pointer NULL in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.8] line 389 dereference failure: pointer invalid in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.9] line 389 dereference failure: deallocated dynamic object in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.10] line 389 dereference failure: dead object in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.11] line 389 dereference failure: pointer outside object bounds in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.12] line 389 dereference failure: invalid integer address in set->elems[(signed long int)object_id]: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_obj_set_create_append
[__CPROVER_contracts_obj_set_create_append.pointer_dereference.1] line 278 dereference failure: pointer NULL in *set: SUCCESS
[__CPROVER_contracts_obj_set_create_append.pointer_dereference.2] line 278 dereference failure: pointer invalid in *set: SUCCESS
[__CPROVER_contracts_obj_set_create_append.pointer_dereference.3] line 278 dereference failure: deallocated dynamic object in *set: SUCCESS
[__CPROVER_contracts_obj_set_create_append.pointer_dereference.4] line 278 dereference failure: dead object in *set: SUCCESS
[__CPROVER_contracts_obj_set_create_append.pointer_dereference.5] line 278 dereference failure: pointer outside object bounds in *set: SUCCESS
[__CPROVER_contracts_obj_set_create_append.pointer_dereference.6] line 278 dereference failure: invalid integer address in *set: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_obj_set_create_indexed_by_object_id
[__CPROVER_contracts_obj_set_create_indexed_by_object_id.bit_count.1] line 251 count leading zeros is undefined for value zero in __builtin_clz(__CPROVER_max_malloc_size): UNKNOWN
[__CPROVER_contracts_obj_set_create_indexed_by_object_id.bit_count.2] line 251 count leading zeros is undefined for value zero in __builtin_clz(__CPROVER_max_malloc_size): UNKNOWN
[__CPROVER_contracts_obj_set_create_indexed_by_object_id.bit_count.3] line 251 count leading zeros is undefined for value zero in __builtin_clz(__CPROVER_max_malloc_size): UNKNOWN
[__CPROVER_contracts_obj_set_create_indexed_by_object_id.bit_count.4] line 251 count leading zeros is undefined for value zero in __builtin_clz(__CPROVER_max_malloc_size): SUCCESS
[__CPROVER_contracts_obj_set_create_indexed_by_object_id.undefined-shift.1] line 252 shift distance is negative in 1ul << object_bits: SUCCESS
[__CPROVER_contracts_obj_set_create_indexed_by_object_id.undefined-shift.2] line 252 shift distance too large in 1ul << object_bits: SUCCESS
[__CPROVER_contracts_obj_set_create_indexed_by_object_id.pointer_dereference.1] line 254 dereference failure: pointer NULL in *set: SUCCESS
[__CPROVER_contracts_obj_set_create_indexed_by_object_id.pointer_dereference.2] line 254 dereference failure: pointer invalid in *set: SUCCESS
[__CPROVER_contracts_obj_set_create_indexed_by_object_id.pointer_dereference.3] line 254 dereference failure: deallocated dynamic object in *set: SUCCESS
[__CPROVER_contracts_obj_set_create_indexed_by_object_id.pointer_dereference.4] line 254 dereference failure: dead object in *set: SUCCESS
[__CPROVER_contracts_obj_set_create_indexed_by_object_id.pointer_dereference.5] line 254 dereference failure: pointer outside object bounds in *set: SUCCESS
[__CPROVER_contracts_obj_set_create_indexed_by_object_id.pointer_dereference.6] line 254 dereference failure: invalid integer address in *set: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_obj_set_release
[__CPROVER_contracts_obj_set_release.pointer_dereference.1] line 297 dereference failure: pointer NULL in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_release.pointer_dereference.2] line 297 dereference failure: pointer invalid in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_release.pointer_dereference.3] line 297 dereference failure: deallocated dynamic object in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_release.pointer_dereference.4] line 297 dereference failure: dead object in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_release.pointer_dereference.5] line 297 dereference failure: pointer outside object bounds in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_release.pointer_dereference.6] line 297 dereference failure: invalid integer address in set->elems: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_obj_set_remove
[__CPROVER_contracts_obj_set_remove.pointer_dereference.1] line 352 dereference failure: pointer NULL in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.2] line 352 dereference failure: pointer invalid in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.3] line 352 dereference failure: deallocated dynamic object in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.4] line 352 dereference failure: dead object in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.5] line 352 dereference failure: pointer outside object bounds in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.6] line 352 dereference failure: invalid integer address in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.7] line 352 dereference failure: pointer NULL in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.8] line 352 dereference failure: pointer invalid in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.9] line 352 dereference failure: deallocated dynamic object in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.10] line 352 dereference failure: dead object in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.11] line 352 dereference failure: pointer outside object bounds in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.12] line 352 dereference failure: invalid integer address in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.13] line 352 dereference failure: pointer NULL in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.14] line 352 dereference failure: pointer invalid in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.15] line 352 dereference failure: deallocated dynamic object in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.16] line 352 dereference failure: dead object in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.17] line 352 dereference failure: pointer outside object bounds in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.18] line 352 dereference failure: invalid integer address in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.19] line 352 dereference failure: pointer NULL in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.20] line 352 dereference failure: pointer invalid in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.21] line 352 dereference failure: deallocated dynamic object in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.22] line 352 dereference failure: dead object in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.23] line 352 dereference failure: pointer outside object bounds in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.24] line 352 dereference failure: invalid integer address in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.25] line 352 dereference failure: pointer NULL in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.26] line 352 dereference failure: pointer invalid in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.27] line 352 dereference failure: deallocated dynamic object in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.28] line 352 dereference failure: dead object in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.29] line 352 dereference failure: pointer outside object bounds in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.30] line 352 dereference failure: invalid integer address in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.31] line 353 dereference failure: pointer NULL in set->is_empty: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.32] line 353 dereference failure: pointer invalid in set->is_empty: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.33] line 353 dereference failure: deallocated dynamic object in set->is_empty: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.34] line 353 dereference failure: dead object in set->is_empty: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.35] line 353 dereference failure: pointer outside object bounds in set->is_empty: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.36] line 353 dereference failure: invalid integer address in set->is_empty: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.37] line 353 dereference failure: pointer NULL in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.38] line 353 dereference failure: pointer invalid in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.39] line 353 dereference failure: deallocated dynamic object in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.40] line 353 dereference failure: dead object in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.41] line 353 dereference failure: pointer outside object bounds in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.42] line 353 dereference failure: invalid integer address in set->nof_elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.43] line 354 dereference failure: pointer NULL in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.44] line 354 dereference failure: pointer invalid in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.45] line 354 dereference failure: deallocated dynamic object in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.46] line 354 dereference failure: dead object in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.47] line 354 dereference failure: pointer outside object bounds in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.48] line 354 dereference failure: invalid integer address in set->elems: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.49] line 354 dereference failure: pointer NULL in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.50] line 354 dereference failure: pointer invalid in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.51] line 354 dereference failure: deallocated dynamic object in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.52] line 354 dereference failure: dead object in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.53] line 354 dereference failure: pointer outside object bounds in set->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_obj_set_remove.pointer_dereference.54] line 354 dereference failure: invalid integer address in set->elems[(signed long int)object_id]: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_pointer_in_range_dfcc
[__CPROVER_contracts_pointer_in_range_dfcc.assertion.1] line 1339 __CPROVER_pointer_in_range_dfcc is used only in requires or ensures clauses: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.1] line 1340 dereference failure: pointer NULL in write_set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.2] line 1340 dereference failure: pointer invalid in write_set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.3] line 1340 dereference failure: deallocated dynamic object in write_set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.4] line 1340 dereference failure: dead object in write_set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.5] line 1340 dereference failure: pointer outside object bounds in write_set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.6] line 1340 dereference failure: invalid integer address in write_set->assume_requires_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.7] line 1341 dereference failure: pointer NULL in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.8] line 1341 dereference failure: pointer invalid in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.9] line 1341 dereference failure: deallocated dynamic object in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.10] line 1341 dereference failure: dead object in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.11] line 1341 dereference failure: pointer outside object bounds in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.12] line 1341 dereference failure: invalid integer address in write_set->assert_requires_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.13] line 1342 dereference failure: pointer NULL in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.14] line 1342 dereference failure: pointer invalid in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.15] line 1342 dereference failure: deallocated dynamic object in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.16] line 1342 dereference failure: dead object in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.17] line 1342 dereference failure: pointer outside object bounds in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.18] line 1342 dereference failure: invalid integer address in write_set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.19] line 1343 dereference failure: pointer NULL in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.20] line 1343 dereference failure: pointer invalid in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.21] line 1343 dereference failure: deallocated dynamic object in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.22] line 1343 dereference failure: dead object in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.23] line 1343 dereference failure: pointer outside object bounds in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.24] line 1343 dereference failure: invalid integer address in write_set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.assertion.2] line 1346 lb pointer must be valid: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.assertion.3] line 1347 ub pointer must be valid: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.assertion.4] line 1348 lb and ub pointers must have the same object: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.assertion.5] line 1353 lb and ub pointers must be ordered: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.25] line 1366 dereference failure: pointer NULL in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.26] line 1366 dereference failure: pointer invalid in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.27] line 1366 dereference failure: deallocated dynamic object in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.28] line 1366 dereference failure: dead object in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.29] line 1366 dereference failure: pointer outside object bounds in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.30] line 1366 dereference failure: invalid integer address in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.31] line 1371 dereference failure: pointer NULL in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.32] line 1371 dereference failure: pointer invalid in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.33] line 1371 dereference failure: deallocated dynamic object in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.34] line 1371 dereference failure: dead object in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.35] line 1371 dereference failure: pointer outside object bounds in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.36] line 1371 dereference failure: invalid integer address in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.37] line 1372 dereference failure: pointer NULL in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.38] line 1372 dereference failure: pointer invalid in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.39] line 1372 dereference failure: deallocated dynamic object in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.40] line 1372 dereference failure: dead object in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.41] line 1372 dereference failure: pointer outside object bounds in *ptr: SUCCESS
[__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.42] line 1372 dereference failure: invalid integer address in *ptr: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_was_freed
[__CPROVER_contracts_was_freed.assertion.1] line 1471 __CPROVER_was_freed is used only in ensures clauses: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.1] line 1473 dereference failure: pointer NULL in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.2] line 1473 dereference failure: pointer invalid in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.3] line 1473 dereference failure: deallocated dynamic object in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.4] line 1473 dereference failure: dead object in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.5] line 1473 dereference failure: pointer outside object bounds in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.6] line 1473 dereference failure: invalid integer address in set->assume_ensures_ctx: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.7] line 1473 dereference failure: pointer NULL in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.8] line 1473 dereference failure: pointer invalid in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.9] line 1473 dereference failure: deallocated dynamic object in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.10] line 1473 dereference failure: dead object in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.11] line 1473 dereference failure: pointer outside object bounds in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.12] line 1473 dereference failure: invalid integer address in set->assert_ensures_ctx: SUCCESS
[__CPROVER_contracts_was_freed.assertion.2] line 1475 linked_deallocated is not null: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.13] line 1476 dereference failure: pointer NULL in set->linked_deallocated: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.14] line 1476 dereference failure: pointer invalid in set->linked_deallocated: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.15] line 1476 dereference failure: deallocated dynamic object in set->linked_deallocated: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.16] line 1476 dereference failure: dead object in set->linked_deallocated: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.17] line 1476 dereference failure: pointer outside object bounds in set->linked_deallocated: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.18] line 1476 dereference failure: invalid integer address in set->linked_deallocated: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.19] line 1483 dereference failure: pointer NULL in set->linked_deallocated->elems: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.20] line 1483 dereference failure: pointer invalid in set->linked_deallocated->elems: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.21] line 1483 dereference failure: deallocated dynamic object in set->linked_deallocated->elems: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.22] line 1483 dereference failure: dead object in set->linked_deallocated->elems: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.23] line 1483 dereference failure: pointer outside object bounds in set->linked_deallocated->elems: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.24] line 1483 dereference failure: invalid integer address in set->linked_deallocated->elems: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.25] line 1483 dereference failure: pointer NULL in set->linked_deallocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.26] line 1483 dereference failure: pointer invalid in set->linked_deallocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.27] line 1483 dereference failure: deallocated dynamic object in set->linked_deallocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.28] line 1483 dereference failure: dead object in set->linked_deallocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.29] line 1483 dereference failure: pointer outside object bounds in set->linked_deallocated->elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_was_freed.pointer_dereference.30] line 1483 dereference failure: invalid integer address in set->linked_deallocated->elems[(signed long int)object_id]: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_write_set_add_allocated
[__CPROVER_contracts_write_set_add_allocated.assertion.1] line 604 dynamic allocation is allowed: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_write_set_add_freeable
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.1] line 578 dereference failure: pointer NULL in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.2] line 578 dereference failure: pointer invalid in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.3] line 578 dereference failure: deallocated dynamic object in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.4] line 578 dereference failure: dead object in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.5] line 578 dereference failure: pointer outside object bounds in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.6] line 578 dereference failure: invalid integer address in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.7] line 578 dereference failure: pointer NULL in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.8] line 578 dereference failure: pointer invalid in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.9] line 578 dereference failure: deallocated dynamic object in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.10] line 578 dereference failure: dead object in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.11] line 578 dereference failure: pointer outside object bounds in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.12] line 578 dereference failure: invalid integer address in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.13] line 579 dereference failure: pointer NULL in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.14] line 579 dereference failure: pointer invalid in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.15] line 579 dereference failure: deallocated dynamic object in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.16] line 579 dereference failure: dead object in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.17] line 579 dereference failure: pointer outside object bounds in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.18] line 579 dereference failure: invalid integer address in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.19] line 580 dereference failure: pointer NULL in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.20] line 580 dereference failure: pointer invalid in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.21] line 580 dereference failure: deallocated dynamic object in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.22] line 580 dereference failure: dead object in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.23] line 580 dereference failure: pointer outside object bounds in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.24] line 580 dereference failure: invalid integer address in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.25] line 581 dereference failure: pointer NULL in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.26] line 581 dereference failure: pointer invalid in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.27] line 581 dereference failure: deallocated dynamic object in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.28] line 581 dereference failure: dead object in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.29] line 581 dereference failure: pointer outside object bounds in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.30] line 581 dereference failure: invalid integer address in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.31] line 581 dereference failure: pointer NULL in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.32] line 581 dereference failure: pointer invalid in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.33] line 581 dereference failure: deallocated dynamic object in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.34] line 581 dereference failure: dead object in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.35] line 581 dereference failure: pointer outside object bounds in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.36] line 581 dereference failure: invalid integer address in set->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.37] line 582 dereference failure: pointer NULL in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.38] line 582 dereference failure: pointer invalid in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.39] line 582 dereference failure: deallocated dynamic object in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.40] line 582 dereference failure: dead object in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.41] line 582 dereference failure: pointer outside object bounds in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.42] line 582 dereference failure: invalid integer address in set->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.43] line 589 dereference failure: pointer NULL in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.44] line 589 dereference failure: pointer invalid in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.45] line 589 dereference failure: deallocated dynamic object in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.46] line 589 dereference failure: dead object in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.47] line 589 dereference failure: pointer outside object bounds in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.48] line 589 dereference failure: invalid integer address in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.49] line 590 dereference failure: pointer NULL in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.50] line 590 dereference failure: pointer invalid in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.51] line 590 dereference failure: deallocated dynamic object in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.52] line 590 dereference failure: dead object in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.53] line 590 dereference failure: pointer outside object bounds in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.54] line 590 dereference failure: invalid integer address in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.55] line 590 dereference failure: pointer NULL in set->contract_frees_append.elems[(signed long int)set->contract_frees_append.watermark]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.56] line 590 dereference failure: pointer invalid in set->contract_frees_append.elems[(signed long int)set->contract_frees_append.watermark]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.57] line 590 dereference failure: deallocated dynamic object in set->contract_frees_append.elems[(signed long int)set->contract_frees_append.watermark]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.58] line 590 dereference failure: dead object in set->contract_frees_append.elems[(signed long int)set->contract_frees_append.watermark]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.59] line 590 dereference failure: pointer outside object bounds in set->contract_frees_append.elems[(signed long int)set->contract_frees_append.watermark]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.60] line 590 dereference failure: invalid integer address in set->contract_frees_append.elems[(signed long int)set->contract_frees_append.watermark]: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.61] line 591 dereference failure: pointer NULL in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.62] line 591 dereference failure: pointer invalid in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.63] line 591 dereference failure: deallocated dynamic object in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.64] line 591 dereference failure: dead object in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.65] line 591 dereference failure: pointer outside object bounds in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.66] line 591 dereference failure: invalid integer address in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.67] line 592 dereference failure: pointer NULL in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.68] line 592 dereference failure: pointer invalid in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.69] line 592 dereference failure: deallocated dynamic object in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.70] line 592 dereference failure: dead object in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.71] line 592 dereference failure: pointer outside object bounds in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_add_freeable.pointer_dereference.72] line 592 dereference failure: invalid integer address in set->contract_frees_append: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_write_set_check_allocated_deallocated_is_empty
[__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.1] line 729 dereference failure: pointer NULL in set->allocated: SUCCESS
[__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.2] line 729 dereference failure: pointer invalid in set->allocated: SUCCESS
[__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.3] line 729 dereference failure: deallocated dynamic object in set->allocated: SUCCESS
[__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.4] line 729 dereference failure: dead object in set->allocated: SUCCESS
[__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.5] line 729 dereference failure: pointer outside object bounds in set->allocated: SUCCESS
[__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.6] line 729 dereference failure: invalid integer address in set->allocated: SUCCESS
[__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.7] line 729 dereference failure: pointer NULL in set->deallocated: SUCCESS
[__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.8] line 729 dereference failure: pointer invalid in set->deallocated: SUCCESS
[__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.9] line 729 dereference failure: deallocated dynamic object in set->deallocated: SUCCESS
[__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.10] line 729 dereference failure: dead object in set->deallocated: SUCCESS
[__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.11] line 729 dereference failure: pointer outside object bounds in set->deallocated: SUCCESS
[__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.12] line 729 dereference failure: invalid integer address in set->deallocated: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_write_set_check_assignment
[__CPROVER_contracts_write_set_check_assignment.assertion.1] line 775 ptr NULL or writable up to size: UNKNOWN
[__CPROVER_contracts_write_set_check_assignment.assertion.4] line 775 ptr NULL or writable up to size: UNKNOWN
[__CPROVER_contracts_write_set_check_assignment.assertion.7] line 775 ptr NULL or writable up to size: UNKNOWN
[__CPROVER_contracts_write_set_check_assignment.assertion.10] line 775 ptr NULL or writable up to size: SUCCESS
[__CPROVER_contracts_write_set_check_assignment.assertion.2] line 792 CAR size is less than __CPROVER_max_malloc_size: UNKNOWN
[__CPROVER_contracts_write_set_check_assignment.assertion.5] line 792 CAR size is less than __CPROVER_max_malloc_size: UNKNOWN
[__CPROVER_contracts_write_set_check_assignment.assertion.8] line 792 CAR size is less than __CPROVER_max_malloc_size: UNKNOWN
[__CPROVER_contracts_write_set_check_assignment.assertion.11] line 792 CAR size is less than __CPROVER_max_malloc_size: SUCCESS
[__CPROVER_contracts_write_set_check_assignment.assertion.3] line 798 no offset bits overflow on CAR upper bound computation: UNKNOWN
[__CPROVER_contracts_write_set_check_assignment.assertion.6] line 798 no offset bits overflow on CAR upper bound computation: UNKNOWN
[__CPROVER_contracts_write_set_check_assignment.assertion.9] line 798 no offset bits overflow on CAR upper bound computation: UNKNOWN
[__CPROVER_contracts_write_set_check_assignment.assertion.12] line 798 no offset bits overflow on CAR upper bound computation: SUCCESS
[__CPROVER_contracts_write_set_check_assignment.unwind.1] line 807 unwinding assertion loop 0: UNKNOWN
[__CPROVER_contracts_write_set_check_assignment.unwind.2] line 807 unwinding assertion loop 0: UNKNOWN
[__CPROVER_contracts_write_set_check_assignment.unwind.3] line 807 unwinding assertion loop 0: UNKNOWN
[__CPROVER_contracts_write_set_check_assignment.unwind.4] line 807 unwinding assertion loop 0: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_write_set_check_frees_clause_inclusion
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.1] line 992 dereference failure: pointer NULL in candidate->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.2] line 992 dereference failure: pointer invalid in candidate->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.3] line 992 dereference failure: deallocated dynamic object in candidate->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.4] line 992 dereference failure: dead object in candidate->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.5] line 992 dereference failure: pointer outside object bounds in candidate->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.6] line 992 dereference failure: invalid integer address in candidate->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.7] line 998 dereference failure: pointer NULL in *current: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.8] line 998 dereference failure: pointer invalid in *current: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.9] line 998 dereference failure: deallocated dynamic object in *current: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.10] line 998 dereference failure: dead object in *current: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.11] line 998 dereference failure: pointer outside object bounds in *current: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.12] line 998 dereference failure: invalid integer address in *current: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.13] line 1001 dereference failure: pointer NULL in reference->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.14] line 1001 dereference failure: pointer invalid in reference->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.15] line 1001 dereference failure: deallocated dynamic object in reference->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.16] line 1001 dereference failure: dead object in reference->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.17] line 1001 dereference failure: pointer outside object bounds in reference->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.18] line 1001 dereference failure: invalid integer address in reference->contract_frees: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.19] line 1001 dereference failure: pointer NULL in reference->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.20] line 1001 dereference failure: pointer invalid in reference->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.21] line 1001 dereference failure: deallocated dynamic object in reference->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.22] line 1001 dereference failure: dead object in reference->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.23] line 1001 dereference failure: pointer outside object bounds in reference->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.24] line 1001 dereference failure: invalid integer address in reference->contract_frees.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.25] line 1002 dereference failure: pointer NULL in reference->allocated: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.26] line 1002 dereference failure: pointer invalid in reference->allocated: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.27] line 1002 dereference failure: deallocated dynamic object in reference->allocated: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.28] line 1002 dereference failure: dead object in reference->allocated: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.29] line 1002 dereference failure: pointer outside object bounds in reference->allocated: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.30] line 1002 dereference failure: invalid integer address in reference->allocated: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.31] line 1002 dereference failure: pointer NULL in reference->allocated.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.32] line 1002 dereference failure: pointer invalid in reference->allocated.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.33] line 1002 dereference failure: deallocated dynamic object in reference->allocated.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.34] line 1002 dereference failure: dead object in reference->allocated.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.35] line 1002 dereference failure: pointer outside object bounds in reference->allocated.elems[(signed long int)object_id]: SUCCESS
[__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.36] line 1002 dereference failure: invalid integer address in reference->allocated.elems[(signed long int)object_id]: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_write_set_deallocate_freeable
[__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.1] line 1028 dereference failure: pointer NULL in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.2] line 1028 dereference failure: pointer invalid in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.3] line 1028 dereference failure: deallocated dynamic object in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.4] line 1028 dereference failure: dead object in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.5] line 1028 dereference failure: pointer outside object bounds in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.6] line 1028 dereference failure: invalid integer address in set->contract_frees_append: SUCCESS
[__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.7] line 1033 dereference failure: pointer NULL in *current: SUCCESS
[__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.8] line 1033 dereference failure: pointer invalid in *current: SUCCESS
[__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.9] line 1033 dereference failure: deallocated dynamic object in *current: SUCCESS
[__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.10] line 1033 dereference failure: dead object in *current: SUCCESS
[__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.11] line 1033 dereference failure: pointer outside object bounds in *current: SUCCESS
[__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.12] line 1033 dereference failure: invalid integer address in *current: SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_write_set_havoc_object_whole
[__CPROVER_contracts_write_set_havoc_object_whole.assertion.1] line 1403 no OOB access: UNKNOWN

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_write_set_havoc_slice
[__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.1] line 1419 dereference failure: pointer NULL in set->contract_assigns: SUCCESS
[__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.2] line 1419 dereference failure: pointer invalid in set->contract_assigns: SUCCESS
[__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.3] line 1419 dereference failure: deallocated dynamic object in set->contract_assigns: SUCCESS
[__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.4] line 1419 dereference failure: dead object in set->contract_assigns: SUCCESS
[__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.5] line 1419 dereference failure: pointer outside object bounds in set->contract_assigns: SUCCESS
[__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.6] line 1419 dereference failure: invalid integer address in set->contract_assigns: SUCCESS
[__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.7] line 1419 dereference failure: pointer NULL in set->contract_assigns.elems[(signed long int)idx]: SUCCESS
[__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.8] line 1419 dereference failure: pointer invalid in set->contract_assigns.elems[(signed long int)idx]: SUCCESS
[__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.9] line 1419 dereference failure: deallocated dynamic object in set->contract_assigns.elems[(signed long int)idx]: SUCCESS
[__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.10] line 1419 dereference failure: dead object in set->contract_assigns.elems[(signed long int)idx]: SUCCESS
[__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.11] line 1419 dereference failure: pointer outside object bounds in set->contract_assigns.elems[(signed long int)idx]: SUCCESS
[__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.12] line 1419 dereference failure: invalid integer address in set->contract_assigns.elems[(signed long int)idx]: SUCCESS
[__CPROVER_contracts_write_set_havoc_slice.assertion.1] line 1421 assertion havoc_slice W_OK(car.lb, car.size): SUCCESS

<builtin-library-__CPROVER_contracts_library> function __CPROVER_contracts_write_set_record_deallocated
[__CPROVER_contracts_write_set_record_deallocated.unwind.1] line 710 unwinding assertion loop 0: SUCCESS

<builtin-library-free> function free
[free.frees.1] line 43 Check that ptr is freeable: SUCCESS
[free.assigns.1] line 47 Check that __CPROVER_memory_leak is assignable: SUCCESS

<builtin-library-malloc> function malloc
[malloc.assigns.1] line 19 Check that return_value___VERIFIER_nondet___CPROVER_bool is assignable: SUCCESS
[malloc.assigns.2] line 19 Check that should_malloc_fail is assignable: SUCCESS
[malloc.assertion.1] line 31 max allocation size exceeded: SUCCESS
[malloc.assigns.3] line 35 Check that return_value___VERIFIER_nondet___CPROVER_bool$0 is assignable: SUCCESS
[malloc.assigns.4] line 35 Check that should_malloc_fail is assignable: SUCCESS
[malloc.assertion.2] line 36 max allocation may fail: SUCCESS
[malloc.assigns.5] line 43 Check that malloc_value is assignable: SUCCESS
[malloc.assigns.6] line 43 Check that malloc_res is assignable: SUCCESS
[malloc.assigns.7] line 46 Check that return_value___VERIFIER_nondet___CPROVER_bool$1 is assignable: SUCCESS
[malloc.assigns.8] line 46 Check that record_malloc is assignable: SUCCESS
[malloc.assigns.9] line 47 Check that __CPROVER_malloc_is_new_array is assignable: SUCCESS
[malloc.assigns.10] line 51 Check that return_value___VERIFIER_nondet___CPROVER_bool$2 is assignable: SUCCESS
[malloc.assigns.11] line 51 Check that record_may_leak is assignable: SUCCESS
[malloc.assigns.12] line 52 Check that __CPROVER_memory_leak is assignable: SUCCESS

<builtin-library-memcmp> function memcmp
[memcmp.precondition.1] line 19 memcmp region 1 readable: SUCCESS
[memcmp.precondition.2] line 21 memcpy region 2 readable: SUCCESS
[memcmp.overflow.1] line 27 arithmetic overflow on signed - in (signed int)*tmp_post_sc1 - (signed int)*tmp_post_sc2: SUCCESS
[memcmp.pointer_dereference.1] line 27 dereference failure: pointer NULL in *tmp_post_sc1: SUCCESS
[memcmp.pointer_dereference.2] line 27 dereference failure: pointer invalid in *tmp_post_sc1: SUCCESS
[memcmp.pointer_dereference.3] line 27 dereference failure: deallocated dynamic object in *tmp_post_sc1: SUCCESS
[memcmp.pointer_dereference.4] line 27 dereference failure: dead object in *tmp_post_sc1: SUCCESS
[memcmp.pointer_dereference.5] line 27 dereference failure: pointer outside object bounds in *tmp_post_sc1: SUCCESS
[memcmp.pointer_dereference.6] line 27 dereference failure: invalid integer address in *tmp_post_sc1: SUCCESS
[memcmp.pointer_dereference.7] line 27 dereference failure: pointer NULL in *tmp_post_sc2: SUCCESS
[memcmp.pointer_dereference.8] line 27 dereference failure: pointer invalid in *tmp_post_sc2: SUCCESS
[memcmp.pointer_dereference.9] line 27 dereference failure: deallocated dynamic object in *tmp_post_sc2: SUCCESS
[memcmp.pointer_dereference.10] line 27 dereference failure: dead object in *tmp_post_sc2: SUCCESS
[memcmp.pointer_dereference.11] line 27 dereference failure: pointer outside object bounds in *tmp_post_sc2: SUCCESS
[memcmp.pointer_dereference.12] line 27 dereference failure: invalid integer address in *tmp_post_sc2: SUCCESS

<builtin-library-memcpy> function memcpy
[memcpy.pointer.1] line 33 same object violation in (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer: SUCCESS
[memcpy.pointer.3] line 33 same object violation in (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData: SUCCESS
[memcpy.pointer.5] line 33 same object violation in (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer.7] line 33 same object violation in (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer.9] line 33 same object violation in (const char *)(const void *)&state->chain.X[(signed long int)0] >= (const char *)(void *)pbResult + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.1] line 33 pointer relation: pointer NULL in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.2] line 33 pointer relation: pointer invalid in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.3] line 33 pointer relation: deallocated dynamic object in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.4] line 33 pointer relation: dead object in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.5] line 33 pointer relation: pointer outside object bounds in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.6] line 33 pointer relation: invalid integer address in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.7] line 33 pointer relation: pointer NULL in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer: SUCCESS
[memcpy.pointer_arithmetic.8] line 33 pointer relation: deallocated dynamic object in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer: SUCCESS
[memcpy.pointer_arithmetic.9] line 33 pointer relation: dead object in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer: SUCCESS
[memcpy.pointer_arithmetic.10] line 33 pointer relation: pointer outside object bounds in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer: SUCCESS
[memcpy.pointer_arithmetic.11] line 33 pointer relation: invalid integer address in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer: SUCCESS
[memcpy.pointer_arithmetic.23] line 33 pointer relation: pointer NULL in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.24] line 33 pointer relation: pointer invalid in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.25] line 33 pointer relation: deallocated dynamic object in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.26] line 33 pointer relation: dead object in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.27] line 33 pointer relation: pointer outside object bounds in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.28] line 33 pointer relation: invalid integer address in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.29] line 33 pointer relation: pointer NULL in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData: SUCCESS
[memcpy.pointer_arithmetic.30] line 33 pointer relation: deallocated dynamic object in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData: SUCCESS
[memcpy.pointer_arithmetic.31] line 33 pointer relation: dead object in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData: SUCCESS
[memcpy.pointer_arithmetic.32] line 33 pointer relation: pointer outside object bounds in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData: SUCCESS
[memcpy.pointer_arithmetic.33] line 33 pointer relation: invalid integer address in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData: SUCCESS
[memcpy.pointer_arithmetic.45] line 33 pointer relation: pointer NULL in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.46] line 33 pointer relation: pointer invalid in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.47] line 33 pointer relation: deallocated dynamic object in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.48] line 33 pointer relation: dead object in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.49] line 33 pointer relation: pointer outside object bounds in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.50] line 33 pointer relation: invalid integer address in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.51] line 33 pointer relation: pointer NULL in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.52] line 33 pointer relation: deallocated dynamic object in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.53] line 33 pointer relation: dead object in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.54] line 33 pointer relation: pointer outside object bounds in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.55] line 33 pointer relation: invalid integer address in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.67] line 33 pointer relation: pointer NULL in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.68] line 33 pointer relation: pointer invalid in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.69] line 33 pointer relation: deallocated dynamic object in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.70] line 33 pointer relation: dead object in (const char *)(const void *)pbData: SUCCESS
[memcpy.pointer_arithmetic.71] line 33 pointer relation: pointer outside object bounds in (const char *)(const void *)pbData: FAILURE
[memcpy.pointer_arithmetic.72] line 33 pointer relation: invalid integer address in (const char *)(const void *)pbData: UNKNOWN
[memcpy.pointer_arithmetic.73] line 33 pointer relation: pointer NULL in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16: UNKNOWN
[memcpy.pointer_arithmetic.74] line 33 pointer relation: deallocated dynamic object in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16: UNKNOWN
[memcpy.pointer_arithmetic.75] line 33 pointer relation: dead object in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16: UNKNOWN
[memcpy.pointer_arithmetic.76] line 33 pointer relation: pointer outside object bounds in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16: UNKNOWN
[memcpy.pointer_arithmetic.77] line 33 pointer relation: invalid integer address in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16: UNKNOWN
[memcpy.pointer_arithmetic.89] line 33 pointer relation: pointer NULL in (const char *)(const void *)&state->chain.X[(signed long int)0]: SUCCESS
[memcpy.pointer_arithmetic.90] line 33 pointer relation: deallocated dynamic object in (const char *)(const void *)&state->chain.X[(signed long int)0]: SUCCESS
[memcpy.pointer_arithmetic.91] line 33 pointer relation: dead object in (const char *)(const void *)&state->chain.X[(signed long int)0]: SUCCESS
[memcpy.pointer_arithmetic.92] line 33 pointer relation: pointer outside object bounds in (const char *)(const void *)&state->chain.X[(signed long int)0]: SUCCESS
[memcpy.pointer_arithmetic.93] line 33 pointer relation: pointer NULL in (const char *)(void *)pbResult + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.94] line 33 pointer relation: pointer invalid in (const char *)(void *)pbResult + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.95] line 33 pointer relation: deallocated dynamic object in (const char *)(void *)pbResult + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.96] line 33 pointer relation: dead object in (const char *)(void *)pbResult + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.97] line 33 pointer relation: pointer outside object bounds in (const char *)(void *)pbResult + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.98] line 33 pointer relation: invalid integer address in (const char *)(void *)pbResult + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer.2] line 34 same object violation in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] >= (const char *)(const void *)pbData + (signed long int)(size_t)freeInBuffer: SUCCESS
[memcpy.pointer.4] line 34 same object violation in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] >= (const char *)(const void *)pbData + (signed long int)cbData: SUCCESS
[memcpy.pointer.6] line 34 same object violation in (const char *)(void *)&pChain->X[(signed long int)16] >= (const char *)(const void *)pbData + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer.8] line 34 same object violation in (const char *)(void *)&pChain->X[(signed long int)16] >= (const char *)(const void *)pbData + (signed long int)(size_t)16: UNKNOWN
[memcpy.pointer.10] line 34 same object violation in (const char *)(void *)pbResult >= (const char *)(const void *)&state->chain.X[(signed long int)0] + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.12] line 34 pointer relation: pointer NULL in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]: SUCCESS
[memcpy.pointer_arithmetic.13] line 34 pointer relation: deallocated dynamic object in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]: SUCCESS
[memcpy.pointer_arithmetic.14] line 34 pointer relation: dead object in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]: SUCCESS
[memcpy.pointer_arithmetic.15] line 34 pointer relation: pointer outside object bounds in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]: SUCCESS
[memcpy.pointer_arithmetic.16] line 34 pointer relation: invalid integer address in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]: SUCCESS
[memcpy.pointer_arithmetic.17] line 34 pointer relation: pointer NULL in (const char *)(const void *)pbData + (signed long int)(size_t)freeInBuffer: SUCCESS
[memcpy.pointer_arithmetic.18] line 34 pointer relation: pointer invalid in (const char *)(const void *)pbData + (signed long int)(size_t)freeInBuffer: SUCCESS
[memcpy.pointer_arithmetic.19] line 34 pointer relation: deallocated dynamic object in (const char *)(const void *)pbData + (signed long int)(size_t)freeInBuffer: SUCCESS
[memcpy.pointer_arithmetic.20] line 34 pointer relation: dead object in (const char *)(const void *)pbData + (signed long int)(size_t)freeInBuffer: SUCCESS
[memcpy.pointer_arithmetic.21] line 34 pointer relation: pointer outside object bounds in (const char *)(const void *)pbData + (signed long int)(size_t)freeInBuffer: SUCCESS
[memcpy.pointer_arithmetic.22] line 34 pointer relation: invalid integer address in (const char *)(const void *)pbData + (signed long int)(size_t)freeInBuffer: SUCCESS
[memcpy.pointer_arithmetic.34] line 34 pointer relation: pointer NULL in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]: SUCCESS
[memcpy.pointer_arithmetic.35] line 34 pointer relation: deallocated dynamic object in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]: SUCCESS
[memcpy.pointer_arithmetic.36] line 34 pointer relation: dead object in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]: SUCCESS
[memcpy.pointer_arithmetic.37] line 34 pointer relation: pointer outside object bounds in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]: SUCCESS
[memcpy.pointer_arithmetic.38] line 34 pointer relation: invalid integer address in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]: SUCCESS
[memcpy.pointer_arithmetic.39] line 34 pointer relation: pointer NULL in (const char *)(const void *)pbData + (signed long int)cbData: SUCCESS
[memcpy.pointer_arithmetic.40] line 34 pointer relation: pointer invalid in (const char *)(const void *)pbData + (signed long int)cbData: SUCCESS
[memcpy.pointer_arithmetic.41] line 34 pointer relation: deallocated dynamic object in (const char *)(const void *)pbData + (signed long int)cbData: SUCCESS
[memcpy.pointer_arithmetic.42] line 34 pointer relation: dead object in (const char *)(const void *)pbData + (signed long int)cbData: SUCCESS
[memcpy.pointer_arithmetic.43] line 34 pointer relation: pointer outside object bounds in (const char *)(const void *)pbData + (signed long int)cbData: SUCCESS
[memcpy.pointer_arithmetic.44] line 34 pointer relation: invalid integer address in (const char *)(const void *)pbData + (signed long int)cbData: SUCCESS
[memcpy.pointer_arithmetic.56] line 34 pointer relation: pointer NULL in (const char *)(void *)&pChain->X[(signed long int)16]: SUCCESS
[memcpy.pointer_arithmetic.57] line 34 pointer relation: deallocated dynamic object in (const char *)(void *)&pChain->X[(signed long int)16]: SUCCESS
[memcpy.pointer_arithmetic.58] line 34 pointer relation: dead object in (const char *)(void *)&pChain->X[(signed long int)16]: SUCCESS
[memcpy.pointer_arithmetic.59] line 34 pointer relation: pointer outside object bounds in (const char *)(void *)&pChain->X[(signed long int)16]: SUCCESS
[memcpy.pointer_arithmetic.60] line 34 pointer relation: invalid integer address in (const char *)(void *)&pChain->X[(signed long int)16]: SUCCESS
[memcpy.pointer_arithmetic.61] line 34 pointer relation: pointer NULL in (const char *)(const void *)pbData + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.62] line 34 pointer relation: pointer invalid in (const char *)(const void *)pbData + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.63] line 34 pointer relation: deallocated dynamic object in (const char *)(const void *)pbData + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.64] line 34 pointer relation: dead object in (const char *)(const void *)pbData + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.65] line 34 pointer relation: pointer outside object bounds in (const char *)(const void *)pbData + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.66] line 34 pointer relation: invalid integer address in (const char *)(const void *)pbData + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.78] line 34 pointer relation: pointer NULL in (const char *)(void *)&pChain->X[(signed long int)16]: UNKNOWN
[memcpy.pointer_arithmetic.79] line 34 pointer relation: deallocated dynamic object in (const char *)(void *)&pChain->X[(signed long int)16]: UNKNOWN
[memcpy.pointer_arithmetic.80] line 34 pointer relation: dead object in (const char *)(void *)&pChain->X[(signed long int)16]: UNKNOWN
[memcpy.pointer_arithmetic.81] line 34 pointer relation: pointer outside object bounds in (const char *)(void *)&pChain->X[(signed long int)16]: UNKNOWN
[memcpy.pointer_arithmetic.82] line 34 pointer relation: invalid integer address in (const char *)(void *)&pChain->X[(signed long int)16]: UNKNOWN
[memcpy.pointer_arithmetic.83] line 34 pointer relation: pointer NULL in (const char *)(const void *)pbData + (signed long int)(size_t)16: UNKNOWN
[memcpy.pointer_arithmetic.84] line 34 pointer relation: pointer invalid in (const char *)(const void *)pbData + (signed long int)(size_t)16: UNKNOWN
[memcpy.pointer_arithmetic.85] line 34 pointer relation: deallocated dynamic object in (const char *)(const void *)pbData + (signed long int)(size_t)16: UNKNOWN
[memcpy.pointer_arithmetic.86] line 34 pointer relation: dead object in (const char *)(const void *)pbData + (signed long int)(size_t)16: UNKNOWN
[memcpy.pointer_arithmetic.87] line 34 pointer relation: pointer outside object bounds in (const char *)(const void *)pbData + (signed long int)(size_t)16: UNKNOWN
[memcpy.pointer_arithmetic.88] line 34 pointer relation: invalid integer address in (const char *)(const void *)pbData + (signed long int)(size_t)16: UNKNOWN
[memcpy.pointer_arithmetic.99] line 34 pointer relation: pointer NULL in (const char *)(void *)pbResult: SUCCESS
[memcpy.pointer_arithmetic.100] line 34 pointer relation: pointer invalid in (const char *)(void *)pbResult: SUCCESS
[memcpy.pointer_arithmetic.101] line 34 pointer relation: deallocated dynamic object in (const char *)(void *)pbResult: SUCCESS
[memcpy.pointer_arithmetic.102] line 34 pointer relation: dead object in (const char *)(void *)pbResult: SUCCESS
[memcpy.pointer_arithmetic.103] line 34 pointer relation: pointer outside object bounds in (const char *)(void *)pbResult: SUCCESS
[memcpy.pointer_arithmetic.104] line 34 pointer relation: invalid integer address in (const char *)(void *)pbResult: SUCCESS
[memcpy.pointer_arithmetic.105] line 34 pointer relation: pointer NULL in (const char *)(const void *)&state->chain.X[(signed long int)0] + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.106] line 34 pointer relation: deallocated dynamic object in (const char *)(const void *)&state->chain.X[(signed long int)0] + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.107] line 34 pointer relation: dead object in (const char *)(const void *)&state->chain.X[(signed long int)0] + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.108] line 34 pointer relation: pointer outside object bounds in (const char *)(const void *)&state->chain.X[(signed long int)0] + (signed long int)(size_t)16: SUCCESS
[memcpy.pointer_arithmetic.109] line 34 pointer relation: invalid integer address in (const char *)(const void *)&state->chain.X[(signed long int)0] + (signed long int)(size_t)16: SUCCESS
[memcpy.assigns.1] line 44 Check that src_n$array_size is assignable: UNKNOWN
[memcpy.assigns.2] line 45 Check that array_copy((const void *)src_n, ...) is allowed by the assigns clause: UNKNOWN
[memcpy.assigns.3] line 46 Check that array_replace((const void *)(char *)dst, ...) is allowed by the assigns clause: UNKNOWN

<builtin-library-memset> function memset
[memset.assigns.1] line 36 Check that s_n$array_size is assignable: SUCCESS
[memset.assigns.2] line 37 Check that array_set((const void *)s_n, ...) is allowed by the assigns clause: SUCCESS
[memset.assigns.3] line 38 Check that array_replace((const void *)(unsigned char *)s, ...) is allowed by the assigns clause: SUCCESS

** 18 of 2137 failed (16 iterations)
VERIFICATION FAILED
