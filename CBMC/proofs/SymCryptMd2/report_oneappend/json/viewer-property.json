{
  "viewer-property": {
    "properties": {
      "SymCryptHashAppendInternal.assigns.1": {
        "class": "assigns",
        "description": "Check that pState->dataLengthL is assignable",
        "expression": "__check_lhs_assignment",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 22
        }
      },
      "SymCryptHashAppendInternal.assigns.10": {
        "class": "assigns",
        "description": "Check that bytesInBuffer is assignable",
        "expression": "TRUE",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 77
        }
      },
      "SymCryptHashAppendInternal.assigns.11": {
        "class": "assigns",
        "description": "Check that pState->bytesInBuffer is assignable",
        "expression": "__check_lhs_assignment$1",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 80
        }
      },
      "SymCryptHashAppendInternal.assigns.2": {
        "class": "assigns",
        "description": "Check that pState->dataLengthH is assignable",
        "expression": "__check_lhs_assignment$0",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 24
        }
      },
      "SymCryptHashAppendInternal.assigns.3": {
        "class": "assigns",
        "description": "Check that bytesInBuffer is assignable",
        "expression": "TRUE",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 27
        }
      },
      "SymCryptHashAppendInternal.assigns.4": {
        "class": "assigns",
        "description": "Check that freeInBuffer is assignable",
        "expression": "TRUE",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 36
        }
      },
      "SymCryptHashAppendInternal.assigns.5": {
        "class": "assigns",
        "description": "Check that pbData is assignable",
        "expression": "TRUE",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 50
        }
      },
      "SymCryptHashAppendInternal.assigns.6": {
        "class": "assigns",
        "description": "Check that cbData is assignable",
        "expression": "TRUE",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 51
        }
      },
      "SymCryptHashAppendInternal.assigns.7": {
        "class": "assigns",
        "description": "Check that bytesInBuffer is assignable",
        "expression": "TRUE",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 54
        }
      },
      "SymCryptHashAppendInternal.assigns.8": {
        "class": "assigns",
        "description": "Check that pbData is assignable",
        "expression": "TRUE",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 65
        }
      },
      "SymCryptHashAppendInternal.assigns.9": {
        "class": "assigns",
        "description": "Check that cbData is assignable",
        "expression": "TRUE",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 66
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pState->dataLengthL",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_COMMON_HASH_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pState))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 22
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pState->dataLengthL",
        "expression": "!(__CPROVER_POINTER_OBJECT(pState) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 23
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pState->dataLengthL",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pState) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pState) + 16ul) + 8",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 23
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pState->dataLengthL",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_COMMON_HASH_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pState)) || (char *)pState + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 23
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pState->dataLengthH",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_COMMON_HASH_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pState))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 24
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pState->dataLengthH",
        "expression": "!IS_INVALID_POINTER(pState)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 24
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pState->dataLengthH",
        "expression": "!(__CPROVER_POINTER_OBJECT(pState) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 24
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pState->dataLengthH",
        "expression": "!(__CPROVER_POINTER_OBJECT(pState) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 24
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pState->dataLengthH",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pState) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pState) + 24ul) + 8",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 24
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pState->dataLengthH",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_COMMON_HASH_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pState)) || (char *)pState + 24l == ((char *)NULL)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 24
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pState->bytesInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_COMMON_HASH_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pState))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 27
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pState->dataLengthL",
        "expression": "!IS_INVALID_POINTER(pState)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 22
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pState->bytesInBuffer",
        "expression": "!IS_INVALID_POINTER(pState)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 27
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pState->bytesInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT(pState) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 27
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pState->bytesInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT(pState) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 27
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pState->bytesInBuffer",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pState) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pState) + 4",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 27
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pState->bytesInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_COMMON_HASH_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pState)) || pState == ((PSYMCRYPT_COMMON_HASH_STATE)NULL)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 27
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.25": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pHash->inputBlockSize",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCSYMCRYPT_HASH)NULL)) == __CPROVER_POINTER_OBJECT(pHash))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 36
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.26": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pHash->inputBlockSize",
        "expression": "!IS_INVALID_POINTER(pHash)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 36
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.27": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pHash->inputBlockSize",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 36
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.28": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pHash->inputBlockSize",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 36
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.29": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pHash->inputBlockSize",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pHash) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pHash) + 48ul) + 4",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 36
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pState->dataLengthL",
        "expression": "!(__CPROVER_POINTER_OBJECT(pState) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 22
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.30": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pHash->inputBlockSize",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCSYMCRYPT_HASH)NULL)) == __CPROVER_POINTER_OBJECT(pHash)) || (char *)pHash + 48l == ((char *)NULL)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 36
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.31": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pHash->appendBlockFunc",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCSYMCRYPT_HASH)NULL)) == __CPROVER_POINTER_OBJECT(pHash))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.32": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pHash->appendBlockFunc",
        "expression": "!IS_INVALID_POINTER(pHash)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.33": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pHash->appendBlockFunc",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.34": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pHash->appendBlockFunc",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.35": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pHash->appendBlockFunc",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pHash) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pHash) + 24ul) + 8",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.36": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pHash->appendBlockFunc",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCSYMCRYPT_HASH)NULL)) == __CPROVER_POINTER_OBJECT(pHash)) || (char *)pHash + 24l == ((char *)NULL)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.37": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pHash->appendBlockFunc",
        "expression": "!(__CPROVER_POINTER_OBJECT(((const PSYMCRYPT_HASH_APPEND_BLOCKS_FUNC)NULL)) == __CPROVER_POINTER_OBJECT(pHash->appendBlockFunc))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.38": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pHash->appendBlockFunc",
        "expression": "!IS_INVALID_POINTER(pHash->appendBlockFunc)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.39": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pHash->appendBlockFunc",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash->appendBlockFunc) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pState->dataLengthL",
        "expression": "!(__CPROVER_POINTER_OBJECT(pState) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 22
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.40": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pHash->appendBlockFunc",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash->appendBlockFunc) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.41": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pHash->appendBlockFunc",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pHash->appendBlockFunc) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pHash->appendBlockFunc)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.42": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pHash->appendBlockFunc",
        "expression": "!(__CPROVER_POINTER_OBJECT(((const PSYMCRYPT_HASH_APPEND_BLOCKS_FUNC)NULL)) == __CPROVER_POINTER_OBJECT(pHash->appendBlockFunc)) || pHash->appendBlockFunc == ((const PSYMCRYPT_HASH_APPEND_BLOCKS_FUNC)NULL)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.43": {
        "class": "pointer dereference",
        "description": "dereferenced function pointer must be SymCryptMd2AppendBlocks",
        "expression": "FALSE",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.44": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pHash->chainOffset",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCSYMCRYPT_HASH)NULL)) == __CPROVER_POINTER_OBJECT(pHash))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.45": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pHash->chainOffset",
        "expression": "!IS_INVALID_POINTER(pHash)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.46": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pHash->chainOffset",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.47": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pHash->chainOffset",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.48": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pHash->chainOffset",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pHash) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pHash) + 52ul) + 4",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.49": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pHash->chainOffset",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCSYMCRYPT_HASH)NULL)) == __CPROVER_POINTER_OBJECT(pHash)) || (char *)pHash + 52l == ((char *)NULL)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pState->dataLengthL",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pState) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pState) + 16ul) + 8",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 22
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.50": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pHash->inputBlockSize",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCSYMCRYPT_HASH)NULL)) == __CPROVER_POINTER_OBJECT(pHash))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.51": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pHash->inputBlockSize",
        "expression": "!IS_INVALID_POINTER(pHash)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.52": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pHash->inputBlockSize",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.53": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pHash->inputBlockSize",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.54": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pHash->inputBlockSize",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pHash) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pHash) + 48ul) + 4",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.55": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pHash->inputBlockSize",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCSYMCRYPT_HASH)NULL)) == __CPROVER_POINTER_OBJECT(pHash)) || (char *)pHash + 48l == ((char *)NULL)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 52
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.56": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pHash->inputBlockSize",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCSYMCRYPT_HASH)NULL)) == __CPROVER_POINTER_OBJECT(pHash))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 61
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.57": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pHash->inputBlockSize",
        "expression": "!IS_INVALID_POINTER(pHash)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 61
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.58": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pHash->inputBlockSize",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 61
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.59": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pHash->inputBlockSize",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 61
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pState->dataLengthL",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_COMMON_HASH_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pState)) || (char *)pState + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 22
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.60": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pHash->inputBlockSize",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pHash) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pHash) + 48ul) + 4",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 61
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.61": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pHash->inputBlockSize",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCSYMCRYPT_HASH)NULL)) == __CPROVER_POINTER_OBJECT(pHash)) || (char *)pHash + 48l == ((char *)NULL)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 61
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.62": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pHash->appendBlockFunc",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCSYMCRYPT_HASH)NULL)) == __CPROVER_POINTER_OBJECT(pHash))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.63": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pHash->appendBlockFunc",
        "expression": "!IS_INVALID_POINTER(pHash)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.64": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pHash->appendBlockFunc",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.65": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pHash->appendBlockFunc",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.66": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pHash->appendBlockFunc",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pHash) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pHash) + 24ul) + 8",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.67": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pHash->appendBlockFunc",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCSYMCRYPT_HASH)NULL)) == __CPROVER_POINTER_OBJECT(pHash)) || (char *)pHash + 24l == ((char *)NULL)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.68": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pHash->appendBlockFunc",
        "expression": "!(__CPROVER_POINTER_OBJECT(((const PSYMCRYPT_HASH_APPEND_BLOCKS_FUNC)NULL)) == __CPROVER_POINTER_OBJECT(pHash->appendBlockFunc))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.69": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pHash->appendBlockFunc",
        "expression": "!IS_INVALID_POINTER(pHash->appendBlockFunc)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pState->dataLengthL",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_COMMON_HASH_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pState))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 23
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.70": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pHash->appendBlockFunc",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash->appendBlockFunc) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.71": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pHash->appendBlockFunc",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash->appendBlockFunc) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.72": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pHash->appendBlockFunc",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pHash->appendBlockFunc) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pHash->appendBlockFunc)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.73": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pHash->appendBlockFunc",
        "expression": "!(__CPROVER_POINTER_OBJECT(((const PSYMCRYPT_HASH_APPEND_BLOCKS_FUNC)NULL)) == __CPROVER_POINTER_OBJECT(pHash->appendBlockFunc)) || pHash->appendBlockFunc == ((const PSYMCRYPT_HASH_APPEND_BLOCKS_FUNC)NULL)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.74": {
        "class": "pointer dereference",
        "description": "dereferenced function pointer must be SymCryptMd2AppendBlocks",
        "expression": "FALSE",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.75": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pHash->chainOffset",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCSYMCRYPT_HASH)NULL)) == __CPROVER_POINTER_OBJECT(pHash))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.76": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pHash->chainOffset",
        "expression": "!IS_INVALID_POINTER(pHash)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.77": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pHash->chainOffset",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.78": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pHash->chainOffset",
        "expression": "!(__CPROVER_POINTER_OBJECT(pHash) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.79": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pHash->chainOffset",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pHash) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pHash) + 52ul) + 4",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pState->dataLengthL",
        "expression": "!IS_INVALID_POINTER(pState)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 23
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.80": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pHash->chainOffset",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCSYMCRYPT_HASH)NULL)) == __CPROVER_POINTER_OBJECT(pHash)) || (char *)pHash + 52l == ((char *)NULL)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 63
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.81": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pState->bytesInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_COMMON_HASH_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pState))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 80
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.82": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pState->bytesInBuffer",
        "expression": "!IS_INVALID_POINTER(pState)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 80
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.83": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pState->bytesInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT(pState) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 80
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.84": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pState->bytesInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT(pState) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 80
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.85": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pState->bytesInBuffer",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pState) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pState) + 4",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 80
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.86": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pState->bytesInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_COMMON_HASH_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pState)) || pState == ((PSYMCRYPT_COMMON_HASH_STATE)NULL)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 80
        }
      },
      "SymCryptHashAppendInternal.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pState->dataLengthL",
        "expression": "!(__CPROVER_POINTER_OBJECT(pState) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 23
        }
      },
      "SymCryptHashAppendInternal.precondition_instance.1": {
        "class": "precondition_instance",
        "description": "memcpy src/dst overlap",
        "expression": "__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer || (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] >= (const char *)(const void *)pbData + (signed long int)(size_t)freeInBuffer",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 49
        }
      },
      "SymCryptHashAppendInternal.precondition_instance.2": {
        "class": "precondition_instance",
        "description": "memcpy source region readable",
        "expression": "R_OK((const void *)pbData, (size_t)freeInBuffer)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 49
        }
      },
      "SymCryptHashAppendInternal.precondition_instance.3": {
        "class": "precondition_instance",
        "description": "memcpy destination region writeable",
        "expression": "W_OK((void *)&pState->buffer[(signed long int)bytesInBuffer], (size_t)freeInBuffer)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 49
        }
      },
      "SymCryptHashAppendInternal.precondition_instance.4": {
        "class": "precondition_instance",
        "description": "memcpy src/dst overlap",
        "expression": "__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData || (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] >= (const char *)(const void *)pbData + (signed long int)cbData",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 76
        }
      },
      "SymCryptHashAppendInternal.precondition_instance.5": {
        "class": "precondition_instance",
        "description": "memcpy source region readable",
        "expression": "R_OK((const void *)pbData, cbData)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 76
        }
      },
      "SymCryptHashAppendInternal.precondition_instance.6": {
        "class": "precondition_instance",
        "description": "memcpy destination region writeable",
        "expression": "W_OK((void *)&pState->buffer[(signed long int)bytesInBuffer], cbData)",
        "location": {
          "file": "lib/hash.c",
          "function": "SymCryptHashAppendInternal",
          "line": 76
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.1": {
        "class": "array bounds",
        "description": "array.C dynamic object upper bound in pChain->C[(signed long int)15]",
        "expression": "!(15l + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 178
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.10": {
        "class": "array bounds",
        "description": "array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)])]",
        "expression": "!((signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)]) >= 256l)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.11": {
        "class": "array bounds",
        "description": "array.C dynamic object upper bound in pChain->C[(signed long int)j]",
        "expression": "!((signed long int)j + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.12": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)k]",
        "expression": "!(16l + (signed long int)k + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.13": {
        "class": "array bounds",
        "description": "array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)t]",
        "expression": "!((signed long int)t >= 256l)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.14": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)k]",
        "expression": "!(16l + (signed long int)k + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.15": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)k]",
        "expression": "!(16l + (signed long int)k + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.16": {
        "class": "array bounds",
        "description": "array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)t]",
        "expression": "!((signed long int)t >= 256l)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.17": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)k]",
        "expression": "!(16l + (signed long int)k + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.18": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)k]",
        "expression": "!(16l + (signed long int)k + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.19": {
        "class": "array bounds",
        "description": "array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)t]",
        "expression": "!((signed long int)t >= 256l)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.2": {
        "class": "array bounds",
        "description": "array.C dynamic object upper bound in pChain->C[(signed long int)j]",
        "expression": "!((signed long int)j + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.20": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)k]",
        "expression": "!(16l + (signed long int)k + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.21": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)k]",
        "expression": "!(16l + (signed long int)k + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.22": {
        "class": "array bounds",
        "description": "array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)t]",
        "expression": "!((signed long int)t >= 256l)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.23": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)k]",
        "expression": "!(16l + (signed long int)k + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.24": {
        "class": "array bounds",
        "description": "array.C dynamic object upper bound in pChain->C[(signed long int)15]",
        "expression": "!(15l + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 178
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.25": {
        "class": "array bounds",
        "description": "array.C dynamic object upper bound in pChain->C[(signed long int)j]",
        "expression": "!((signed long int)j + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.26": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)(16 + j)]",
        "expression": "!(16l + (signed long int)(16 + j) + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.27": {
        "class": "array bounds",
        "description": "array 'SymCryptMd2STable' lower bound in SymCryptMd2STable[(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)])]",
        "expression": "(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)]) >= 0l",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.28": {
        "class": "array bounds",
        "description": "array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)])]",
        "expression": "!((signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)]) >= 256l)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.29": {
        "class": "array bounds",
        "description": "array.C dynamic object upper bound in pChain->C[(signed long int)j]",
        "expression": "!((signed long int)j + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.3": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)(16 + j)]",
        "expression": "!(16l + (signed long int)(16 + j) + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.30": {
        "class": "array bounds",
        "description": "array.C dynamic object upper bound in pChain->C[(signed long int)j]",
        "expression": "!((signed long int)j + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.31": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)(16 + j)]",
        "expression": "!(16l + (signed long int)(16 + j) + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.32": {
        "class": "array bounds",
        "description": "array 'SymCryptMd2STable' lower bound in SymCryptMd2STable[(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)])]",
        "expression": "(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)]) >= 0l",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.33": {
        "class": "array bounds",
        "description": "array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)])]",
        "expression": "!((signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)]) >= 256l)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.34": {
        "class": "array bounds",
        "description": "array.C dynamic object upper bound in pChain->C[(signed long int)j]",
        "expression": "!((signed long int)j + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.35": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)k]",
        "expression": "!(16l + (signed long int)k + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.36": {
        "class": "array bounds",
        "description": "array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)t]",
        "expression": "!((signed long int)t >= 256l)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.37": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)k]",
        "expression": "!(16l + (signed long int)k + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.38": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)k]",
        "expression": "!(16l + (signed long int)k + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.39": {
        "class": "array bounds",
        "description": "array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)t]",
        "expression": "!((signed long int)t >= 256l)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.4": {
        "class": "array bounds",
        "description": "array 'SymCryptMd2STable' lower bound in SymCryptMd2STable[(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)])]",
        "expression": "(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)]) >= 0l",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.40": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)k]",
        "expression": "!(16l + (signed long int)k + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.41": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)k]",
        "expression": "!(16l + (signed long int)k + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.42": {
        "class": "array bounds",
        "description": "array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)t]",
        "expression": "!((signed long int)t >= 256l)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.43": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)k]",
        "expression": "!(16l + (signed long int)k + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.44": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)k]",
        "expression": "!(16l + (signed long int)k + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.45": {
        "class": "array bounds",
        "description": "array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)t]",
        "expression": "!((signed long int)t >= 256l)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.46": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)k]",
        "expression": "!(16l + (signed long int)k + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.5": {
        "class": "array bounds",
        "description": "array 'SymCryptMd2STable' upper bound in SymCryptMd2STable[(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)])]",
        "expression": "!((signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)]) >= 256l)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.6": {
        "class": "array bounds",
        "description": "array.C dynamic object upper bound in pChain->C[(signed long int)j]",
        "expression": "!((signed long int)j + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.7": {
        "class": "array bounds",
        "description": "array.C dynamic object upper bound in pChain->C[(signed long int)j]",
        "expression": "!((signed long int)j + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.8": {
        "class": "array bounds",
        "description": "array.X dynamic object upper bound in pChain->X[(signed long int)(16 + j)]",
        "expression": "!(16l + (signed long int)(16 + j) + (signed long int)__CPROVER_POINTER_OFFSET(pChain) >= (signed long int)__CPROVER_OBJECT_SIZE(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.array_bounds.9": {
        "class": "array bounds",
        "description": "array 'SymCryptMd2STable' lower bound in SymCryptMd2STable[(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)])]",
        "expression": "(signed long int)((signed int)L ^ (signed int)pChain->X[(signed long int)(16 + j)]) >= 0l",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.assigns.1": {
        "class": "assigns",
        "description": "Check that L is assignable",
        "expression": "TRUE",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 178
        }
      },
      "SymCryptMd2AppendBlocks.assigns.10": {
        "class": "assigns",
        "description": "Check that j is assignable",
        "expression": "__check_lhs_assignment$4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.assigns.11": {
        "class": "assigns",
        "description": "Check that k is assignable",
        "expression": "__check_lhs_assignment$5",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.assigns.12": {
        "class": "assigns",
        "description": "Check that t is assignable",
        "expression": "__check_lhs_assignment$6",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.assigns.13": {
        "class": "assigns",
        "description": "Check that pChain->X[(signed long int)k] is assignable",
        "expression": "__check_lhs_assignment$7",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.assigns.14": {
        "class": "assigns",
        "description": "Check that k is assignable",
        "expression": "__check_lhs_assignment$8",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.assigns.15": {
        "class": "assigns",
        "description": "Check that t is assignable",
        "expression": "__check_lhs_assignment$6",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.assigns.16": {
        "class": "assigns",
        "description": "Check that pChain->X[(signed long int)k] is assignable",
        "expression": "__check_lhs_assignment$7",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.assigns.17": {
        "class": "assigns",
        "description": "Check that k is assignable",
        "expression": "__check_lhs_assignment$8",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.assigns.18": {
        "class": "assigns",
        "description": "Check that t is assignable",
        "expression": "__check_lhs_assignment$9",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 207
        }
      },
      "SymCryptMd2AppendBlocks.assigns.19": {
        "class": "assigns",
        "description": "Check that j is assignable",
        "expression": "__check_lhs_assignment$10",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.assigns.2": {
        "class": "assigns",
        "description": "Check that j is assignable",
        "expression": "__check_lhs_assignment",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.assigns.20": {
        "class": "assigns",
        "description": "Check that k is assignable",
        "expression": "__check_lhs_assignment$5",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.assigns.21": {
        "class": "assigns",
        "description": "Check that t is assignable",
        "expression": "__check_lhs_assignment$6",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.assigns.22": {
        "class": "assigns",
        "description": "Check that pChain->X[(signed long int)k] is assignable",
        "expression": "__check_lhs_assignment$7",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.assigns.23": {
        "class": "assigns",
        "description": "Check that k is assignable",
        "expression": "__check_lhs_assignment$8",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.assigns.24": {
        "class": "assigns",
        "description": "Check that t is assignable",
        "expression": "__check_lhs_assignment$6",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.assigns.25": {
        "class": "assigns",
        "description": "Check that pChain->X[(signed long int)k] is assignable",
        "expression": "__check_lhs_assignment$7",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.assigns.26": {
        "class": "assigns",
        "description": "Check that k is assignable",
        "expression": "__check_lhs_assignment$8",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.assigns.27": {
        "class": "assigns",
        "description": "Check that t is assignable",
        "expression": "__check_lhs_assignment$9",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 207
        }
      },
      "SymCryptMd2AppendBlocks.assigns.28": {
        "class": "assigns",
        "description": "Check that j is assignable",
        "expression": "__check_lhs_assignment$10",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.assigns.29": {
        "class": "assigns",
        "description": "Check that pbData is assignable",
        "expression": "__check_lhs_assignment$11",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 210
        }
      },
      "SymCryptMd2AppendBlocks.assigns.3": {
        "class": "assigns",
        "description": "Check that L is assignable",
        "expression": "__check_lhs_assignment$0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.assigns.30": {
        "class": "assigns",
        "description": "Check that cbData is assignable",
        "expression": "__check_lhs_assignment$12",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 211
        }
      },
      "SymCryptMd2AppendBlocks.assigns.31": {
        "class": "assigns",
        "description": "Check that L is assignable",
        "expression": "TRUE",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 178
        }
      },
      "SymCryptMd2AppendBlocks.assigns.32": {
        "class": "assigns",
        "description": "Check that j is assignable",
        "expression": "__check_lhs_assignment",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.assigns.33": {
        "class": "assigns",
        "description": "Check that L is assignable",
        "expression": "__check_lhs_assignment$0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.assigns.34": {
        "class": "assigns",
        "description": "Check that pChain->C[(signed long int)j] is assignable",
        "expression": "__check_lhs_assignment$1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.assigns.35": {
        "class": "assigns",
        "description": "Check that j is assignable",
        "expression": "__check_lhs_assignment$2",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.assigns.36": {
        "class": "assigns",
        "description": "Check that L is assignable",
        "expression": "__check_lhs_assignment$0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.assigns.37": {
        "class": "assigns",
        "description": "Check that pChain->C[(signed long int)j] is assignable",
        "expression": "__check_lhs_assignment$1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.assigns.38": {
        "class": "assigns",
        "description": "Check that j is assignable",
        "expression": "__check_lhs_assignment$2",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.assigns.39": {
        "class": "assigns",
        "description": "Check that t is assignable",
        "expression": "__check_lhs_assignment$3",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 193
        }
      },
      "SymCryptMd2AppendBlocks.assigns.4": {
        "class": "assigns",
        "description": "Check that pChain->C[(signed long int)j] is assignable",
        "expression": "__check_lhs_assignment$1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.assigns.40": {
        "class": "assigns",
        "description": "Check that j is assignable",
        "expression": "__check_lhs_assignment$4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.assigns.41": {
        "class": "assigns",
        "description": "Check that k is assignable",
        "expression": "__check_lhs_assignment$5",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.assigns.42": {
        "class": "assigns",
        "description": "Check that t is assignable",
        "expression": "__check_lhs_assignment$6",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.assigns.43": {
        "class": "assigns",
        "description": "Check that pChain->X[(signed long int)k] is assignable",
        "expression": "__check_lhs_assignment$7",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.assigns.44": {
        "class": "assigns",
        "description": "Check that k is assignable",
        "expression": "__check_lhs_assignment$8",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.assigns.45": {
        "class": "assigns",
        "description": "Check that t is assignable",
        "expression": "__check_lhs_assignment$6",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.assigns.46": {
        "class": "assigns",
        "description": "Check that pChain->X[(signed long int)k] is assignable",
        "expression": "__check_lhs_assignment$7",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.assigns.47": {
        "class": "assigns",
        "description": "Check that k is assignable",
        "expression": "__check_lhs_assignment$8",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.assigns.48": {
        "class": "assigns",
        "description": "Check that t is assignable",
        "expression": "__check_lhs_assignment$9",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 207
        }
      },
      "SymCryptMd2AppendBlocks.assigns.49": {
        "class": "assigns",
        "description": "Check that j is assignable",
        "expression": "__check_lhs_assignment$10",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.assigns.5": {
        "class": "assigns",
        "description": "Check that j is assignable",
        "expression": "__check_lhs_assignment$2",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.assigns.50": {
        "class": "assigns",
        "description": "Check that k is assignable",
        "expression": "__check_lhs_assignment$5",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.assigns.51": {
        "class": "assigns",
        "description": "Check that t is assignable",
        "expression": "__check_lhs_assignment$6",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.assigns.52": {
        "class": "assigns",
        "description": "Check that pChain->X[(signed long int)k] is assignable",
        "expression": "__check_lhs_assignment$7",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.assigns.53": {
        "class": "assigns",
        "description": "Check that k is assignable",
        "expression": "__check_lhs_assignment$8",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.assigns.54": {
        "class": "assigns",
        "description": "Check that t is assignable",
        "expression": "__check_lhs_assignment$6",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.assigns.55": {
        "class": "assigns",
        "description": "Check that pChain->X[(signed long int)k] is assignable",
        "expression": "__check_lhs_assignment$7",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.assigns.56": {
        "class": "assigns",
        "description": "Check that k is assignable",
        "expression": "__check_lhs_assignment$8",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.assigns.57": {
        "class": "assigns",
        "description": "Check that t is assignable",
        "expression": "__check_lhs_assignment$9",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 207
        }
      },
      "SymCryptMd2AppendBlocks.assigns.58": {
        "class": "assigns",
        "description": "Check that j is assignable",
        "expression": "__check_lhs_assignment$10",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.assigns.59": {
        "class": "assigns",
        "description": "Check that pbData is assignable",
        "expression": "__check_lhs_assignment$11",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 210
        }
      },
      "SymCryptMd2AppendBlocks.assigns.6": {
        "class": "assigns",
        "description": "Check that L is assignable",
        "expression": "__check_lhs_assignment$0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.assigns.60": {
        "class": "assigns",
        "description": "Check that cbData is assignable",
        "expression": "__check_lhs_assignment$12",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 211
        }
      },
      "SymCryptMd2AppendBlocks.assigns.61": {
        "class": "assigns",
        "description": "Check that *pcbRemaining is assignable",
        "expression": "__check_lhs_assignment$13",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 214
        }
      },
      "SymCryptMd2AppendBlocks.assigns.7": {
        "class": "assigns",
        "description": "Check that pChain->C[(signed long int)j] is assignable",
        "expression": "__check_lhs_assignment$1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.assigns.8": {
        "class": "assigns",
        "description": "Check that j is assignable",
        "expression": "__check_lhs_assignment$2",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.assigns.9": {
        "class": "assigns",
        "description": "Check that t is assignable",
        "expression": "__check_lhs_assignment$3",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 193
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.1": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.3",
        "expression": "__check_assigns_clause_incl_loop_3",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 161
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.10": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.3",
        "expression": "__check_assigns_clause_incl_loop_3",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 161
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.11": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.0",
        "expression": "__check_assigns_clause_incl_loop_0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.12": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.0",
        "expression": "__check_assigns_clause_incl_loop_0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.13": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.2",
        "expression": "__check_assigns_clause_incl_loop_2",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.14": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.1",
        "expression": "__check_assigns_clause_incl_loop_1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.15": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.1",
        "expression": "__check_assigns_clause_incl_loop_1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.16": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.2",
        "expression": "__check_assigns_clause_incl_loop_2",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.17": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.1",
        "expression": "__check_assigns_clause_incl_loop_1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.18": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.1",
        "expression": "__check_assigns_clause_incl_loop_1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.2": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.0",
        "expression": "__check_assigns_clause_incl_loop_0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.3": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.0",
        "expression": "__check_assigns_clause_incl_loop_0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.4": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.2",
        "expression": "__check_assigns_clause_incl_loop_2",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.5": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.1",
        "expression": "__check_assigns_clause_incl_loop_1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.6": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.1",
        "expression": "__check_assigns_clause_incl_loop_1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.7": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.2",
        "expression": "__check_assigns_clause_incl_loop_2",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.8": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.1",
        "expression": "__check_assigns_clause_incl_loop_1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_assigns.9": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptMd2AppendBlocks.1",
        "expression": "__check_assigns_clause_incl_loop_1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_decreases.1": {
        "class": "loop_decreases",
        "description": "Check variant decreases after step for loop SymCryptMd2AppendBlocks.0",
        "expression": "tmp_cc$0 < tmp_cc",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.loop_decreases.2": {
        "class": "loop_decreases",
        "description": "Check variant decreases after step for loop SymCryptMd2AppendBlocks.1",
        "expression": "tmp_cc$2 < tmp_cc$1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_decreases.3": {
        "class": "loop_decreases",
        "description": "Check variant decreases after step for loop SymCryptMd2AppendBlocks.1",
        "expression": "tmp_cc$2 < tmp_cc$1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_decreases.4": {
        "class": "loop_decreases",
        "description": "Check variant decreases after step for loop SymCryptMd2AppendBlocks.2",
        "expression": "tmp_cc$4 < tmp_cc$3",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.loop_decreases.5": {
        "class": "loop_decreases",
        "description": "Check variant decreases after step for loop SymCryptMd2AppendBlocks.0",
        "expression": "tmp_cc$0 < tmp_cc",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.loop_decreases.6": {
        "class": "loop_decreases",
        "description": "Check variant decreases after step for loop SymCryptMd2AppendBlocks.1",
        "expression": "tmp_cc$2 < tmp_cc$1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_decreases.7": {
        "class": "loop_decreases",
        "description": "Check variant decreases after step for loop SymCryptMd2AppendBlocks.1",
        "expression": "tmp_cc$2 < tmp_cc$1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_decreases.8": {
        "class": "loop_decreases",
        "description": "Check variant decreases after step for loop SymCryptMd2AppendBlocks.2",
        "expression": "tmp_cc$4 < tmp_cc$3",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.loop_decreases.9": {
        "class": "loop_decreases",
        "description": "Check variant decreases after step for loop SymCryptMd2AppendBlocks.3",
        "expression": "tmp_cc$6 < tmp_cc$5",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 161
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.1": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.3",
        "expression": "__init_invariant$2",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 161
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.10": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.3",
        "expression": "__init_invariant$2",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 161
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.11": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.0",
        "expression": "__init_invariant",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.12": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.0",
        "expression": "__init_invariant",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.13": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.2",
        "expression": "__init_invariant$1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.14": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.1",
        "expression": "__init_invariant$0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.15": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.1",
        "expression": "__init_invariant$0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.16": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.2",
        "expression": "__init_invariant$1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.17": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.1",
        "expression": "__init_invariant$0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.18": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.1",
        "expression": "__init_invariant$0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.2": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.0",
        "expression": "__init_invariant",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.3": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.0",
        "expression": "__init_invariant",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.4": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.2",
        "expression": "__init_invariant$1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.5": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.1",
        "expression": "__init_invariant$0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.6": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.1",
        "expression": "__init_invariant$0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.7": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.2",
        "expression": "__init_invariant$1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.8": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.1",
        "expression": "__init_invariant$0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_base.9": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptMd2AppendBlocks.1",
        "expression": "__init_invariant$0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_step.1": {
        "class": "loop_invariant_step",
        "description": "Check invariant after step for loop SymCryptMd2AppendBlocks.0",
        "expression": "0 <= j && j <= 16",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_step.2": {
        "class": "loop_invariant_step",
        "description": "Check invariant after step for loop SymCryptMd2AppendBlocks.1",
        "expression": "0 <= k && k <= 48 && t >= (unsigned int)0 && t < (unsigned int)256",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_step.3": {
        "class": "loop_invariant_step",
        "description": "Check invariant after step for loop SymCryptMd2AppendBlocks.1",
        "expression": "0 <= k && k <= 48 && t >= (unsigned int)0 && t < (unsigned int)256",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_step.4": {
        "class": "loop_invariant_step",
        "description": "Check invariant after step for loop SymCryptMd2AppendBlocks.2",
        "expression": "0 <= j && j <= 18 && t < (unsigned int)256",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_step.5": {
        "class": "loop_invariant_step",
        "description": "Check invariant after step for loop SymCryptMd2AppendBlocks.0",
        "expression": "0 <= j && j <= 16",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_step.6": {
        "class": "loop_invariant_step",
        "description": "Check invariant after step for loop SymCryptMd2AppendBlocks.1",
        "expression": "0 <= k && k <= 48 && t >= (unsigned int)0 && t < (unsigned int)256",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_step.7": {
        "class": "loop_invariant_step",
        "description": "Check invariant after step for loop SymCryptMd2AppendBlocks.1",
        "expression": "0 <= k && k <= 48 && t >= (unsigned int)0 && t < (unsigned int)256",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_step.8": {
        "class": "loop_invariant_step",
        "description": "Check invariant after step for loop SymCryptMd2AppendBlocks.2",
        "expression": "0 <= j && j <= 18 && t < (unsigned int)256",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.loop_invariant_step.9": {
        "class": "loop_invariant_step",
        "description": "Check invariant after step for loop SymCryptMd2AppendBlocks.3",
        "expression": "cbData <= tmp_cc$7 && cbData % (unsigned long int)16 == tmp_cc$7 % (unsigned long int)16 && __CPROVER_POINTER_OBJECT((const void *)pbData) == __CPROVER_POINTER_OBJECT((const void *)tmp_cc$8) && __CPROVER_POINTER_OFFSET((const void *)pbData) + cbData == __CPROVER_POINTER_OFFSET((const void *)tmp_cc$8) + tmp_cc$7",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 161
        }
      },
      "SymCryptMd2AppendBlocks.loop_step_unwinding.1": {
        "class": "loop_step_unwinding",
        "description": "Check step was unwound for loop SymCryptMd2AppendBlocks.0",
        "expression": "!__entered_loop__0 || !__in_base_case",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.loop_step_unwinding.2": {
        "class": "loop_step_unwinding",
        "description": "Check step was unwound for loop SymCryptMd2AppendBlocks.1",
        "expression": "!__entered_loop__1 || !__in_base_case$0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_step_unwinding.3": {
        "class": "loop_step_unwinding",
        "description": "Check step was unwound for loop SymCryptMd2AppendBlocks.1",
        "expression": "!__entered_loop__1 || !__in_base_case$0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_step_unwinding.4": {
        "class": "loop_step_unwinding",
        "description": "Check step was unwound for loop SymCryptMd2AppendBlocks.2",
        "expression": "!__entered_loop__2 || !__in_base_case$1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.loop_step_unwinding.5": {
        "class": "loop_step_unwinding",
        "description": "Check step was unwound for loop SymCryptMd2AppendBlocks.0",
        "expression": "!__entered_loop__0 || !__in_base_case",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.loop_step_unwinding.6": {
        "class": "loop_step_unwinding",
        "description": "Check step was unwound for loop SymCryptMd2AppendBlocks.1",
        "expression": "!__entered_loop__1 || !__in_base_case$0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_step_unwinding.7": {
        "class": "loop_step_unwinding",
        "description": "Check step was unwound for loop SymCryptMd2AppendBlocks.1",
        "expression": "!__entered_loop__1 || !__in_base_case$0",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.loop_step_unwinding.8": {
        "class": "loop_step_unwinding",
        "description": "Check step was unwound for loop SymCryptMd2AppendBlocks.2",
        "expression": "!__entered_loop__2 || !__in_base_case$1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.loop_step_unwinding.9": {
        "class": "loop_step_unwinding",
        "description": "Check step was unwound for loop SymCryptMd2AppendBlocks.3",
        "expression": "!__entered_loop__3 || !__in_base_case$2",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 161
        }
      },
      "SymCryptMd2AppendBlocks.overflow.1": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 18 - j",
        "expression": "!overflow(\"-\", signed int, 18, j)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 183
        }
      },
      "SymCryptMd2AppendBlocks.overflow.10": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in k + 1",
        "expression": "!overflow(\"+\", signed int, k, 1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.overflow.11": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 48 - k",
        "expression": "!overflow(\"-\", signed int, 48, k)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 202
        }
      },
      "SymCryptMd2AppendBlocks.overflow.12": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in k + 1",
        "expression": "!overflow(\"+\", signed int, k, 1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.overflow.13": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 48 - k",
        "expression": "!overflow(\"-\", signed int, 48, k)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 202
        }
      },
      "SymCryptMd2AppendBlocks.overflow.14": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in j + 1",
        "expression": "!overflow(\"+\", signed int, j, 1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.overflow.15": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 18 - j",
        "expression": "!overflow(\"-\", signed int, 18, j)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 197
        }
      },
      "SymCryptMd2AppendBlocks.overflow.16": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 48 - k",
        "expression": "!overflow(\"-\", signed int, 48, k)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 202
        }
      },
      "SymCryptMd2AppendBlocks.overflow.17": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in k + 1",
        "expression": "!overflow(\"+\", signed int, k, 1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.overflow.18": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 48 - k",
        "expression": "!overflow(\"-\", signed int, 48, k)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 202
        }
      },
      "SymCryptMd2AppendBlocks.overflow.19": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in k + 1",
        "expression": "!overflow(\"+\", signed int, k, 1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.overflow.2": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in 16 + j",
        "expression": "!overflow(\"+\", signed int, 16, j)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.overflow.20": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 48 - k",
        "expression": "!overflow(\"-\", signed int, 48, k)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 202
        }
      },
      "SymCryptMd2AppendBlocks.overflow.21": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in j + 1",
        "expression": "!overflow(\"+\", signed int, j, 1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.overflow.22": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 18 - j",
        "expression": "!overflow(\"-\", signed int, 18, j)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 197
        }
      },
      "SymCryptMd2AppendBlocks.overflow.23": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 18 - j",
        "expression": "!overflow(\"-\", signed int, 18, j)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 183
        }
      },
      "SymCryptMd2AppendBlocks.overflow.24": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in 16 + j",
        "expression": "!overflow(\"+\", signed int, 16, j)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.overflow.25": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in j + 1",
        "expression": "!overflow(\"+\", signed int, j, 1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.overflow.26": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 18 - j",
        "expression": "!overflow(\"-\", signed int, 18, j)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 183
        }
      },
      "SymCryptMd2AppendBlocks.overflow.27": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in 16 + j",
        "expression": "!overflow(\"+\", signed int, 16, j)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.overflow.28": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in j + 1",
        "expression": "!overflow(\"+\", signed int, j, 1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.overflow.29": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 18 - j",
        "expression": "!overflow(\"-\", signed int, 18, j)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 183
        }
      },
      "SymCryptMd2AppendBlocks.overflow.3": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in j + 1",
        "expression": "!overflow(\"+\", signed int, j, 1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.overflow.30": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 18 - j",
        "expression": "!overflow(\"-\", signed int, 18, j)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 197
        }
      },
      "SymCryptMd2AppendBlocks.overflow.31": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 48 - k",
        "expression": "!overflow(\"-\", signed int, 48, k)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 202
        }
      },
      "SymCryptMd2AppendBlocks.overflow.32": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in k + 1",
        "expression": "!overflow(\"+\", signed int, k, 1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.overflow.33": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 48 - k",
        "expression": "!overflow(\"-\", signed int, 48, k)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 202
        }
      },
      "SymCryptMd2AppendBlocks.overflow.34": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in k + 1",
        "expression": "!overflow(\"+\", signed int, k, 1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.overflow.35": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 48 - k",
        "expression": "!overflow(\"-\", signed int, 48, k)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 202
        }
      },
      "SymCryptMd2AppendBlocks.overflow.36": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in j + 1",
        "expression": "!overflow(\"+\", signed int, j, 1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.overflow.37": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 18 - j",
        "expression": "!overflow(\"-\", signed int, 18, j)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 197
        }
      },
      "SymCryptMd2AppendBlocks.overflow.38": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 48 - k",
        "expression": "!overflow(\"-\", signed int, 48, k)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 202
        }
      },
      "SymCryptMd2AppendBlocks.overflow.39": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in k + 1",
        "expression": "!overflow(\"+\", signed int, k, 1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.overflow.4": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 18 - j",
        "expression": "!overflow(\"-\", signed int, 18, j)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 183
        }
      },
      "SymCryptMd2AppendBlocks.overflow.40": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 48 - k",
        "expression": "!overflow(\"-\", signed int, 48, k)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 202
        }
      },
      "SymCryptMd2AppendBlocks.overflow.41": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in k + 1",
        "expression": "!overflow(\"+\", signed int, k, 1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 199
        }
      },
      "SymCryptMd2AppendBlocks.overflow.42": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 48 - k",
        "expression": "!overflow(\"-\", signed int, 48, k)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 202
        }
      },
      "SymCryptMd2AppendBlocks.overflow.43": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in j + 1",
        "expression": "!overflow(\"+\", signed int, j, 1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 194
        }
      },
      "SymCryptMd2AppendBlocks.overflow.44": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 18 - j",
        "expression": "!overflow(\"-\", signed int, 18, j)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 197
        }
      },
      "SymCryptMd2AppendBlocks.overflow.5": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in 16 + j",
        "expression": "!overflow(\"+\", signed int, 16, j)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.overflow.6": {
        "class": "overflow",
        "description": "arithmetic overflow on signed + in j + 1",
        "expression": "!overflow(\"+\", signed int, j, 1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 180
        }
      },
      "SymCryptMd2AppendBlocks.overflow.7": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 18 - j",
        "expression": "!overflow(\"-\", signed int, 18, j)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 183
        }
      },
      "SymCryptMd2AppendBlocks.overflow.8": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 18 - j",
        "expression": "!overflow(\"-\", signed int, 18, j)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 197
        }
      },
      "SymCryptMd2AppendBlocks.overflow.9": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in 48 - k",
        "expression": "!overflow(\"-\", signed int, 48, k)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 202
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 178
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.100": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$4",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$4) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.101": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$4",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$4) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$4) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.102": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$4",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$4)) || __havoc_target$4 == ((signed int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.103": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$5",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$5))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.104": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$5",
        "expression": "!IS_INVALID_POINTER(__havoc_target$5)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.105": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$5",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$5) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.106": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$5",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$5) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.107": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$5",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$5) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$5) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.108": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$5",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$5)) || __havoc_target$5 == ((unsigned int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.109": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->C",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pChain) + 16",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.110": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.111": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.112": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.113": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.114": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.115": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.116": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.117": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.118": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.119": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || pChain == ((PSYMCRYPT_MD2_CHAINING_STATE)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.120": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.121": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$1))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.122": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$1",
        "expression": "!IS_INVALID_POINTER(__havoc_target$1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.123": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$1) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.124": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$1) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.125": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$1",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$1) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$1) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.126": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$1)) || __havoc_target$1 == ((signed int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.127": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$2))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.128": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$2",
        "expression": "!IS_INVALID_POINTER(__havoc_target$2)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.129": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$2) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.130": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$2) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.131": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$2",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$2) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$2) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.132": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$2)) || __havoc_target$2 == ((unsigned int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.133": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.134": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.135": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.136": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.137": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.138": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.139": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.140": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.141": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.142": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.143": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.144": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.145": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$6",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$6))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.146": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$6",
        "expression": "!IS_INVALID_POINTER(__havoc_target$6)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.147": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$6",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$6) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.148": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$6",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$6) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.149": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$6",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$6) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$6) + 8",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.150": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$6",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$6)) || __havoc_target$6 == ((PCBYTE *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.151": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$7",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$7))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.152": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$7",
        "expression": "!IS_INVALID_POINTER(__havoc_target$7)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.153": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$7",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$7) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.154": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$7",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$7) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.155": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$7",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$7) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$7) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.156": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$7",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$7)) || __havoc_target$7 == ((signed int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.157": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$8",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$8))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.158": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$8",
        "expression": "!IS_INVALID_POINTER(__havoc_target$8)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.159": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$8",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$8) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.160": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$8",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$8) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.161": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$8",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$8) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$8) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.162": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$8",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$8)) || __havoc_target$8 == ((signed int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.163": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$9",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$9))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.164": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$9",
        "expression": "!IS_INVALID_POINTER(__havoc_target$9)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.165": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$9",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$9) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.166": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$9",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$9) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.167": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$9",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$9) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$9) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.168": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$9",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$9)) || __havoc_target$9 == ((unsigned int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.169": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$10",
        "expression": "!(__CPROVER_POINTER_OBJECT(((SIZE_T *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$10))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.170": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$10",
        "expression": "!IS_INVALID_POINTER(__havoc_target$10)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.171": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$10",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$10) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.172": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$10",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$10) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.173": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$10",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$10) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$10) + 8",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.174": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$10",
        "expression": "!(__CPROVER_POINTER_OBJECT(((SIZE_T *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$10)) || __havoc_target$10 == ((SIZE_T *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 162
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.175": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 178
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.176": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->C",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 178
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.177": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 178
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.178": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 178
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.179": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->C",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pChain) + 16",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 178
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.180": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || pChain == ((PSYMCRYPT_MD2_CHAINING_STATE)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 178
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.181": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.182": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->C",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.183": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.184": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.185": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->C",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pChain) + 16",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.186": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || pChain == ((PSYMCRYPT_MD2_CHAINING_STATE)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.187": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.188": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.189": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.190": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.191": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.192": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.193": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.194": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->C",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.195": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.196": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.197": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->C",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pChain) + 16",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.198": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || pChain == ((PSYMCRYPT_MD2_CHAINING_STATE)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.199": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->C",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 178
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->C",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.200": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target",
        "expression": "!IS_INVALID_POINTER(__havoc_target)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.201": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.202": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.203": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.204": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target)) || __havoc_target == ((signed int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.205": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$0",
        "expression": "!(__CPROVER_POINTER_OBJECT(((BYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$0))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.206": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$0",
        "expression": "!IS_INVALID_POINTER(__havoc_target$0)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.207": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$0",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$0) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.208": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$0",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$0) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.209": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$0",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$0) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$0) + 1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.210": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$0",
        "expression": "!(__CPROVER_POINTER_OBJECT(((BYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$0)) || __havoc_target$0 == ((BYTE *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.211": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.212": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->C",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.213": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.214": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.215": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->C",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pChain) + 16",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.216": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || pChain == ((PSYMCRYPT_MD2_CHAINING_STATE)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.217": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.218": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.219": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.220": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.221": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.222": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.223": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.224": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->C",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.225": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.226": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.227": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->C",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pChain) + 16",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.228": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || pChain == ((PSYMCRYPT_MD2_CHAINING_STATE)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.229": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->C",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pChain) + 16",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.230": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.231": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.232": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.233": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.234": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.235": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.236": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.237": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.238": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.239": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || pChain == ((PSYMCRYPT_MD2_CHAINING_STATE)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.240": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.241": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$1))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.242": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$1",
        "expression": "!IS_INVALID_POINTER(__havoc_target$1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.243": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$1) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.244": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$1) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.245": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$1",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$1) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$1) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.246": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$1)) || __havoc_target$1 == ((signed int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.247": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$2))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.248": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$2",
        "expression": "!IS_INVALID_POINTER(__havoc_target$2)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.249": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$2) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.25": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.250": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$2) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.251": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$2",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$2) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$2) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.252": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$2)) || __havoc_target$2 == ((unsigned int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.253": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.254": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.255": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.256": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.257": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.258": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.259": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.26": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target",
        "expression": "!IS_INVALID_POINTER(__havoc_target)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.260": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.261": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.262": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.263": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.264": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.265": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$3",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$3))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.266": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$3",
        "expression": "!IS_INVALID_POINTER(__havoc_target$3)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.267": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$3",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$3) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.268": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$3",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$3) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.269": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$3",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$3) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$3) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.27": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.270": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$3",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$3)) || __havoc_target$3 == ((signed int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.271": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$4",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$4))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.272": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$4",
        "expression": "!IS_INVALID_POINTER(__havoc_target$4)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.273": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$4",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$4) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.274": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$4",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$4) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.275": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$4",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$4) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$4) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.276": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$4",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$4)) || __havoc_target$4 == ((signed int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.277": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$5",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$5))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.278": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$5",
        "expression": "!IS_INVALID_POINTER(__havoc_target$5)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.279": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$5",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$5) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.28": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.280": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$5",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$5) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.281": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$5",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$5) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$5) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.282": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$5",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$5)) || __havoc_target$5 == ((unsigned int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.283": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.284": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.285": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.286": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.287": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.288": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.289": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.29": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.290": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.291": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.292": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.293": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.294": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.295": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$1))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.296": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$1",
        "expression": "!IS_INVALID_POINTER(__havoc_target$1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.297": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$1) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.298": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$1) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.299": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$1",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$1) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$1) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 178
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.30": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target)) || __havoc_target == ((signed int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.300": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$1)) || __havoc_target$1 == ((signed int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.301": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$2))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.302": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$2",
        "expression": "!IS_INVALID_POINTER(__havoc_target$2)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.303": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$2) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.304": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$2) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.305": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$2",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$2) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$2) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.306": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$2)) || __havoc_target$2 == ((unsigned int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.307": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.308": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.309": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.31": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$0",
        "expression": "!(__CPROVER_POINTER_OBJECT(((BYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$0))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.310": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.311": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.312": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.313": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.314": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.315": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.316": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.317": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.318": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.319": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *pcbRemaining",
        "expression": "!(__CPROVER_POINTER_OBJECT(((SIZE_T *)NULL)) == __CPROVER_POINTER_OBJECT(pcbRemaining))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 214
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.32": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$0",
        "expression": "!IS_INVALID_POINTER(__havoc_target$0)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.320": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *pcbRemaining",
        "expression": "!IS_INVALID_POINTER(pcbRemaining)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 214
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.321": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *pcbRemaining",
        "expression": "!(__CPROVER_POINTER_OBJECT(pcbRemaining) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 214
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.322": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *pcbRemaining",
        "expression": "!(__CPROVER_POINTER_OBJECT(pcbRemaining) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 214
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.323": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *pcbRemaining",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pcbRemaining) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pcbRemaining) + 8",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 214
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.324": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *pcbRemaining",
        "expression": "!(__CPROVER_POINTER_OBJECT(((SIZE_T *)NULL)) == __CPROVER_POINTER_OBJECT(pcbRemaining)) || pcbRemaining == ((SIZE_T *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 214
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.33": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$0",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$0) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.34": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$0",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$0) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.35": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$0",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$0) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$0) + 1",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.36": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$0",
        "expression": "!(__CPROVER_POINTER_OBJECT(((BYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$0)) || __havoc_target$0 == ((BYTE *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 181
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.37": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.38": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->C",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.39": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 178
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.40": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.41": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->C",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pChain) + 16",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.42": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || pChain == ((PSYMCRYPT_MD2_CHAINING_STATE)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.43": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.44": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.45": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.46": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.47": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.48": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.49": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->C",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pChain) + 16",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 178
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.50": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->C",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.51": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.52": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.53": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->C",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pChain) + 16",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.54": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || pChain == ((PSYMCRYPT_MD2_CHAINING_STATE)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.55": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.56": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.57": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.58": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.59": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || pChain == ((PSYMCRYPT_MD2_CHAINING_STATE)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 178
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.60": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.61": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.62": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.63": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.64": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.65": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.66": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.67": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$1))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.68": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$1",
        "expression": "!IS_INVALID_POINTER(__havoc_target$1)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.69": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$1) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.70": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$1) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.71": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$1",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$1) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$1) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.72": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$1)) || __havoc_target$1 == ((signed int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.73": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$2))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.74": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$2",
        "expression": "!IS_INVALID_POINTER(__havoc_target$2)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.75": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$2) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.76": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$2) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.77": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$2",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$2) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$2) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.78": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$2)) || __havoc_target$2 == ((unsigned int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 200
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.79": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->C",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.80": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.81": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.82": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.83": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.84": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 204
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.85": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.86": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in pChain->X",
        "expression": "!IS_INVALID_POINTER(pChain)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.87": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.88": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.89": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in pChain->X",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pChain) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain) + 16ul) + 48",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in pChain->C",
        "expression": "!(__CPROVER_POINTER_OBJECT(pChain) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 185
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.90": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in pChain->X",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_CHAINING_STATE)NULL)) == __CPROVER_POINTER_OBJECT(pChain)) || (char *)pChain + 16l == ((char *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 205
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.91": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$3",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$3))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.92": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$3",
        "expression": "!IS_INVALID_POINTER(__havoc_target$3)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.93": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$3",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$3) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.94": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$3",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$3) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.95": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$3",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$3) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$3) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.96": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$3",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$3)) || __havoc_target$3 == ((signed int *)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.97": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$4",
        "expression": "!(__CPROVER_POINTER_OBJECT(((signed int *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$4))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.98": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$4",
        "expression": "!IS_INVALID_POINTER(__havoc_target$4)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.pointer_dereference.99": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$4",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$4) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 195
        }
      },
      "SymCryptMd2AppendBlocks.precondition_instance.1": {
        "class": "precondition_instance",
        "description": "memcpy src/dst overlap",
        "expression": "__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16 || (const char *)(void *)&pChain->X[(signed long int)16] >= (const char *)(const void *)pbData + (signed long int)(size_t)16",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 172
        }
      },
      "SymCryptMd2AppendBlocks.precondition_instance.2": {
        "class": "precondition_instance",
        "description": "memcpy source region readable",
        "expression": "R_OK((const void *)pbData, (size_t)16)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 172
        }
      },
      "SymCryptMd2AppendBlocks.precondition_instance.3": {
        "class": "precondition_instance",
        "description": "memcpy destination region writeable",
        "expression": "W_OK((void *)&pChain->X[(signed long int)16], (size_t)16)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 172
        }
      },
      "SymCryptMd2AppendBlocks.precondition_instance.4": {
        "class": "precondition_instance",
        "description": "memcpy src/dst overlap",
        "expression": "__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16 || (const char *)(void *)&pChain->X[(signed long int)16] >= (const char *)(const void *)pbData + (signed long int)(size_t)16",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 172
        }
      },
      "SymCryptMd2AppendBlocks.precondition_instance.5": {
        "class": "precondition_instance",
        "description": "memcpy source region readable",
        "expression": "R_OK((const void *)pbData, (size_t)16)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 172
        }
      },
      "SymCryptMd2AppendBlocks.precondition_instance.6": {
        "class": "precondition_instance",
        "description": "memcpy destination region writeable",
        "expression": "W_OK((void *)&pChain->X[(signed long int)16], (size_t)16)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2AppendBlocks",
          "line": 172
        }
      },
      "SymCryptMd2Result.assertion.1": {
        "class": "assertion",
        "description": "hash buffer length should always <= 16",
        "expression": "state->bytesInBuffer <= (unsigned int)16",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 120
        }
      },
      "SymCryptMd2Result.assigns.1": {
        "class": "assigns",
        "description": "Check that paddingBytes is assignable",
        "expression": "TRUE",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 121
        }
      },
      "SymCryptMd2Result.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in state->bytesInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_STATE)NULL)) == __CPROVER_POINTER_OBJECT(state))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 120
        }
      },
      "SymCryptMd2Result.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in state->bytesInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT(state) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 121
        }
      },
      "SymCryptMd2Result.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in state->bytesInBuffer",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(state) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(state) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 121
        }
      },
      "SymCryptMd2Result.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in state->bytesInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_STATE)NULL)) == __CPROVER_POINTER_OBJECT(state)) || state == ((PSYMCRYPT_MD2_STATE)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 121
        }
      },
      "SymCryptMd2Result.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in state->bytesInBuffer",
        "expression": "!IS_INVALID_POINTER(state)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 120
        }
      },
      "SymCryptMd2Result.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in state->bytesInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT(state) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 120
        }
      },
      "SymCryptMd2Result.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in state->bytesInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT(state) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 120
        }
      },
      "SymCryptMd2Result.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in state->bytesInBuffer",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(state) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(state) + 4",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 120
        }
      },
      "SymCryptMd2Result.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in state->bytesInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_STATE)NULL)) == __CPROVER_POINTER_OBJECT(state)) || state == ((PSYMCRYPT_MD2_STATE)NULL)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 120
        }
      },
      "SymCryptMd2Result.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in state->bytesInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PSYMCRYPT_MD2_STATE)NULL)) == __CPROVER_POINTER_OBJECT(state))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 121
        }
      },
      "SymCryptMd2Result.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in state->bytesInBuffer",
        "expression": "!IS_INVALID_POINTER(state)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 121
        }
      },
      "SymCryptMd2Result.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in state->bytesInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT(state) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 121
        }
      },
      "SymCryptMd2Result.precondition_instance.1": {
        "class": "precondition_instance",
        "description": "memset destination region writeable",
        "expression": "W_OK((void *)&state->buffer[(signed long int)state->bytesInBuffer], paddingBytes)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 126
        }
      },
      "SymCryptMd2Result.precondition_instance.2": {
        "class": "precondition_instance",
        "description": "memcpy src/dst overlap",
        "expression": "__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0]) || (const char *)(const void *)&state->chain.X[(signed long int)0] >= (const char *)(void *)pbResult + (signed long int)(size_t)16 || (const char *)(void *)pbResult >= (const char *)(const void *)&state->chain.X[(signed long int)0] + (signed long int)(size_t)16",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 135
        }
      },
      "SymCryptMd2Result.precondition_instance.3": {
        "class": "precondition_instance",
        "description": "memcpy source region readable",
        "expression": "R_OK((const void *)&state->chain.X[(signed long int)0], (size_t)16)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 135
        }
      },
      "SymCryptMd2Result.precondition_instance.4": {
        "class": "precondition_instance",
        "description": "memcpy destination region writeable",
        "expression": "W_OK((void *)pbResult, (size_t)16)",
        "location": {
          "file": "lib/md2.c",
          "function": "SymCryptMd2Result",
          "line": 135
        }
      },
      "SymCryptWipeAsm.assigns.1": {
        "class": "assigns",
        "description": "Check that p is assignable",
        "expression": "TRUE",
        "location": {
          "file": "CBMC/proofs/SymCryptMd2/SymCryptMd2_harness.c",
          "function": "SymCryptWipeAsm",
          "line": 48
        }
      },
      "SymCryptWipeAsm.precondition_instance.1": {
        "class": "precondition_instance",
        "description": "memset destination region writeable",
        "expression": "W_OK((void *)p, cbData)",
        "location": {
          "file": "CBMC/proofs/SymCryptMd2/SymCryptMd2_harness.c",
          "function": "SymCryptWipeAsm",
          "line": 49
        }
      },
      "SymCryptWipeKnownSize.assigns.1": {
        "class": "assigns",
        "description": "Check that pb is assignable",
        "expression": "TRUE",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2964
        }
      },
      "SymCryptWipeKnownSize.assigns.10": {
        "class": "assigns",
        "description": "Check that cbData is assignable",
        "expression": "TRUE",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2997
        }
      },
      "SymCryptWipeKnownSize.assigns.11": {
        "class": "assigns",
        "description": "Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]) is assignable",
        "expression": "__check_lhs_assignment$3",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2998
        }
      },
      "SymCryptWipeKnownSize.assigns.12": {
        "class": "assigns",
        "description": "Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]) is assignable",
        "expression": "__check_lhs_assignment$4",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2999
        }
      },
      "SymCryptWipeKnownSize.assigns.13": {
        "class": "assigns",
        "description": "Check that cbData is assignable",
        "expression": "TRUE",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3003
        }
      },
      "SymCryptWipeKnownSize.assigns.14": {
        "class": "assigns",
        "description": "Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]) is assignable",
        "expression": "__check_lhs_assignment$5",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3004
        }
      },
      "SymCryptWipeKnownSize.assigns.15": {
        "class": "assigns",
        "description": "Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]) is assignable",
        "expression": "__check_lhs_assignment$6",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3005
        }
      },
      "SymCryptWipeKnownSize.assigns.16": {
        "class": "assigns",
        "description": "Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)]) is assignable",
        "expression": "__check_lhs_assignment$7",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3006
        }
      },
      "SymCryptWipeKnownSize.assigns.17": {
        "class": "assigns",
        "description": "Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)]) is assignable",
        "expression": "__check_lhs_assignment$8",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3007
        }
      },
      "SymCryptWipeKnownSize.assigns.18": {
        "class": "assigns",
        "description": "Check that cbData is assignable",
        "expression": "TRUE",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3012
        }
      },
      "SymCryptWipeKnownSize.assigns.19": {
        "class": "assigns",
        "description": "Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]) is assignable",
        "expression": "__check_lhs_assignment$9",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3013
        }
      },
      "SymCryptWipeKnownSize.assigns.2": {
        "class": "assigns",
        "description": "Check that cbData is assignable",
        "expression": "TRUE",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2977
        }
      },
      "SymCryptWipeKnownSize.assigns.20": {
        "class": "assigns",
        "description": "Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)]) is assignable",
        "expression": "__check_lhs_assignment$10",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3014
        }
      },
      "SymCryptWipeKnownSize.assigns.21": {
        "class": "assigns",
        "description": "Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)]) is assignable",
        "expression": "__check_lhs_assignment$11",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3015
        }
      },
      "SymCryptWipeKnownSize.assigns.22": {
        "class": "assigns",
        "description": "Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)]) is assignable",
        "expression": "__check_lhs_assignment$12",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3016
        }
      },
      "SymCryptWipeKnownSize.assigns.23": {
        "class": "assigns",
        "description": "Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)32)]) is assignable",
        "expression": "__check_lhs_assignment$13",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3017
        }
      },
      "SymCryptWipeKnownSize.assigns.24": {
        "class": "assigns",
        "description": "Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)40)]) is assignable",
        "expression": "__check_lhs_assignment$14",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3018
        }
      },
      "SymCryptWipeKnownSize.assigns.25": {
        "class": "assigns",
        "description": "Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)48)]) is assignable",
        "expression": "__check_lhs_assignment$15",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3019
        }
      },
      "SymCryptWipeKnownSize.assigns.26": {
        "class": "assigns",
        "description": "Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)56)]) is assignable",
        "expression": "__check_lhs_assignment$16",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3020
        }
      },
      "SymCryptWipeKnownSize.assigns.3": {
        "class": "assigns",
        "description": "Check that *((volatile BYTE *)(volatile BYTE *)&pb[(signed long int)cbData]) is assignable",
        "expression": "__check_lhs_assignment",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2978
        }
      },
      "SymCryptWipeKnownSize.assigns.4": {
        "class": "assigns",
        "description": "Check that cbData is assignable",
        "expression": "TRUE",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2982
        }
      },
      "SymCryptWipeKnownSize.assigns.5": {
        "class": "assigns",
        "description": "Check that *((volatile UINT16 *)(volatile UINT16 *)&pb[(signed long int)cbData]) is assignable",
        "expression": "__check_lhs_assignment$0",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2983
        }
      },
      "SymCryptWipeKnownSize.assigns.6": {
        "class": "assigns",
        "description": "Check that cbData is assignable",
        "expression": "TRUE",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2987
        }
      },
      "SymCryptWipeKnownSize.assigns.7": {
        "class": "assigns",
        "description": "Check that *((volatile UINT32 *)(volatile UINT32 *)&pb[(signed long int)cbData]) is assignable",
        "expression": "__check_lhs_assignment$1",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2988
        }
      },
      "SymCryptWipeKnownSize.assigns.8": {
        "class": "assigns",
        "description": "Check that cbData is assignable",
        "expression": "TRUE",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2992
        }
      },
      "SymCryptWipeKnownSize.assigns.9": {
        "class": "assigns",
        "description": "Check that *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData]) is assignable",
        "expression": "__check_lhs_assignment$2",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2993
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile BYTE *)(volatile BYTE *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile BYTE *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2978
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT16 *)(volatile UINT16 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2983
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.100": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)48)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3019
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.101": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)48)])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData + 48ul) + 8",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3019
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.102": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)48)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData + 48l == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3019
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.103": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)56)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3020
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.104": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)56)])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3020
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.105": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)56)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3020
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.106": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)56)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3020
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.107": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)56)])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData + 56ul) + 8",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3020
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.108": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)56)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData + 56l == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3020
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT16 *)(volatile UINT16 *)&pb[(signed long int)cbData])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData) + 2",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2983
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT16 *)(volatile UINT16 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT16 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2983
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT32 *)(volatile UINT32 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT32 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2988
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT32 *)(volatile UINT32 *)&pb[(signed long int)cbData])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2988
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT32 *)(volatile UINT32 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2988
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT32 *)(volatile UINT32 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2988
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT32 *)(volatile UINT32 *)&pb[(signed long int)cbData])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData) + 4",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2988
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT32 *)(volatile UINT32 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT32 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2988
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2993
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile BYTE *)(volatile BYTE *)&pb[(signed long int)cbData])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2978
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2993
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2993
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2993
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData) + 8",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2993
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2993
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.25": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2998
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.26": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2998
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.27": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2998
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.28": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2998
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.29": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData) + 8",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2998
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile BYTE *)(volatile BYTE *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2978
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.30": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2998
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.31": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2999
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.32": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2999
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.33": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2999
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.34": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2999
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.35": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData + 8ul) + 8",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2999
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.36": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData + 8l == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2999
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.37": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3004
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.38": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3004
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.39": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3004
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile BYTE *)(volatile BYTE *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2978
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.40": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3004
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.41": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData) + 8",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3004
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.42": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3004
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.43": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3005
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.44": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3005
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.45": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3005
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.46": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3005
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.47": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData + 8ul) + 8",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3005
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.48": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData + 8l == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3005
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.49": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3006
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile BYTE *)(volatile BYTE *)&pb[(signed long int)cbData])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData) + 1",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2978
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.50": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3006
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.51": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3006
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.52": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3006
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.53": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData + 16ul) + 8",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3006
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.54": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData + 16l == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3006
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.55": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3007
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.56": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3007
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.57": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3007
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.58": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3007
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.59": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData + 24ul) + 8",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3007
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile BYTE *)(volatile BYTE *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile BYTE *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2978
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.60": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData + 24l == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3007
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.61": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3013
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.62": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3013
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.63": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3013
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.64": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3013
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.65": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData) + 8",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3013
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.66": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3013
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.67": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3014
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.68": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3014
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.69": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3014
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT16 *)(volatile UINT16 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT16 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2983
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.70": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3014
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.71": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData + 8ul) + 8",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3014
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.72": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)8)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData + 8l == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3014
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.73": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3015
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.74": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3015
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.75": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3015
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.76": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3015
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.77": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData + 16ul) + 8",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3015
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.78": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)16)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData + 16l == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3015
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.79": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3016
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT16 *)(volatile UINT16 *)&pb[(signed long int)cbData])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2983
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.80": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3016
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.81": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3016
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.82": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3016
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.83": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData + 24ul) + 8",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3016
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.84": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)24)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData + 24l == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3016
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.85": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)32)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3017
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.86": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)32)])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3017
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.87": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)32)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3017
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.88": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)32)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3017
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.89": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)32)])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData + 32ul) + 8",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3017
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT16 *)(volatile UINT16 *)&pb[(signed long int)cbData])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 2983
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.90": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)32)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData + 32l == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3017
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.91": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)40)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3018
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.92": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)40)])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3018
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.93": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)40)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3018
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.94": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)40)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3018
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.95": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)40)])",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pb) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pb) + (unsigned long int)(signed long int)cbData + 40ul) + 8",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3018
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.96": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)40)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb)) || pb + (signed long int)cbData + 40l == ((volatile BYTE *)NULL)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3018
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.97": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)48)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(((volatile UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pb))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3019
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.98": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)48)])",
        "expression": "!IS_INVALID_POINTER(pb)",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3019
        }
      },
      "SymCryptWipeKnownSize.pointer_dereference.99": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((volatile UINT64 *)(volatile UINT64 *)&pb[(signed long int)(cbData + (unsigned long int)48)])",
        "expression": "!(__CPROVER_POINTER_OBJECT(pb) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "inc/symcrypt_internal.h",
          "function": "SymCryptWipeKnownSize",
          "line": 3019
        }
      },
      "SymCryptXorBytes.assigns.1": {
        "class": "assigns",
        "description": "Check that s1 is assignable",
        "expression": "TRUE",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 200
        }
      },
      "SymCryptXorBytes.assigns.10": {
        "class": "assigns",
        "description": "Check that cbBytes is assignable",
        "expression": "__check_lhs_assignment$5",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 218
        }
      },
      "SymCryptXorBytes.assigns.11": {
        "class": "assigns",
        "description": "Check that *((UINT64 *)pbResult) is assignable",
        "expression": "__check_lhs_assignment$1",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.assigns.12": {
        "class": "assigns",
        "description": "Check that pbSrc1 is assignable",
        "expression": "__check_lhs_assignment$2",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 215
        }
      },
      "SymCryptXorBytes.assigns.13": {
        "class": "assigns",
        "description": "Check that pbSrc2 is assignable",
        "expression": "__check_lhs_assignment$3",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 216
        }
      },
      "SymCryptXorBytes.assigns.14": {
        "class": "assigns",
        "description": "Check that pbResult is assignable",
        "expression": "__check_lhs_assignment$4",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 217
        }
      },
      "SymCryptXorBytes.assigns.15": {
        "class": "assigns",
        "description": "Check that cbBytes is assignable",
        "expression": "__check_lhs_assignment$5",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 218
        }
      },
      "SymCryptXorBytes.assigns.16": {
        "class": "assigns",
        "description": "Check that *pbResult is assignable",
        "expression": "__check_lhs_assignment$6",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.assigns.17": {
        "class": "assigns",
        "description": "Check that pbResult is assignable",
        "expression": "__check_lhs_assignment$7",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 227
        }
      },
      "SymCryptXorBytes.assigns.18": {
        "class": "assigns",
        "description": "Check that pbSrc1 is assignable",
        "expression": "__check_lhs_assignment$8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 228
        }
      },
      "SymCryptXorBytes.assigns.19": {
        "class": "assigns",
        "description": "Check that pbSrc2 is assignable",
        "expression": "__check_lhs_assignment$9",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 229
        }
      },
      "SymCryptXorBytes.assigns.2": {
        "class": "assigns",
        "description": "Check that s2 is assignable",
        "expression": "TRUE",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 201
        }
      },
      "SymCryptXorBytes.assigns.20": {
        "class": "assigns",
        "description": "Check that cbBytes is assignable",
        "expression": "__check_lhs_assignment$10",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 230
        }
      },
      "SymCryptXorBytes.assigns.21": {
        "class": "assigns",
        "description": "Check that *pbResult is assignable",
        "expression": "__check_lhs_assignment$6",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.assigns.22": {
        "class": "assigns",
        "description": "Check that pbResult is assignable",
        "expression": "__check_lhs_assignment$7",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 227
        }
      },
      "SymCryptXorBytes.assigns.23": {
        "class": "assigns",
        "description": "Check that pbSrc1 is assignable",
        "expression": "__check_lhs_assignment$8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 228
        }
      },
      "SymCryptXorBytes.assigns.24": {
        "class": "assigns",
        "description": "Check that pbSrc2 is assignable",
        "expression": "__check_lhs_assignment$9",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 229
        }
      },
      "SymCryptXorBytes.assigns.25": {
        "class": "assigns",
        "description": "Check that cbBytes is assignable",
        "expression": "__check_lhs_assignment$10",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 230
        }
      },
      "SymCryptXorBytes.assigns.3": {
        "class": "assigns",
        "description": "Check that d is assignable",
        "expression": "TRUE",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 202
        }
      },
      "SymCryptXorBytes.assigns.4": {
        "class": "assigns",
        "description": "Check that d[(signed long int)0] is assignable",
        "expression": "__check_lhs_assignment",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.assigns.5": {
        "class": "assigns",
        "description": "Check that d[(signed long int)1] is assignable",
        "expression": "__check_lhs_assignment$0",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.assigns.6": {
        "class": "assigns",
        "description": "Check that *((UINT64 *)pbResult) is assignable",
        "expression": "__check_lhs_assignment$1",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.assigns.7": {
        "class": "assigns",
        "description": "Check that pbSrc1 is assignable",
        "expression": "__check_lhs_assignment$2",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 215
        }
      },
      "SymCryptXorBytes.assigns.8": {
        "class": "assigns",
        "description": "Check that pbSrc2 is assignable",
        "expression": "__check_lhs_assignment$3",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 216
        }
      },
      "SymCryptXorBytes.assigns.9": {
        "class": "assigns",
        "description": "Check that pbResult is assignable",
        "expression": "__check_lhs_assignment$4",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 217
        }
      },
      "SymCryptXorBytes.loop_assigns.1": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptXorBytes.0",
        "expression": "__check_assigns_clause_incl_loop_0",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 209
        }
      },
      "SymCryptXorBytes.loop_assigns.2": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptXorBytes.0",
        "expression": "__check_assigns_clause_incl_loop_0",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 209
        }
      },
      "SymCryptXorBytes.loop_assigns.3": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptXorBytes.1",
        "expression": "__check_assigns_clause_incl_loop_1",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 221
        }
      },
      "SymCryptXorBytes.loop_assigns.4": {
        "class": "loop_assigns",
        "description": "Check assigns clause inclusion for loop SymCryptXorBytes.1",
        "expression": "__check_assigns_clause_incl_loop_1",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 221
        }
      },
      "SymCryptXorBytes.loop_decreases.1": {
        "class": "loop_decreases",
        "description": "Check variant decreases after step for loop SymCryptXorBytes.0",
        "expression": "tmp_cc$0 < tmp_cc",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 209
        }
      },
      "SymCryptXorBytes.loop_decreases.2": {
        "class": "loop_decreases",
        "description": "Check variant decreases after step for loop SymCryptXorBytes.1",
        "expression": "tmp_cc$2 < tmp_cc$1",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 221
        }
      },
      "SymCryptXorBytes.loop_invariant_base.1": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptXorBytes.0",
        "expression": "__init_invariant",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 209
        }
      },
      "SymCryptXorBytes.loop_invariant_base.2": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptXorBytes.0",
        "expression": "__init_invariant",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 209
        }
      },
      "SymCryptXorBytes.loop_invariant_base.3": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptXorBytes.1",
        "expression": "__init_invariant$0",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 221
        }
      },
      "SymCryptXorBytes.loop_invariant_base.4": {
        "class": "loop_invariant_base",
        "description": "Check invariant before entry for loop SymCryptXorBytes.1",
        "expression": "__init_invariant$0",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 221
        }
      },
      "SymCryptXorBytes.loop_invariant_step.1": {
        "class": "loop_invariant_step",
        "description": "Check invariant after step for loop SymCryptXorBytes.0",
        "expression": "cbBytes >= (unsigned long int)0",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 209
        }
      },
      "SymCryptXorBytes.loop_invariant_step.2": {
        "class": "loop_invariant_step",
        "description": "Check invariant after step for loop SymCryptXorBytes.1",
        "expression": "cbBytes >= (unsigned long int)0",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 221
        }
      },
      "SymCryptXorBytes.loop_step_unwinding.1": {
        "class": "loop_step_unwinding",
        "description": "Check step was unwound for loop SymCryptXorBytes.0",
        "expression": "!__entered_loop__0 || !__in_base_case",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 209
        }
      },
      "SymCryptXorBytes.loop_step_unwinding.2": {
        "class": "loop_step_unwinding",
        "description": "Check step was unwound for loop SymCryptXorBytes.1",
        "expression": "!__entered_loop__1 || !__in_base_case$0",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 221
        }
      },
      "SymCryptXorBytes.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in d[(signed long int)0]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PUINT64)NULL)) == __CPROVER_POINTER_OBJECT(d))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in s1[(signed long int)0]",
        "expression": "!(__CPROVER_POINTER_OBJECT(s1) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.100": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *pbResult",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbResult) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.101": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *pbResult",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbResult) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbResult) + 1",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.102": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *pbResult",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PBYTE)NULL)) == __CPROVER_POINTER_OBJECT(pbResult)) || pbResult == ((PBYTE)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.103": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *pbSrc1",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE)NULL)) == __CPROVER_POINTER_OBJECT(pbSrc1))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.104": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *pbSrc1",
        "expression": "!IS_INVALID_POINTER(pbSrc1)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.105": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *pbSrc1",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbSrc1) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.106": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *pbSrc1",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbSrc1) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.107": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *pbSrc1",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbSrc1) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbSrc1) + 1",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.108": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *pbSrc1",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE)NULL)) == __CPROVER_POINTER_OBJECT(pbSrc1)) || pbSrc1 == ((PCBYTE)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.109": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *pbSrc2",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE)NULL)) == __CPROVER_POINTER_OBJECT(pbSrc2))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in s1[(signed long int)0]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(s1) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(s1) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.110": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *pbSrc2",
        "expression": "!IS_INVALID_POINTER(pbSrc2)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.111": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *pbSrc2",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbSrc2) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.112": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *pbSrc2",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbSrc2) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.113": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *pbSrc2",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbSrc2) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbSrc2) + 1",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.114": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *pbSrc2",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE)NULL)) == __CPROVER_POINTER_OBJECT(pbSrc2)) || pbSrc2 == ((PCBYTE)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.115": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$3",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PBYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$3))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.116": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$3",
        "expression": "!IS_INVALID_POINTER(__havoc_target$3)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.117": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$3",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$3) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.118": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$3",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$3) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.119": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$3",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$3) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$3) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in s1[(signed long int)0]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCUINT64)NULL)) == __CPROVER_POINTER_OBJECT(s1)) || s1 == ((PCUINT64)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.120": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$3",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PBYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$3)) || __havoc_target$3 == ((PBYTE *)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.121": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$4",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$4))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.122": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$4",
        "expression": "!IS_INVALID_POINTER(__havoc_target$4)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.123": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$4",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$4) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.124": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$4",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$4) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.125": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$4",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$4) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$4) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.126": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$4",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$4)) || __havoc_target$4 == ((PCBYTE *)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.127": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$5",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$5))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.128": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$5",
        "expression": "!IS_INVALID_POINTER(__havoc_target$5)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.129": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$5",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$5) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in s2[(signed long int)0]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCUINT64)NULL)) == __CPROVER_POINTER_OBJECT(s2))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.130": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$5",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$5) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.131": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$5",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$5) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$5) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.132": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$5",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$5)) || __havoc_target$5 == ((PCBYTE *)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.133": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$6",
        "expression": "!(__CPROVER_POINTER_OBJECT(((SIZE_T *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$6))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.134": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$6",
        "expression": "!IS_INVALID_POINTER(__havoc_target$6)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.135": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$6",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$6) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.136": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$6",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$6) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.137": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$6",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$6) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$6) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.138": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$6",
        "expression": "!(__CPROVER_POINTER_OBJECT(((SIZE_T *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$6)) || __havoc_target$6 == ((SIZE_T *)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 222
        }
      },
      "SymCryptXorBytes.pointer_dereference.139": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *pbResult",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PBYTE)NULL)) == __CPROVER_POINTER_OBJECT(pbResult))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in s2[(signed long int)0]",
        "expression": "!IS_INVALID_POINTER(s2)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.140": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *pbResult",
        "expression": "!IS_INVALID_POINTER(pbResult)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.141": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *pbResult",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbResult) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.142": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *pbResult",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbResult) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.143": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *pbResult",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbResult) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbResult) + 1",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.144": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *pbResult",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PBYTE)NULL)) == __CPROVER_POINTER_OBJECT(pbResult)) || pbResult == ((PBYTE)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.145": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *pbSrc1",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE)NULL)) == __CPROVER_POINTER_OBJECT(pbSrc1))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.146": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *pbSrc1",
        "expression": "!IS_INVALID_POINTER(pbSrc1)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.147": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *pbSrc1",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbSrc1) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.148": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *pbSrc1",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbSrc1) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.149": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *pbSrc1",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbSrc1) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbSrc1) + 1",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in s2[(signed long int)0]",
        "expression": "!(__CPROVER_POINTER_OBJECT(s2) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.150": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *pbSrc1",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE)NULL)) == __CPROVER_POINTER_OBJECT(pbSrc1)) || pbSrc1 == ((PCBYTE)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.151": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *pbSrc2",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE)NULL)) == __CPROVER_POINTER_OBJECT(pbSrc2))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.152": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *pbSrc2",
        "expression": "!IS_INVALID_POINTER(pbSrc2)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.153": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *pbSrc2",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbSrc2) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.154": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *pbSrc2",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbSrc2) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.155": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *pbSrc2",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbSrc2) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbSrc2) + 1",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.156": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *pbSrc2",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE)NULL)) == __CPROVER_POINTER_OBJECT(pbSrc2)) || pbSrc2 == ((PCBYTE)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in s2[(signed long int)0]",
        "expression": "!(__CPROVER_POINTER_OBJECT(s2) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in s2[(signed long int)0]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(s2) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(s2) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in s2[(signed long int)0]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCUINT64)NULL)) == __CPROVER_POINTER_OBJECT(s2)) || s2 == ((PCUINT64)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in d[(signed long int)1]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PUINT64)NULL)) == __CPROVER_POINTER_OBJECT(d))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in d[(signed long int)0]",
        "expression": "!IS_INVALID_POINTER(d)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in d[(signed long int)1]",
        "expression": "!IS_INVALID_POINTER(d)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in d[(signed long int)1]",
        "expression": "!(__CPROVER_POINTER_OBJECT(d) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in d[(signed long int)1]",
        "expression": "!(__CPROVER_POINTER_OBJECT(d) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in d[(signed long int)1]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(d) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(d) + 8ul) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in d[(signed long int)1]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PUINT64)NULL)) == __CPROVER_POINTER_OBJECT(d)) || d + 1l == ((PUINT64)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.25": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in s1[(signed long int)1]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCUINT64)NULL)) == __CPROVER_POINTER_OBJECT(s1))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.26": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in s1[(signed long int)1]",
        "expression": "!IS_INVALID_POINTER(s1)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.27": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in s1[(signed long int)1]",
        "expression": "!(__CPROVER_POINTER_OBJECT(s1) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.28": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in s1[(signed long int)1]",
        "expression": "!(__CPROVER_POINTER_OBJECT(s1) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.29": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in s1[(signed long int)1]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(s1) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(s1) + 8ul) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in d[(signed long int)0]",
        "expression": "!(__CPROVER_POINTER_OBJECT(d) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.30": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in s1[(signed long int)1]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCUINT64)NULL)) == __CPROVER_POINTER_OBJECT(s1)) || s1 + 1l == ((PCUINT64)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.31": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in s2[(signed long int)1]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCUINT64)NULL)) == __CPROVER_POINTER_OBJECT(s2))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.32": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in s2[(signed long int)1]",
        "expression": "!IS_INVALID_POINTER(s2)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.33": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in s2[(signed long int)1]",
        "expression": "!(__CPROVER_POINTER_OBJECT(s2) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.34": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in s2[(signed long int)1]",
        "expression": "!(__CPROVER_POINTER_OBJECT(s2) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.35": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in s2[(signed long int)1]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(s2) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(s2) + 8ul) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.36": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in s2[(signed long int)1]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCUINT64)NULL)) == __CPROVER_POINTER_OBJECT(s2)) || s2 + 1l == ((PCUINT64)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 205
        }
      },
      "SymCryptXorBytes.pointer_dereference.37": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((UINT64 *)pbResult)",
        "expression": "!(__CPROVER_POINTER_OBJECT(((UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pbResult))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.38": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((UINT64 *)pbResult)",
        "expression": "!IS_INVALID_POINTER(pbResult)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.39": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((UINT64 *)pbResult)",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbResult) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in d[(signed long int)0]",
        "expression": "!(__CPROVER_POINTER_OBJECT(d) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.40": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((UINT64 *)pbResult)",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbResult) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.41": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((UINT64 *)pbResult)",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbResult) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbResult) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.42": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((UINT64 *)pbResult)",
        "expression": "!(__CPROVER_POINTER_OBJECT(((UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pbResult)) || pbResult == ((PBYTE)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.43": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((UINT64 *)pbSrc1)",
        "expression": "!(__CPROVER_POINTER_OBJECT(((UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pbSrc1))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.44": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((UINT64 *)pbSrc1)",
        "expression": "!IS_INVALID_POINTER(pbSrc1)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.45": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((UINT64 *)pbSrc1)",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbSrc1) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.46": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((UINT64 *)pbSrc1)",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbSrc1) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.47": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((UINT64 *)pbSrc1)",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbSrc1) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbSrc1) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.48": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((UINT64 *)pbSrc1)",
        "expression": "!(__CPROVER_POINTER_OBJECT(((UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pbSrc1)) || pbSrc1 == ((PCBYTE)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.49": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((UINT64 *)pbSrc2)",
        "expression": "!(__CPROVER_POINTER_OBJECT(((UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pbSrc2))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in d[(signed long int)0]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(d) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(d) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.50": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((UINT64 *)pbSrc2)",
        "expression": "!IS_INVALID_POINTER(pbSrc2)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.51": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((UINT64 *)pbSrc2)",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbSrc2) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.52": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((UINT64 *)pbSrc2)",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbSrc2) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.53": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((UINT64 *)pbSrc2)",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbSrc2) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbSrc2) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.54": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((UINT64 *)pbSrc2)",
        "expression": "!(__CPROVER_POINTER_OBJECT(((UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pbSrc2)) || pbSrc2 == ((PCBYTE)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.55": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PBYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.56": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target",
        "expression": "!IS_INVALID_POINTER(__havoc_target)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.57": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.58": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.59": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in d[(signed long int)0]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PUINT64)NULL)) == __CPROVER_POINTER_OBJECT(d)) || d == ((PUINT64)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.60": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PBYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target)) || __havoc_target == ((PBYTE *)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.61": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$0",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$0))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.62": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$0",
        "expression": "!IS_INVALID_POINTER(__havoc_target$0)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.63": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$0",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$0) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.64": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$0",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$0) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.65": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$0",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$0) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$0) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.66": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$0",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$0)) || __havoc_target$0 == ((PCBYTE *)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.67": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$1))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.68": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$1",
        "expression": "!IS_INVALID_POINTER(__havoc_target$1)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.69": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$1) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in s1[(signed long int)0]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCUINT64)NULL)) == __CPROVER_POINTER_OBJECT(s1))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.70": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$1) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.71": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$1",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$1) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$1) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.72": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$1",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PCBYTE *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$1)) || __havoc_target$1 == ((PCBYTE *)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.73": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(((SIZE_T *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$2))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.74": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *__havoc_target$2",
        "expression": "!IS_INVALID_POINTER(__havoc_target$2)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.75": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$2) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.76": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(__havoc_target$2) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.77": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *__havoc_target$2",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(__havoc_target$2) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(__havoc_target$2) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.78": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *__havoc_target$2",
        "expression": "!(__CPROVER_POINTER_OBJECT(((SIZE_T *)NULL)) == __CPROVER_POINTER_OBJECT(__havoc_target$2)) || __havoc_target$2 == ((SIZE_T *)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 210
        }
      },
      "SymCryptXorBytes.pointer_dereference.79": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((UINT64 *)pbResult)",
        "expression": "!(__CPROVER_POINTER_OBJECT(((UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pbResult))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in s1[(signed long int)0]",
        "expression": "!IS_INVALID_POINTER(s1)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.80": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((UINT64 *)pbResult)",
        "expression": "!IS_INVALID_POINTER(pbResult)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.81": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((UINT64 *)pbResult)",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbResult) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.82": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((UINT64 *)pbResult)",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbResult) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.83": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((UINT64 *)pbResult)",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbResult) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbResult) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.84": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((UINT64 *)pbResult)",
        "expression": "!(__CPROVER_POINTER_OBJECT(((UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pbResult)) || pbResult == ((PBYTE)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.85": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((UINT64 *)pbSrc1)",
        "expression": "!(__CPROVER_POINTER_OBJECT(((UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pbSrc1))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.86": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((UINT64 *)pbSrc1)",
        "expression": "!IS_INVALID_POINTER(pbSrc1)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.87": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((UINT64 *)pbSrc1)",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbSrc1) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.88": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((UINT64 *)pbSrc1)",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbSrc1) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.89": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((UINT64 *)pbSrc1)",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbSrc1) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbSrc1) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in s1[(signed long int)0]",
        "expression": "!(__CPROVER_POINTER_OBJECT(s1) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 204
        }
      },
      "SymCryptXorBytes.pointer_dereference.90": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((UINT64 *)pbSrc1)",
        "expression": "!(__CPROVER_POINTER_OBJECT(((UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pbSrc1)) || pbSrc1 == ((PCBYTE)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.91": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *((UINT64 *)pbSrc2)",
        "expression": "!(__CPROVER_POINTER_OBJECT(((UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pbSrc2))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.92": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *((UINT64 *)pbSrc2)",
        "expression": "!IS_INVALID_POINTER(pbSrc2)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.93": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *((UINT64 *)pbSrc2)",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbSrc2) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.94": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *((UINT64 *)pbSrc2)",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbSrc2) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.95": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *((UINT64 *)pbSrc2)",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbSrc2) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbSrc2) + 8",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.96": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *((UINT64 *)pbSrc2)",
        "expression": "!(__CPROVER_POINTER_OBJECT(((UINT64 *)NULL)) == __CPROVER_POINTER_OBJECT(pbSrc2)) || pbSrc2 == ((PCBYTE)NULL)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 214
        }
      },
      "SymCryptXorBytes.pointer_dereference.97": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *pbResult",
        "expression": "!(__CPROVER_POINTER_OBJECT(((PBYTE)NULL)) == __CPROVER_POINTER_OBJECT(pbResult))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.98": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *pbResult",
        "expression": "!IS_INVALID_POINTER(pbResult)",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "SymCryptXorBytes.pointer_dereference.99": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *pbResult",
        "expression": "!(__CPROVER_POINTER_OBJECT(pbResult) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "lib/libmain.c",
          "function": "SymCryptXorBytes",
          "line": 226
        }
      },
      "__CPROVER_contracts_car_create.assertion.1": {
        "class": "assertion",
        "description": "ptr NULL or writable up to size",
        "expression": "((signed int)(ptr == NULL) | (signed int)RW_OK(ptr, size)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_create",
          "line": 113
        }
      },
      "__CPROVER_contracts_car_create.assertion.2": {
        "class": "assertion",
        "description": "CAR size is less than __CPROVER_max_malloc_size",
        "expression": "size <= __CPROVER_max_malloc_size",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_create",
          "line": 116
        }
      },
      "__CPROVER_contracts_car_create.assertion.3": {
        "class": "assertion",
        "description": "no offset bits overflow on CAR upper bound computation",
        "expression": "((signed int)!(offset > (unsigned long int)0) | (signed int)(offset + size <= __CPROVER_max_malloc_size)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_create",
          "line": 120
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->max_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 208
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 209
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 209
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 8l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 209
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in elem->is_writable",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned char *)NULL)) == __CPROVER_POINTER_OBJECT(elem))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 213
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in elem->is_writable",
        "expression": "!IS_INVALID_POINTER(elem)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 213
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in elem->is_writable",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 213
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in elem->is_writable",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 213
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in elem->is_writable",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(elem) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(elem) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 213
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in elem->is_writable",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned char *)NULL)) == __CPROVER_POINTER_OBJECT(elem)) || elem == ((__CPROVER_contracts_car_t *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 213
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in elem->lb",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(elem))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 214
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->max_elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 208
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in elem->lb",
        "expression": "!IS_INVALID_POINTER(elem)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 214
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in elem->lb",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 214
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in elem->lb",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 214
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in elem->lb",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(elem) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(elem) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 214
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in elem->lb",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(elem)) || (char *)elem + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 214
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.25": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in elem->ub",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(elem))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 218
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.26": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in elem->ub",
        "expression": "!IS_INVALID_POINTER(elem)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 218
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.27": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in elem->ub",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 218
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.28": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in elem->ub",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 218
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.29": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in elem->ub",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(elem) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(elem) + 24ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 218
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->max_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 208
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.30": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in elem->ub",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(elem)) || (char *)elem + 24l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 218
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->max_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 208
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->max_elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(set) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 208
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->max_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || set == ((__CPROVER_contracts_car_set_ptr_t)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 208
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 209
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 209
        }
      },
      "__CPROVER_contracts_car_set_contains.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_contains",
          "line": 209
        }
      },
      "__CPROVER_contracts_car_set_create.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->max_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_create",
          "line": 140
        }
      },
      "__CPROVER_contracts_car_set_create.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_create",
          "line": 141
        }
      },
      "__CPROVER_contracts_car_set_create.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_create",
          "line": 141
        }
      },
      "__CPROVER_contracts_car_set_create.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 8l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_create",
          "line": 141
        }
      },
      "__CPROVER_contracts_car_set_create.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->max_elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_create",
          "line": 140
        }
      },
      "__CPROVER_contracts_car_set_create.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->max_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_create",
          "line": 140
        }
      },
      "__CPROVER_contracts_car_set_create.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->max_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_create",
          "line": 140
        }
      },
      "__CPROVER_contracts_car_set_create.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->max_elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(set) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_create",
          "line": 140
        }
      },
      "__CPROVER_contracts_car_set_create.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->max_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || set == ((__CPROVER_contracts_car_set_ptr_t)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_create",
          "line": 140
        }
      },
      "__CPROVER_contracts_car_set_create.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_create",
          "line": 141
        }
      },
      "__CPROVER_contracts_car_set_create.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_create",
          "line": 141
        }
      },
      "__CPROVER_contracts_car_set_create.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_create",
          "line": 141
        }
      },
      "__CPROVER_contracts_car_set_insert.assertion.1": {
        "class": "assertion",
        "description": "ptr NULL or writable up to size",
        "expression": "((signed int)(ptr == NULL) | (signed int)RW_OK(ptr, size)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 161
        }
      },
      "__CPROVER_contracts_car_set_insert.assertion.2": {
        "class": "assertion",
        "description": "CAR size is less than __CPROVER_max_malloc_size",
        "expression": "size <= __CPROVER_max_malloc_size",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 164
        }
      },
      "__CPROVER_contracts_car_set_insert.assertion.3": {
        "class": "assertion",
        "description": "no offset bits overflow on CAR upper bound computation",
        "expression": "((signed int)!(offset > (unsigned long int)0) | (signed int)(offset + size <= __CPROVER_max_malloc_size)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 168
        }
      },
      "__CPROVER_contracts_car_set_insert.assertion.4": {
        "class": "assertion",
        "description": "ptr NULL or writable up to size",
        "expression": "((signed int)(ptr == NULL) | (signed int)RW_OK(ptr, size)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 161
        }
      },
      "__CPROVER_contracts_car_set_insert.assertion.5": {
        "class": "assertion",
        "description": "CAR size is less than __CPROVER_max_malloc_size",
        "expression": "size <= __CPROVER_max_malloc_size",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 164
        }
      },
      "__CPROVER_contracts_car_set_insert.assertion.6": {
        "class": "assertion",
        "description": "no offset bits overflow on CAR upper bound computation",
        "expression": "((signed int)!(offset > (unsigned long int)0) | (signed int)(offset + size <= __CPROVER_max_malloc_size)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 168
        }
      },
      "__CPROVER_contracts_car_set_insert.assertion.7": {
        "class": "assertion",
        "description": "ptr NULL or writable up to size",
        "expression": "((signed int)(ptr == NULL) | (signed int)RW_OK(ptr, size)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 161
        }
      },
      "__CPROVER_contracts_car_set_insert.assertion.8": {
        "class": "assertion",
        "description": "CAR size is less than __CPROVER_max_malloc_size",
        "expression": "size <= __CPROVER_max_malloc_size",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 164
        }
      },
      "__CPROVER_contracts_car_set_insert.assertion.9": {
        "class": "assertion",
        "description": "no offset bits overflow on CAR upper bound computation",
        "expression": "((signed int)!(offset > (unsigned long int)0) | (signed int)(offset + size <= __CPROVER_max_malloc_size)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 168
        }
      },
      "__CPROVER_contracts_car_set_insert.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 171
        }
      },
      "__CPROVER_contracts_car_set_insert.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *elem",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 172
        }
      },
      "__CPROVER_contracts_car_set_insert.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *elem",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(elem) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(elem) + 32",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 172
        }
      },
      "__CPROVER_contracts_car_set_insert.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *elem",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_t *)NULL)) == __CPROVER_POINTER_OBJECT(elem)) || elem == ((__CPROVER_contracts_car_t *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 172
        }
      },
      "__CPROVER_contracts_car_set_insert.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 171
        }
      },
      "__CPROVER_contracts_car_set_insert.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 171
        }
      },
      "__CPROVER_contracts_car_set_insert.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 171
        }
      },
      "__CPROVER_contracts_car_set_insert.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 171
        }
      },
      "__CPROVER_contracts_car_set_insert.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 8l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 171
        }
      },
      "__CPROVER_contracts_car_set_insert.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *elem",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_t *)NULL)) == __CPROVER_POINTER_OBJECT(elem))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 172
        }
      },
      "__CPROVER_contracts_car_set_insert.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *elem",
        "expression": "!IS_INVALID_POINTER(elem)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 172
        }
      },
      "__CPROVER_contracts_car_set_insert.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *elem",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_insert",
          "line": 172
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->max_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 186
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 187
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 187
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 8l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 187
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in elem->lb",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(elem))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 191
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in elem->lb",
        "expression": "!IS_INVALID_POINTER(elem)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 191
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in elem->lb",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 191
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in elem->lb",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 191
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in elem->lb",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(elem) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(elem) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 191
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in elem->lb",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(elem)) || (char *)elem + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 191
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in elem->is_writable",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned char *)NULL)) == __CPROVER_POINTER_OBJECT(elem))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 192
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->max_elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 186
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in elem->is_writable",
        "expression": "!IS_INVALID_POINTER(elem)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 192
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in elem->is_writable",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 192
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in elem->is_writable",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 192
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in elem->is_writable",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(elem) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(elem) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 192
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in elem->is_writable",
        "expression": "!(__CPROVER_POINTER_OBJECT(((unsigned char *)NULL)) == __CPROVER_POINTER_OBJECT(elem)) || elem == ((__CPROVER_contracts_car_t *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 192
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->max_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 186
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->max_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 186
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->max_elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(set) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 186
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->max_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || set == ((__CPROVER_contracts_car_set_ptr_t)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 186
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 187
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 187
        }
      },
      "__CPROVER_contracts_car_set_remove.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_car_set_remove",
          "line": 187
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.assertion.1": {
        "class": "assertion",
        "description": "__CPROVER_was_freed is used only in ensures clauses",
        "expression": "set != ((__CPROVER_contracts_write_set_ptr_t)NULL) && ((signed int)((signed int)set->assume_ensures_ctx == 1) | (signed int)((signed int)set->assert_ensures_ctx == 1)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1497
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.assertion.2": {
        "class": "assertion",
        "description": "assuming __CPROVER_was_freed(ptr) requires ptr to always exist in the contract's frees clause",
        "expression": "set->contract_frees.elems[(signed long int)object_id] == ptr",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1511
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->assume_ensures_ctx",
        "expression": "set != ((__CPROVER_contracts_write_set_ptr_t)NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1498
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->assert_ensures_ctx",
        "expression": "set != ((__CPROVER_contracts_write_set_ptr_t)NULL) ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1498
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->assert_ensures_ctx",
        "expression": "set != ((__CPROVER_contracts_write_set_ptr_t)NULL) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 203ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1498
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->assert_ensures_ctx",
        "expression": "set != ((__CPROVER_contracts_write_set_ptr_t)NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 203l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1498
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1501
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->assume_ensures_ctx",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1501
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1501
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1501
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->assume_ensures_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 202ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1501
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 202l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1501
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1512
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->assume_ensures_ctx",
        "expression": "set != ((__CPROVER_contracts_write_set_ptr_t)NULL) ==> !IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1498
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_frees",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1512
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1512
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1512
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_frees",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 16ul) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1512
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1512
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.25": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->contract_frees.elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1512
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.26": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(set->contract_frees.elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1512
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.27": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->contract_frees.elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1512
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.28": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->contract_frees.elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1512
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.29": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set->contract_frees.elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set->contract_frees.elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1512
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->assume_ensures_ctx",
        "expression": "set != ((__CPROVER_contracts_write_set_ptr_t)NULL) ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1498
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.30": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->contract_frees.elems)) || set->contract_frees.elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1512
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->assume_ensures_ctx",
        "expression": "set != ((__CPROVER_contracts_write_set_ptr_t)NULL) ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1498
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->assume_ensures_ctx",
        "expression": "set != ((__CPROVER_contracts_write_set_ptr_t)NULL) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 202ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1498
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->assume_ensures_ctx",
        "expression": "set != ((__CPROVER_contracts_write_set_ptr_t)NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 202l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1498
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->assert_ensures_ctx",
        "expression": "set != ((__CPROVER_contracts_write_set_ptr_t)NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1498
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->assert_ensures_ctx",
        "expression": "set != ((__CPROVER_contracts_write_set_ptr_t)NULL) ==> !IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1498
        }
      },
      "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->assert_ensures_ctx",
        "expression": "set != ((__CPROVER_contracts_write_set_ptr_t)NULL) ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_check_replace_ensures_was_freed_preconditions",
          "line": 1498
        }
      },
      "__CPROVER_contracts_is_freeable.assertion.1": {
        "class": "assertion",
        "description": "__CPROVER_is_freeable is used only in requires or ensures clauses",
        "expression": "((signed int)(set != ((__CPROVER_contracts_write_set_ptr_t)NULL)) & ((signed int)((signed int)set->assume_requires_ctx == 1) | (signed int)((signed int)set->assert_requires_ctx == 1) | (signed int)((signed int)set->assume_ensures_ctx == 1) | (signed int)((signed int)set->assert_ensures_ctx == 1))) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1439
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->assume_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1441
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1441
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->assert_requires_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 201ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1441
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 201l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1441
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1442
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->assume_ensures_ctx",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1442
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1442
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1442
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->assume_ensures_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 202ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1442
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 202l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1442
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1442
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->assume_requires_ctx",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1441
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->assert_ensures_ctx",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1442
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1442
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1442
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->assert_ensures_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 203ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1442
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 203l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1442
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.25": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->assume_requires_ctx",
        "expression": "TRUE ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1450
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.26": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->assume_requires_ctx",
        "expression": "TRUE ==> !IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1450
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.27": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->assume_requires_ctx",
        "expression": "TRUE ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1450
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.28": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->assume_requires_ctx",
        "expression": "TRUE ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1450
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.29": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->assume_requires_ctx",
        "expression": "TRUE ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 200ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1450
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->assume_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1441
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.30": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->assume_requires_ctx",
        "expression": "TRUE ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 200l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1450
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.31": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->assume_ensures_ctx",
        "expression": "!((signed int)set->assume_requires_ctx == 1) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1450
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.32": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->assume_ensures_ctx",
        "expression": "!((signed int)set->assume_requires_ctx == 1) ==> !IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1450
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.33": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->assume_ensures_ctx",
        "expression": "!((signed int)set->assume_requires_ctx == 1) ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1450
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.34": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->assume_ensures_ctx",
        "expression": "!((signed int)set->assume_requires_ctx == 1) ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1450
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.35": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->assume_ensures_ctx",
        "expression": "!((signed int)set->assume_requires_ctx == 1) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 202ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1450
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.36": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->assume_ensures_ctx",
        "expression": "!((signed int)set->assume_requires_ctx == 1) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 202l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1450
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->assume_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1441
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->assume_requires_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 200ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1441
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->assume_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 200l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1441
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1441
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->assert_requires_ctx",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1441
        }
      },
      "__CPROVER_contracts_is_freeable.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_freeable",
          "line": 1441
        }
      },
      "__CPROVER_contracts_is_fresh.assertion.1": {
        "class": "assertion",
        "description": "__CPROVER_is_fresh is used only in requires or ensures clauses",
        "expression": "((signed int)(write_set != ((__CPROVER_contracts_write_set_ptr_t)NULL)) & ((signed int)((signed int)write_set->assume_requires_ctx == 1) | (signed int)((signed int)write_set->assert_requires_ctx == 1) | (signed int)((signed int)write_set->assume_ensures_ctx == 1) | (signed int)((signed int)write_set->assert_ensures_ctx == 1))) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1161
        }
      },
      "__CPROVER_contracts_is_fresh.assertion.2": {
        "class": "assertion",
        "description": "__CPROVER_is_fresh max allocation size exceeded",
        "expression": "size <= __CPROVER_max_malloc_size",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1198
        }
      },
      "__CPROVER_contracts_is_fresh.assertion.3": {
        "class": "assertion",
        "description": "__CPROVER_is_fresh requires size <= __CPROVER_max_malloc_size",
        "expression": "size <= __CPROVER_max_malloc_size",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1252
        }
      },
      "__CPROVER_contracts_is_fresh.assertion.4": {
        "class": "assertion",
        "description": "__CPROVER_is_fresh is only called in requires or ensures clauses",
        "expression": "0 != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1325
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->assume_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1162
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1163
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.100": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1228
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.101": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_is_fresh",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 176ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1228
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.102": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 176l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1228
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.103": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_is_fresh->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_is_fresh))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1228
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.104": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_is_fresh->is_empty",
        "expression": "!IS_INVALID_POINTER(write_set->linked_is_fresh)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1228
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.105": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_is_fresh->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_is_fresh) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1228
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.106": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_is_fresh->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_is_fresh) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1228
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.107": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_is_fresh->is_empty",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set->linked_is_fresh) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set->linked_is_fresh) + 24ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1228
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.108": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_is_fresh->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_is_fresh)) || (char *)write_set->linked_is_fresh + 24l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1228
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.109": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1232
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->assert_requires_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 201ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1163
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.110": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->assume_ensures_ctx",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1232
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.111": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1232
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.112": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1232
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.113": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->assume_ensures_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 202ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1232
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.114": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 202l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1232
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.115": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *elem",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(elem))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1259
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.116": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *elem",
        "expression": "!IS_INVALID_POINTER(elem)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1259
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.117": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *elem",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1259
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.118": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *elem",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1259
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.119": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *elem",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(elem) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(elem) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1259
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 201l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1163
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.120": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *elem",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(elem)) || elem == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1259
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.121": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1277
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.122": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_allocated",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1277
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.123": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1277
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.124": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1277
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.125": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_allocated",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 184ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1277
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.126": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 184l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1277
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.127": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_allocated->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_allocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1277
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.128": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_allocated->nof_elems",
        "expression": "!IS_INVALID_POINTER(write_set->linked_allocated)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1277
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.129": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_allocated->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_allocated) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1277
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1164
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.130": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_allocated->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_allocated) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1277
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.131": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_allocated->nof_elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set->linked_allocated) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set->linked_allocated) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1277
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.132": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_allocated->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_allocated)) || (char *)write_set->linked_allocated + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1277
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.133": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_allocated->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_allocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1278
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.134": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_allocated->elems",
        "expression": "!IS_INVALID_POINTER(write_set->linked_allocated)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1278
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.135": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_allocated->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_allocated) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1278
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.136": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_allocated->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_allocated) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1278
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.137": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_allocated->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set->linked_allocated) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set->linked_allocated) + 32ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1278
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.138": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_allocated->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_allocated)) || (char *)write_set->linked_allocated + 32l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1278
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.139": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_allocated->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_allocated->elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1278
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->assume_ensures_ctx",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1164
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.140": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_allocated->elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(write_set->linked_allocated->elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1278
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.141": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_allocated->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_allocated->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1278
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.142": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_allocated->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_allocated->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1278
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.143": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_allocated->elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set->linked_allocated->elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set->linked_allocated->elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1278
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.144": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_allocated->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_allocated->elems)) || write_set->linked_allocated->elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1278
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.145": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_allocated",
        "expression": "write_set->linked_allocated->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1279
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.146": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_allocated",
        "expression": "write_set->linked_allocated->elems[(signed long int)object_id] != NULL ==> !IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1279
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.147": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_allocated",
        "expression": "write_set->linked_allocated->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1279
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.148": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_allocated",
        "expression": "write_set->linked_allocated->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1279
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.149": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_allocated",
        "expression": "write_set->linked_allocated->elems[(signed long int)object_id] != NULL ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 184ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1279
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1164
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.150": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_allocated",
        "expression": "write_set->linked_allocated->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 184l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1279
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.151": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_allocated->nof_elems",
        "expression": "write_set->linked_allocated->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_allocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1279
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.152": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_allocated->nof_elems",
        "expression": "write_set->linked_allocated->elems[(signed long int)object_id] != NULL ==> !IS_INVALID_POINTER(write_set->linked_allocated)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1279
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.153": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_allocated->nof_elems",
        "expression": "write_set->linked_allocated->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(write_set->linked_allocated) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1279
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.154": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_allocated->nof_elems",
        "expression": "write_set->linked_allocated->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(write_set->linked_allocated) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1279
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.155": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_allocated->nof_elems",
        "expression": "write_set->linked_allocated->elems[(signed long int)object_id] != NULL ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set->linked_allocated) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set->linked_allocated) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1279
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.156": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_allocated->nof_elems",
        "expression": "write_set->linked_allocated->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_allocated)) || (char *)write_set->linked_allocated + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1279
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.157": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_allocated",
        "expression": "!(write_set->linked_allocated->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1280
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.158": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_allocated",
        "expression": "!(write_set->linked_allocated->elems[(signed long int)object_id] != NULL) ==> !IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1280
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.159": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_allocated",
        "expression": "!(write_set->linked_allocated->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1280
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1164
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.160": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_allocated",
        "expression": "!(write_set->linked_allocated->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1280
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.161": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_allocated",
        "expression": "!(write_set->linked_allocated->elems[(signed long int)object_id] != NULL) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 184ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1280
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.162": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_allocated",
        "expression": "!(write_set->linked_allocated->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 184l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1280
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.163": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_allocated->nof_elems",
        "expression": "!(write_set->linked_allocated->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_allocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1280
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.164": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_allocated->nof_elems",
        "expression": "!(write_set->linked_allocated->elems[(signed long int)object_id] != NULL) ==> !IS_INVALID_POINTER(write_set->linked_allocated)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1280
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.165": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_allocated->nof_elems",
        "expression": "!(write_set->linked_allocated->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(write_set->linked_allocated) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1280
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.166": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_allocated->nof_elems",
        "expression": "!(write_set->linked_allocated->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(write_set->linked_allocated) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1280
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.167": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_allocated->nof_elems",
        "expression": "!(write_set->linked_allocated->elems[(signed long int)object_id] != NULL) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set->linked_allocated) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set->linked_allocated) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1280
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.168": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_allocated->nof_elems",
        "expression": "!(write_set->linked_allocated->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_allocated)) || (char *)write_set->linked_allocated + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1280
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.169": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->assume_ensures_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 202ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1164
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.170": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_allocated",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.171": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.172": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.173": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_allocated",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 184ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.174": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 184l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.175": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_allocated->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_allocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.176": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_allocated->elems",
        "expression": "!IS_INVALID_POINTER(write_set->linked_allocated)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.177": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_allocated->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_allocated) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.178": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_allocated->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_allocated) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.179": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_allocated->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set->linked_allocated) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set->linked_allocated) + 32ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 202l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1164
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.180": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_allocated->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_allocated)) || (char *)write_set->linked_allocated + 32l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.181": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_allocated->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_allocated->elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.182": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_allocated->elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(write_set->linked_allocated->elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.183": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_allocated->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_allocated->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.184": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_allocated->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_allocated->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.185": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_allocated->elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set->linked_allocated->elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set->linked_allocated->elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.186": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_allocated->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_allocated->elems)) || write_set->linked_allocated->elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1281
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.187": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1282
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.188": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_allocated",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1282
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.189": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1282
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1165
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.190": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1282
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.191": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_allocated",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 184ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1282
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.192": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 184l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1282
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.193": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_allocated->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_allocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1282
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.194": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_allocated->is_empty",
        "expression": "!IS_INVALID_POINTER(write_set->linked_allocated)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1282
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.195": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_allocated->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_allocated) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1282
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.196": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_allocated->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_allocated) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1282
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.197": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_allocated->is_empty",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set->linked_allocated) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set->linked_allocated) + 24ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1282
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.198": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_allocated->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_allocated)) || (char *)write_set->linked_allocated + 24l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1282
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.199": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1286
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->assume_requires_ctx",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1162
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->assert_ensures_ctx",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1165
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.200": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->assert_requires_ctx",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1286
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.201": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1286
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.202": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1286
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.203": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->assert_requires_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 201ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1286
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.204": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 201l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1286
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.205": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1286
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.206": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->assert_ensures_ctx",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1286
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.207": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1286
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.208": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1286
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.209": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->assert_ensures_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 203ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1286
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1165
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.210": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 203l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1286
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.211": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1294
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.212": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_is_fresh",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1294
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.213": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1294
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.214": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1294
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.215": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_is_fresh",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 176ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1294
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.216": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 176l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1294
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.217": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *elem",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(elem))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1295
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.218": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *elem",
        "expression": "!IS_INVALID_POINTER(elem)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1295
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.219": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *elem",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1295
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1165
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.220": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *elem",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1295
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.221": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *elem",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(elem) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(elem) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1295
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.222": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *elem",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(elem)) || elem == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1295
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.223": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in seen->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(seen))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1307
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.224": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in seen->elems",
        "expression": "!IS_INVALID_POINTER(seen)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1307
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.225": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in seen->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(seen) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1307
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.226": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in seen->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(seen) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1307
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.227": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in seen->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(seen) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(seen) + 32ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1307
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.228": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in seen->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(seen)) || (char *)seen + 32l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1307
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.229": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in seen->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(seen->elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1307
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->assert_ensures_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 203ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1165
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.230": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in seen->elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(seen->elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1307
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.231": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in seen->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(seen->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1307
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.232": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in seen->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(seen->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1307
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.233": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in seen->elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(seen->elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(seen->elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1307
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.234": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in seen->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(seen->elems)) || seen->elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1307
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.235": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in seen->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(seen))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1315
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.236": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in seen->nof_elems",
        "expression": "!IS_INVALID_POINTER(seen)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1315
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.237": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in seen->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(seen) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1315
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.238": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in seen->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(seen) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1315
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.239": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in seen->nof_elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(seen) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(seen) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1315
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 203l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1165
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.240": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in seen->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(seen)) || (char *)seen + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1315
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.241": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in seen->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(seen))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.242": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in seen->elems",
        "expression": "!IS_INVALID_POINTER(seen)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.243": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in seen->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(seen) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.244": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in seen->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(seen) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.245": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in seen->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(seen) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(seen) + 32ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.246": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in seen->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(seen)) || (char *)seen + 32l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.247": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in seen->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(seen->elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.248": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in seen->elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(seen->elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.249": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in seen->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(seen->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.25": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *elem",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(elem))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1205
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.250": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in seen->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(seen->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.251": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in seen->elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(seen->elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(seen->elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.252": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in seen->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(seen->elems)) || seen->elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.253": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in seen->nof_elems",
        "expression": "seen->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(seen))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.254": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in seen->nof_elems",
        "expression": "seen->elems[(signed long int)object_id] != NULL ==> !IS_INVALID_POINTER(seen)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.255": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in seen->nof_elems",
        "expression": "seen->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(seen) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.256": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in seen->nof_elems",
        "expression": "seen->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(seen) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.257": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in seen->nof_elems",
        "expression": "seen->elems[(signed long int)object_id] != NULL ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(seen) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(seen) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.258": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in seen->nof_elems",
        "expression": "seen->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(seen)) || (char *)seen + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.259": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in seen->nof_elems",
        "expression": "!(seen->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(seen))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.26": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *elem",
        "expression": "!IS_INVALID_POINTER(elem)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1205
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.260": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in seen->nof_elems",
        "expression": "!(seen->elems[(signed long int)object_id] != NULL) ==> !IS_INVALID_POINTER(seen)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.261": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in seen->nof_elems",
        "expression": "!(seen->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(seen) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.262": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in seen->nof_elems",
        "expression": "!(seen->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(seen) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.263": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in seen->nof_elems",
        "expression": "!(seen->elems[(signed long int)object_id] != NULL) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(seen) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(seen) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.264": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in seen->nof_elems",
        "expression": "!(seen->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(seen)) || (char *)seen + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1316
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.265": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in seen->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(seen))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1317
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.266": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in seen->elems",
        "expression": "!IS_INVALID_POINTER(seen)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1317
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.267": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in seen->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(seen) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1317
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.268": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in seen->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(seen) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1317
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.269": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in seen->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(seen) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(seen) + 32ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1317
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.27": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *elem",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1205
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.270": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in seen->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(seen)) || (char *)seen + 32l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1317
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.271": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in seen->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(seen->elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1317
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.272": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in seen->elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(seen->elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1317
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.273": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in seen->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(seen->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1317
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.274": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in seen->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(seen->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1317
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.275": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in seen->elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(seen->elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(seen->elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1317
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.276": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in seen->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(seen->elems)) || seen->elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1317
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.277": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in seen->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(seen))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1318
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.278": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in seen->is_empty",
        "expression": "!IS_INVALID_POINTER(seen)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1318
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.279": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in seen->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(seen) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1318
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.28": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *elem",
        "expression": "!(__CPROVER_POINTER_OBJECT(elem) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1205
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.280": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in seen->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(seen) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1318
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.281": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in seen->is_empty",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(seen) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(seen) + 24ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1318
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.282": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in seen->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(seen)) || (char *)seen + 24l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1318
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.29": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *elem",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(elem) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(elem) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1205
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->assume_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1162
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.30": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *elem",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(elem)) || elem == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1205
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.31": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1223
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.32": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_is_fresh",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1223
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.33": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1223
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.34": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1223
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.35": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_is_fresh",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 176ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1223
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.36": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 176l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1223
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.37": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_is_fresh->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_is_fresh))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1223
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.38": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_is_fresh->nof_elems",
        "expression": "!IS_INVALID_POINTER(write_set->linked_is_fresh)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1223
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.39": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_is_fresh->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_is_fresh) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1223
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->assume_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1162
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.40": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_is_fresh->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_is_fresh) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1223
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.41": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_is_fresh->nof_elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set->linked_is_fresh) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set->linked_is_fresh) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1223
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.42": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_is_fresh->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_is_fresh)) || (char *)write_set->linked_is_fresh + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1223
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.43": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_is_fresh->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_is_fresh))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1224
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.44": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_is_fresh->elems",
        "expression": "!IS_INVALID_POINTER(write_set->linked_is_fresh)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1224
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.45": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_is_fresh->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_is_fresh) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1224
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.46": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_is_fresh->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_is_fresh) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1224
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.47": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_is_fresh->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set->linked_is_fresh) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set->linked_is_fresh) + 32ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1224
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.48": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_is_fresh->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_is_fresh)) || (char *)write_set->linked_is_fresh + 32l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1224
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.49": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_is_fresh->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_is_fresh->elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1224
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->assume_requires_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 200ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1162
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.50": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_is_fresh->elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(write_set->linked_is_fresh->elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1224
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.51": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_is_fresh->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_is_fresh->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1224
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.52": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_is_fresh->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_is_fresh->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1224
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.53": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_is_fresh->elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set->linked_is_fresh->elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set->linked_is_fresh->elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1224
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.54": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_is_fresh->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_is_fresh->elems)) || write_set->linked_is_fresh->elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1224
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.55": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_is_fresh",
        "expression": "write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1225
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.56": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_is_fresh",
        "expression": "write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL ==> !IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1225
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.57": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_is_fresh",
        "expression": "write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1225
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.58": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_is_fresh",
        "expression": "write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1225
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.59": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_is_fresh",
        "expression": "write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 176ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1225
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->assume_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 200l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1162
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.60": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_is_fresh",
        "expression": "write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 176l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1225
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.61": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_is_fresh->nof_elems",
        "expression": "write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_is_fresh))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1225
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.62": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_is_fresh->nof_elems",
        "expression": "write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL ==> !IS_INVALID_POINTER(write_set->linked_is_fresh)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1225
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.63": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_is_fresh->nof_elems",
        "expression": "write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(write_set->linked_is_fresh) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1225
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.64": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_is_fresh->nof_elems",
        "expression": "write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(write_set->linked_is_fresh) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1225
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.65": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_is_fresh->nof_elems",
        "expression": "write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set->linked_is_fresh) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set->linked_is_fresh) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1225
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.66": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_is_fresh->nof_elems",
        "expression": "write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_is_fresh)) || (char *)write_set->linked_is_fresh + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1225
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.67": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_is_fresh",
        "expression": "!(write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1226
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.68": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_is_fresh",
        "expression": "!(write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL) ==> !IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1226
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.69": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_is_fresh",
        "expression": "!(write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1226
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1163
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.70": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_is_fresh",
        "expression": "!(write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1226
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.71": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_is_fresh",
        "expression": "!(write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 176ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1226
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.72": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_is_fresh",
        "expression": "!(write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 176l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1226
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.73": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_is_fresh->nof_elems",
        "expression": "!(write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_is_fresh))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1226
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.74": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_is_fresh->nof_elems",
        "expression": "!(write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL) ==> !IS_INVALID_POINTER(write_set->linked_is_fresh)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1226
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.75": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_is_fresh->nof_elems",
        "expression": "!(write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(write_set->linked_is_fresh) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1226
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.76": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_is_fresh->nof_elems",
        "expression": "!(write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(write_set->linked_is_fresh) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1226
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.77": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_is_fresh->nof_elems",
        "expression": "!(write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set->linked_is_fresh) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set->linked_is_fresh) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1226
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.78": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_is_fresh->nof_elems",
        "expression": "!(write_set->linked_is_fresh->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_is_fresh)) || (char *)write_set->linked_is_fresh + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1226
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.79": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->assert_requires_ctx",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1163
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.80": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_is_fresh",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.81": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.82": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.83": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_is_fresh",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 176ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.84": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 176l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.85": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_is_fresh->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_is_fresh))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.86": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_is_fresh->elems",
        "expression": "!IS_INVALID_POINTER(write_set->linked_is_fresh)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.87": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_is_fresh->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_is_fresh) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.88": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_is_fresh->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_is_fresh) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.89": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_is_fresh->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set->linked_is_fresh) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set->linked_is_fresh) + 32ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1163
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.90": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_is_fresh->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_is_fresh)) || (char *)write_set->linked_is_fresh + 32l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.91": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_is_fresh->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_is_fresh->elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.92": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_is_fresh->elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(write_set->linked_is_fresh->elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.93": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_is_fresh->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_is_fresh->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.94": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_is_fresh->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set->linked_is_fresh->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.95": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_is_fresh->elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set->linked_is_fresh->elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set->linked_is_fresh->elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.96": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_is_fresh->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(write_set->linked_is_fresh->elems)) || write_set->linked_is_fresh->elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1227
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.97": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1228
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.98": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_is_fresh",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1228
        }
      },
      "__CPROVER_contracts_is_fresh.pointer_dereference.99": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_is_fresh",
          "line": 1228
        }
      },
      "__CPROVER_contracts_link_allocated.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set_postconditions->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set_postconditions))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_allocated",
          "line": 1094
        }
      },
      "__CPROVER_contracts_link_allocated.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set_postconditions->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set_postconditions) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_allocated",
          "line": 1099
        }
      },
      "__CPROVER_contracts_link_allocated.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set_postconditions->linked_allocated",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set_postconditions) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set_postconditions) + 184ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_allocated",
          "line": 1099
        }
      },
      "__CPROVER_contracts_link_allocated.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set_postconditions->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set_postconditions)) || (char *)write_set_postconditions + 184l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_allocated",
          "line": 1099
        }
      },
      "__CPROVER_contracts_link_allocated.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set_postconditions->linked_allocated",
        "expression": "!IS_INVALID_POINTER(write_set_postconditions)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_allocated",
          "line": 1094
        }
      },
      "__CPROVER_contracts_link_allocated.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set_postconditions->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set_postconditions) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_allocated",
          "line": 1094
        }
      },
      "__CPROVER_contracts_link_allocated.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set_postconditions->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set_postconditions) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_allocated",
          "line": 1094
        }
      },
      "__CPROVER_contracts_link_allocated.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set_postconditions->linked_allocated",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set_postconditions) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set_postconditions) + 184ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_allocated",
          "line": 1094
        }
      },
      "__CPROVER_contracts_link_allocated.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set_postconditions->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set_postconditions)) || (char *)write_set_postconditions + 184l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_allocated",
          "line": 1094
        }
      },
      "__CPROVER_contracts_link_allocated.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set_postconditions->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set_postconditions))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_allocated",
          "line": 1099
        }
      },
      "__CPROVER_contracts_link_allocated.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set_postconditions->linked_allocated",
        "expression": "!IS_INVALID_POINTER(write_set_postconditions)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_allocated",
          "line": 1099
        }
      },
      "__CPROVER_contracts_link_allocated.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set_postconditions->linked_allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set_postconditions) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_allocated",
          "line": 1099
        }
      },
      "__CPROVER_contracts_link_deallocated.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set_postconditions->linked_deallocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set_postconditions))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_deallocated",
          "line": 1119
        }
      },
      "__CPROVER_contracts_link_deallocated.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set_postconditions->linked_deallocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set_postconditions) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_deallocated",
          "line": 1124
        }
      },
      "__CPROVER_contracts_link_deallocated.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set_postconditions->linked_deallocated",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set_postconditions) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set_postconditions) + 192ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_deallocated",
          "line": 1124
        }
      },
      "__CPROVER_contracts_link_deallocated.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set_postconditions->linked_deallocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set_postconditions)) || (char *)write_set_postconditions + 192l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_deallocated",
          "line": 1124
        }
      },
      "__CPROVER_contracts_link_deallocated.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set_postconditions->linked_deallocated",
        "expression": "!IS_INVALID_POINTER(write_set_postconditions)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_deallocated",
          "line": 1119
        }
      },
      "__CPROVER_contracts_link_deallocated.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set_postconditions->linked_deallocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set_postconditions) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_deallocated",
          "line": 1119
        }
      },
      "__CPROVER_contracts_link_deallocated.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set_postconditions->linked_deallocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set_postconditions) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_deallocated",
          "line": 1119
        }
      },
      "__CPROVER_contracts_link_deallocated.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set_postconditions->linked_deallocated",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set_postconditions) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set_postconditions) + 192ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_deallocated",
          "line": 1119
        }
      },
      "__CPROVER_contracts_link_deallocated.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set_postconditions->linked_deallocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set_postconditions)) || (char *)write_set_postconditions + 192l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_deallocated",
          "line": 1119
        }
      },
      "__CPROVER_contracts_link_deallocated.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set_postconditions->linked_deallocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set_postconditions))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_deallocated",
          "line": 1124
        }
      },
      "__CPROVER_contracts_link_deallocated.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set_postconditions->linked_deallocated",
        "expression": "!IS_INVALID_POINTER(write_set_postconditions)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_deallocated",
          "line": 1124
        }
      },
      "__CPROVER_contracts_link_deallocated.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set_postconditions->linked_deallocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set_postconditions) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_deallocated",
          "line": 1124
        }
      },
      "__CPROVER_contracts_link_is_fresh.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_is_fresh",
          "line": 1071
        }
      },
      "__CPROVER_contracts_link_is_fresh.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_is_fresh",
          "line": 1075
        }
      },
      "__CPROVER_contracts_link_is_fresh.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_is_fresh",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 176ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_is_fresh",
          "line": 1075
        }
      },
      "__CPROVER_contracts_link_is_fresh.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 176l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_is_fresh",
          "line": 1075
        }
      },
      "__CPROVER_contracts_link_is_fresh.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_is_fresh",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_is_fresh",
          "line": 1071
        }
      },
      "__CPROVER_contracts_link_is_fresh.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_is_fresh",
          "line": 1071
        }
      },
      "__CPROVER_contracts_link_is_fresh.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_is_fresh",
          "line": 1071
        }
      },
      "__CPROVER_contracts_link_is_fresh.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->linked_is_fresh",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 176ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_is_fresh",
          "line": 1071
        }
      },
      "__CPROVER_contracts_link_is_fresh.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 176l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_is_fresh",
          "line": 1071
        }
      },
      "__CPROVER_contracts_link_is_fresh.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_is_fresh",
          "line": 1075
        }
      },
      "__CPROVER_contracts_link_is_fresh.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->linked_is_fresh",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_is_fresh",
          "line": 1075
        }
      },
      "__CPROVER_contracts_link_is_fresh.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->linked_is_fresh",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_link_is_fresh",
          "line": 1075
        }
      },
      "__CPROVER_contracts_obeys_contract.assertion.1": {
        "class": "assertion",
        "description": "__CPROVER_obeys_contract is used only in requires or ensures clauses",
        "expression": "((signed int)(set != ((__CPROVER_contracts_write_set_ptr_t)NULL)) & ((signed int)((signed int)set->assume_requires_ctx == 1) | (signed int)((signed int)set->assert_requires_ctx == 1) | (signed int)((signed int)set->assume_ensures_ctx == 1) | (signed int)((signed int)set->assert_ensures_ctx == 1))) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1533
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->assume_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1535
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1535
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->assert_requires_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 201ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1535
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 201l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1535
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1536
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->assume_ensures_ctx",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1536
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1536
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1536
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->assume_ensures_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 202ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1536
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 202l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1536
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1536
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->assume_requires_ctx",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1535
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->assert_ensures_ctx",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1536
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1536
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1536
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->assert_ensures_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 203ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1536
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 203l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1536
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.25": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *function_pointer",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void (**)(void))NULL)) == __CPROVER_POINTER_OBJECT(function_pointer))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1545
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.26": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *function_pointer",
        "expression": "!IS_INVALID_POINTER(function_pointer)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1545
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.27": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *function_pointer",
        "expression": "!(__CPROVER_POINTER_OBJECT(function_pointer) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1545
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.28": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *function_pointer",
        "expression": "!(__CPROVER_POINTER_OBJECT(function_pointer) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1545
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.29": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *function_pointer",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(function_pointer) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(function_pointer) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1545
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->assume_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1535
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.30": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *function_pointer",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void (**)(void))NULL)) == __CPROVER_POINTER_OBJECT(function_pointer)) || function_pointer == ((void (**)(void))NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1545
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.31": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *function_pointer",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void (**)(void))NULL)) == __CPROVER_POINTER_OBJECT(function_pointer))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1551
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.32": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *function_pointer",
        "expression": "!IS_INVALID_POINTER(function_pointer)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1551
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.33": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *function_pointer",
        "expression": "!(__CPROVER_POINTER_OBJECT(function_pointer) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1551
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.34": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *function_pointer",
        "expression": "!(__CPROVER_POINTER_OBJECT(function_pointer) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1551
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.35": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *function_pointer",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(function_pointer) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(function_pointer) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1551
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.36": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *function_pointer",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void (**)(void))NULL)) == __CPROVER_POINTER_OBJECT(function_pointer)) || function_pointer == ((void (**)(void))NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1551
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->assume_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1535
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->assume_requires_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 200ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1535
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->assume_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 200l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1535
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1535
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->assert_requires_ctx",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1535
        }
      },
      "__CPROVER_contracts_obeys_contract.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obeys_contract",
          "line": 1535
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 32ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 32l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(set->elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set->elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set->elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->elems)) || set->elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->nof_elems",
        "expression": "set->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->nof_elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->nof_elems",
        "expression": "set->elems[(signed long int)object_id] != NULL ==> !IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->nof_elems",
        "expression": "set->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->nof_elems",
        "expression": "set->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->nof_elems",
        "expression": "set->elems[(signed long int)object_id] != NULL ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->nof_elems",
        "expression": "set->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.25": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->nof_elems",
        "expression": "!(set->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.26": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->nof_elems",
        "expression": "!(set->elems[(signed long int)object_id] != NULL) ==> !IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.27": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->nof_elems",
        "expression": "!(set->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.28": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->nof_elems",
        "expression": "!(set->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.29": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->nof_elems",
        "expression": "!(set->elems[(signed long int)object_id] != NULL) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.30": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->nof_elems",
        "expression": "!(set->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.31": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 315
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.32": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 315
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.33": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 315
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.34": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 315
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.35": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 32ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 315
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.36": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 32l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 315
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.37": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 315
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.38": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(set->elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 315
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.39": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 315
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.40": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 315
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.41": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set->elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set->elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 315
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.42": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->elems)) || set->elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 315
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.43": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 316
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.44": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->is_empty",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 316
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.45": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 316
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.46": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 316
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.47": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->is_empty",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 24ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 316
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.48": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 24l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 316
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->nof_elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_add.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_add",
          "line": 314
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 332
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->watermark",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 332
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->watermark",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 332
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->watermark",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 8l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 332
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 32ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 32l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->watermark",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->nof_elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 332
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->watermark",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->watermark",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->watermark",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->watermark",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->watermark",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 8l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.25": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems[(signed long int)set->watermark]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.26": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems[(signed long int)set->watermark]",
        "expression": "!IS_INVALID_POINTER(set->elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.27": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems[(signed long int)set->watermark]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.28": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems[(signed long int)set->watermark]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.29": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems[(signed long int)set->watermark]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set->elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set->elems) + (unsigned long int)(signed long int)set->watermark * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 332
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.30": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems[(signed long int)set->watermark]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->elems)) || set->elems + (signed long int)set->watermark == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 333
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.31": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->watermark",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 334
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.32": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->watermark",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 334
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.33": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->watermark",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 334
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.34": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->watermark",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 334
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.35": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->watermark",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 334
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.36": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->watermark",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 8l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 334
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.37": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 335
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.38": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->is_empty",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 335
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.39": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 335
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 332
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.40": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 335
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.41": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->is_empty",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 24ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 335
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.42": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 24l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 335
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->nof_elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 332
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 332
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->watermark",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 332
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->watermark",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 332
        }
      },
      "__CPROVER_contracts_obj_set_append.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->watermark",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_append",
          "line": 332
        }
      },
      "__CPROVER_contracts_obj_set_contains.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains",
          "line": 372
        }
      },
      "__CPROVER_contracts_obj_set_contains.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains",
          "line": 372
        }
      },
      "__CPROVER_contracts_obj_set_contains.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set->elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set->elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains",
          "line": 372
        }
      },
      "__CPROVER_contracts_obj_set_contains.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->elems)) || set->elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains",
          "line": 372
        }
      },
      "__CPROVER_contracts_obj_set_contains.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains",
          "line": 372
        }
      },
      "__CPROVER_contracts_obj_set_contains.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains",
          "line": 372
        }
      },
      "__CPROVER_contracts_obj_set_contains.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains",
          "line": 372
        }
      },
      "__CPROVER_contracts_obj_set_contains.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 32ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains",
          "line": 372
        }
      },
      "__CPROVER_contracts_obj_set_contains.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 32l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains",
          "line": 372
        }
      },
      "__CPROVER_contracts_obj_set_contains.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains",
          "line": 372
        }
      },
      "__CPROVER_contracts_obj_set_contains.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(set->elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains",
          "line": 372
        }
      },
      "__CPROVER_contracts_obj_set_contains.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains",
          "line": 372
        }
      },
      "__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains_exact",
          "line": 389
        }
      },
      "__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains_exact",
          "line": 389
        }
      },
      "__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set->elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set->elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains_exact",
          "line": 389
        }
      },
      "__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->elems)) || set->elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains_exact",
          "line": 389
        }
      },
      "__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains_exact",
          "line": 389
        }
      },
      "__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains_exact",
          "line": 389
        }
      },
      "__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains_exact",
          "line": 389
        }
      },
      "__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 32ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains_exact",
          "line": 389
        }
      },
      "__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 32l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains_exact",
          "line": 389
        }
      },
      "__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains_exact",
          "line": 389
        }
      },
      "__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(set->elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains_exact",
          "line": 389
        }
      },
      "__CPROVER_contracts_obj_set_contains_exact.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_contains_exact",
          "line": 389
        }
      },
      "__CPROVER_contracts_obj_set_create_append.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *set",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_append",
          "line": 278
        }
      },
      "__CPROVER_contracts_obj_set_create_append.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *set",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_append",
          "line": 278
        }
      },
      "__CPROVER_contracts_obj_set_create_append.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *set",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_append",
          "line": 278
        }
      },
      "__CPROVER_contracts_obj_set_create_append.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *set",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_append",
          "line": 278
        }
      },
      "__CPROVER_contracts_obj_set_create_append.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *set",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(set) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_append",
          "line": 278
        }
      },
      "__CPROVER_contracts_obj_set_create_append.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *set",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || set == ((__CPROVER_contracts_obj_set_ptr_t)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_append",
          "line": 278
        }
      },
      "__CPROVER_contracts_obj_set_create_indexed_by_object_id.bit_count.1": {
        "class": "bit count",
        "description": "count leading zeros is undefined for value zero in __builtin_clz(__CPROVER_max_malloc_size)",
        "expression": "!(__CPROVER_max_malloc_size == 0ul)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_indexed_by_object_id",
          "line": 251
        }
      },
      "__CPROVER_contracts_obj_set_create_indexed_by_object_id.bit_count.2": {
        "class": "bit count",
        "description": "count leading zeros is undefined for value zero in __builtin_clz(__CPROVER_max_malloc_size)",
        "expression": "!(__CPROVER_max_malloc_size == 0ul)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_indexed_by_object_id",
          "line": 251
        }
      },
      "__CPROVER_contracts_obj_set_create_indexed_by_object_id.bit_count.3": {
        "class": "bit count",
        "description": "count leading zeros is undefined for value zero in __builtin_clz(__CPROVER_max_malloc_size)",
        "expression": "!(__CPROVER_max_malloc_size == 0ul)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_indexed_by_object_id",
          "line": 251
        }
      },
      "__CPROVER_contracts_obj_set_create_indexed_by_object_id.bit_count.4": {
        "class": "bit count",
        "description": "count leading zeros is undefined for value zero in __builtin_clz(__CPROVER_max_malloc_size)",
        "expression": "!(__CPROVER_max_malloc_size == 0ul)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_indexed_by_object_id",
          "line": 251
        }
      },
      "__CPROVER_contracts_obj_set_create_indexed_by_object_id.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *set",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_indexed_by_object_id",
          "line": 254
        }
      },
      "__CPROVER_contracts_obj_set_create_indexed_by_object_id.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *set",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_indexed_by_object_id",
          "line": 254
        }
      },
      "__CPROVER_contracts_obj_set_create_indexed_by_object_id.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *set",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_indexed_by_object_id",
          "line": 254
        }
      },
      "__CPROVER_contracts_obj_set_create_indexed_by_object_id.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *set",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_indexed_by_object_id",
          "line": 254
        }
      },
      "__CPROVER_contracts_obj_set_create_indexed_by_object_id.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *set",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(set) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_indexed_by_object_id",
          "line": 254
        }
      },
      "__CPROVER_contracts_obj_set_create_indexed_by_object_id.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *set",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || set == ((__CPROVER_contracts_obj_set_ptr_t)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_indexed_by_object_id",
          "line": 254
        }
      },
      "__CPROVER_contracts_obj_set_create_indexed_by_object_id.undefined-shift.1": {
        "class": "undefined-shift",
        "description": "shift distance is negative in 1ul << object_bits",
        "expression": "object_bits >= 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_indexed_by_object_id",
          "line": 252
        }
      },
      "__CPROVER_contracts_obj_set_create_indexed_by_object_id.undefined-shift.2": {
        "class": "undefined-shift",
        "description": "shift distance too large in 1ul << object_bits",
        "expression": "!(object_bits >= 64)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_create_indexed_by_object_id",
          "line": 252
        }
      },
      "__CPROVER_contracts_obj_set_release.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_release",
          "line": 297
        }
      },
      "__CPROVER_contracts_obj_set_release.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_release",
          "line": 297
        }
      },
      "__CPROVER_contracts_obj_set_release.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_release",
          "line": 297
        }
      },
      "__CPROVER_contracts_obj_set_release.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_release",
          "line": 297
        }
      },
      "__CPROVER_contracts_obj_set_release.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 32ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_release",
          "line": 297
        }
      },
      "__CPROVER_contracts_obj_set_release.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 32l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_release",
          "line": 297
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 32ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 32l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(set->elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set->elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set->elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->elems)) || set->elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->nof_elems",
        "expression": "set->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->nof_elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->nof_elems",
        "expression": "set->elems[(signed long int)object_id] != NULL ==> !IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->nof_elems",
        "expression": "set->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->nof_elems",
        "expression": "set->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->nof_elems",
        "expression": "set->elems[(signed long int)object_id] != NULL ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->nof_elems",
        "expression": "set->elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.25": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->nof_elems",
        "expression": "!(set->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.26": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->nof_elems",
        "expression": "!(set->elems[(signed long int)object_id] != NULL) ==> !IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.27": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->nof_elems",
        "expression": "!(set->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.28": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->nof_elems",
        "expression": "!(set->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.29": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->nof_elems",
        "expression": "!(set->elems[(signed long int)object_id] != NULL) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.30": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->nof_elems",
        "expression": "!(set->elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.31": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 353
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.32": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->is_empty",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 353
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.33": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 353
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.34": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 353
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.35": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->is_empty",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 24ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 353
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.36": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->is_empty",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 24l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 353
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.37": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 353
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.38": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->nof_elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 353
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.39": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 353
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.40": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 353
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.41": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->nof_elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 353
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.42": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 353
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.43": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 354
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.44": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 354
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.45": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 354
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.46": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 354
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.47": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 32ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 354
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.48": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 32l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 354
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.49": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 354
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->nof_elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 16ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.50": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(set->elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 354
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.51": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 354
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.52": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 354
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.53": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set->elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set->elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 354
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.54": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->elems)) || set->elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 354
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->nof_elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->elems",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_obj_set_remove.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_obj_set_remove",
          "line": 352
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.assertion.1": {
        "class": "assertion",
        "description": "__CPROVER_pointer_in_range_dfcc is used only in requires or ensures clauses",
        "expression": "((signed int)(write_set != ((__CPROVER_contracts_write_set_ptr_t)NULL)) & ((signed int)((signed int)write_set->assume_requires_ctx == 1) | (signed int)((signed int)write_set->assert_requires_ctx == 1) | (signed int)((signed int)write_set->assume_ensures_ctx == 1) | (signed int)((signed int)write_set->assert_ensures_ctx == 1))) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1339
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.assertion.2": {
        "class": "assertion",
        "description": "lb pointer must be valid",
        "expression": "R_OK(lb, (unsigned long int)0)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1346
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.assertion.3": {
        "class": "assertion",
        "description": "ub pointer must be valid",
        "expression": "R_OK(ub, (unsigned long int)0)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1347
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.assertion.4": {
        "class": "assertion",
        "description": "lb and ub pointers must have the same object",
        "expression": "__CPROVER_POINTER_OBJECT(lb) == __CPROVER_POINTER_OBJECT(ub)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1348
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.assertion.5": {
        "class": "assertion",
        "description": "lb and ub pointers must be ordered",
        "expression": "lb_offset <= ub_offset",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1353
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->assume_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1340
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1341
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->assert_requires_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 201ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1341
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 201l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1341
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1342
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->assume_ensures_ctx",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1342
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1342
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1342
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->assume_ensures_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 202ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1342
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 202l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1342
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1343
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->assume_requires_ctx",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1340
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->assert_ensures_ctx",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1343
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1343
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1343
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->assert_ensures_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 203ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1343
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 203l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1343
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.25": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *ptr",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(ptr))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1366
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.26": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *ptr",
        "expression": "!IS_INVALID_POINTER(ptr)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1366
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.27": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *ptr",
        "expression": "!(__CPROVER_POINTER_OBJECT(ptr) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1366
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.28": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *ptr",
        "expression": "!(__CPROVER_POINTER_OBJECT(ptr) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1366
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.29": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *ptr",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(ptr) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(ptr) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1366
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->assume_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1340
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.30": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *ptr",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(ptr)) || ptr == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1366
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.31": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *ptr",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(ptr))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1371
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.32": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *ptr",
        "expression": "!IS_INVALID_POINTER(ptr)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1371
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.33": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *ptr",
        "expression": "!(__CPROVER_POINTER_OBJECT(ptr) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1371
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.34": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *ptr",
        "expression": "!(__CPROVER_POINTER_OBJECT(ptr) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1371
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.35": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *ptr",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(ptr) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(ptr) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1371
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.36": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *ptr",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(ptr)) || ptr == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1371
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.37": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *ptr",
        "expression": "TRUE && TRUE ==> !(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(ptr))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1372
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.38": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *ptr",
        "expression": "TRUE && TRUE ==> !IS_INVALID_POINTER(ptr)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1372
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.39": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *ptr",
        "expression": "TRUE && TRUE ==> !(__CPROVER_POINTER_OBJECT(ptr) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1372
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in write_set->assume_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1340
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.40": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *ptr",
        "expression": "TRUE && TRUE ==> !(__CPROVER_POINTER_OBJECT(ptr) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1372
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.41": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *ptr",
        "expression": "TRUE && TRUE ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(ptr) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(ptr) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1372
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.42": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *ptr",
        "expression": "TRUE && TRUE ==> !(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(ptr)) || ptr == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1372
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in write_set->assume_requires_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(write_set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(write_set) + 200ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1340
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in write_set->assume_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set)) || (char *)write_set + 200l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1340
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in write_set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(write_set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1341
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in write_set->assert_requires_ctx",
        "expression": "!IS_INVALID_POINTER(write_set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1341
        }
      },
      "__CPROVER_contracts_pointer_in_range_dfcc.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in write_set->assert_requires_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(write_set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_pointer_in_range_dfcc",
          "line": 1341
        }
      },
      "__CPROVER_contracts_was_freed.assertion.1": {
        "class": "assertion",
        "description": "__CPROVER_was_freed is used only in ensures clauses",
        "expression": "((signed int)(set != ((__CPROVER_contracts_write_set_ptr_t)NULL)) & ((signed int)((signed int)set->assume_ensures_ctx == 1) | (signed int)((signed int)set->assert_ensures_ctx == 1))) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1471
        }
      },
      "__CPROVER_contracts_was_freed.assertion.2": {
        "class": "assertion",
        "description": "linked_deallocated is not null",
        "expression": "set->linked_deallocated != ((__CPROVER_contracts_obj_set_ptr_t)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1475
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1473
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1473
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->assert_ensures_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 203ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1473
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 203l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1473
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->linked_deallocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1476
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->linked_deallocated",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1476
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->linked_deallocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1476
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->linked_deallocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1476
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->linked_deallocated",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 192ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1476
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->linked_deallocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 192l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1476
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->linked_deallocated->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set->linked_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1483
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->assume_ensures_ctx",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1473
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->linked_deallocated->elems",
        "expression": "!IS_INVALID_POINTER(set->linked_deallocated)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1483
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->linked_deallocated->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->linked_deallocated) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1483
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->linked_deallocated->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->linked_deallocated) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1483
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->linked_deallocated->elems",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set->linked_deallocated) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set->linked_deallocated) + 32ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1483
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->linked_deallocated->elems",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_obj_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set->linked_deallocated)) || (char *)set->linked_deallocated + 32l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1483
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.25": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->linked_deallocated->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->linked_deallocated->elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1483
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.26": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->linked_deallocated->elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(set->linked_deallocated->elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1483
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.27": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->linked_deallocated->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->linked_deallocated->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1483
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.28": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->linked_deallocated->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->linked_deallocated->elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1483
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.29": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->linked_deallocated->elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set->linked_deallocated->elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set->linked_deallocated->elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1483
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1473
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.30": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->linked_deallocated->elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->linked_deallocated->elems)) || set->linked_deallocated->elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1483
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1473
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->assume_ensures_ctx",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 202ul) + 1",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1473
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->assume_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 202l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1473
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1473
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->assert_ensures_ctx",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1473
        }
      },
      "__CPROVER_contracts_was_freed.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->assert_ensures_ctx",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_was_freed",
          "line": 1473
        }
      },
      "__CPROVER_contracts_write_set_add_allocated.assertion.1": {
        "class": "assertion",
        "description": "dynamic allocation is allowed",
        "expression": "set->allow_allocate != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_allocated",
          "line": 604
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 578
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->contract_frees.elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 578
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set->contract_frees.elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set->contract_frees.elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 578
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->contract_frees.elems)) || set->contract_frees.elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 578
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_frees",
        "expression": "set->contract_frees.elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 579
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_frees",
        "expression": "set->contract_frees.elems[(signed long int)object_id] != NULL ==> !IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 579
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_frees",
        "expression": "set->contract_frees.elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 579
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_frees",
        "expression": "set->contract_frees.elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 579
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_frees",
        "expression": "set->contract_frees.elems[(signed long int)object_id] != NULL ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 16ul) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 579
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_frees",
        "expression": "set->contract_frees.elems[(signed long int)object_id] != NULL ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 579
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_frees",
        "expression": "!(set->contract_frees.elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 580
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_frees",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 578
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_frees",
        "expression": "!(set->contract_frees.elems[(signed long int)object_id] != NULL) ==> !IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 580
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_frees",
        "expression": "!(set->contract_frees.elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 580
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_frees",
        "expression": "!(set->contract_frees.elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 580
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_frees",
        "expression": "!(set->contract_frees.elems[(signed long int)object_id] != NULL) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 16ul) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 580
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_frees",
        "expression": "!(set->contract_frees.elems[(signed long int)object_id] != NULL) ==> !(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 580
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.25": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 581
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.26": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_frees",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 581
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.27": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 581
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.28": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 581
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.29": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_frees",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 16ul) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 581
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 578
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.30": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 581
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.31": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->contract_frees.elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 581
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.32": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(set->contract_frees.elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 581
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.33": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->contract_frees.elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 581
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.34": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->contract_frees.elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 581
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.35": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set->contract_frees.elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set->contract_frees.elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 581
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.36": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->contract_frees.elems)) || set->contract_frees.elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 581
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.37": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 582
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.38": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_frees",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 582
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.39": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 582
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 578
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.40": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 582
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.41": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_frees",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 16ul) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 582
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.42": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 582
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.43": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 589
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.44": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_frees_append",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 589
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.45": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 589
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.46": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 589
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.47": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_frees_append",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 56ul) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 589
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.48": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 56l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 589
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.49": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 590
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_frees",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 16ul) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 578
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.50": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_frees_append",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 590
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.51": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 590
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.52": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 590
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.53": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_frees_append",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 56ul) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 590
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.54": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 56l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 590
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.55": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_frees_append.elems[(signed long int)set->contract_frees_append.watermark]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->contract_frees_append.elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 590
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.56": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_frees_append.elems[(signed long int)set->contract_frees_append.watermark]",
        "expression": "!IS_INVALID_POINTER(set->contract_frees_append.elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 590
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.57": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_frees_append.elems[(signed long int)set->contract_frees_append.watermark]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->contract_frees_append.elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 590
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.58": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_frees_append.elems[(signed long int)set->contract_frees_append.watermark]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->contract_frees_append.elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 590
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.59": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_frees_append.elems[(signed long int)set->contract_frees_append.watermark]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set->contract_frees_append.elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set->contract_frees_append.elems) + (unsigned long int)(signed long int)set->contract_frees_append.watermark * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 590
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 578
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.60": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_frees_append.elems[(signed long int)set->contract_frees_append.watermark]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->contract_frees_append.elems)) || set->contract_frees_append.elems + (signed long int)set->contract_frees_append.watermark == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 590
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.61": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 591
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.62": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_frees_append",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 591
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.63": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 591
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.64": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 591
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.65": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_frees_append",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 56ul) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 591
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.66": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 56l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 591
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.67": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 592
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.68": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_frees_append",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 592
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.69": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 592
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(set->contract_frees.elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 578
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.70": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 592
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.71": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_frees_append",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 56ul) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 592
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.72": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 56l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 592
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(set->contract_frees.elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 578
        }
      },
      "__CPROVER_contracts_write_set_add_freeable.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_frees.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->contract_frees.elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_add_freeable",
          "line": 578
        }
      },
      "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty",
          "line": 729
        }
      },
      "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->deallocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty",
          "line": 729
        }
      },
      "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->deallocated",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 136ul) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty",
          "line": 729
        }
      },
      "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->deallocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 136l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty",
          "line": 729
        }
      },
      "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->allocated",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty",
          "line": 729
        }
      },
      "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty",
          "line": 729
        }
      },
      "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty",
          "line": 729
        }
      },
      "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->allocated",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 96ul) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty",
          "line": 729
        }
      },
      "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 96l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty",
          "line": 729
        }
      },
      "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->deallocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty",
          "line": 729
        }
      },
      "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->deallocated",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty",
          "line": 729
        }
      },
      "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->deallocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_allocated_deallocated_is_empty",
          "line": 729
        }
      },
      "__CPROVER_contracts_write_set_check_assignment.assertion.1": {
        "class": "assertion",
        "description": "ptr NULL or writable up to size",
        "expression": "((signed int)(ptr == NULL) | (signed int)RW_OK(ptr, size)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_assignment",
          "line": 775
        }
      },
      "__CPROVER_contracts_write_set_check_assignment.assertion.10": {
        "class": "assertion",
        "description": "ptr NULL or writable up to size",
        "expression": "((signed int)(ptr == NULL) | (signed int)RW_OK(ptr, size)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_assignment",
          "line": 775
        }
      },
      "__CPROVER_contracts_write_set_check_assignment.assertion.11": {
        "class": "assertion",
        "description": "CAR size is less than __CPROVER_max_malloc_size",
        "expression": "size <= __CPROVER_max_malloc_size",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_assignment",
          "line": 792
        }
      },
      "__CPROVER_contracts_write_set_check_assignment.assertion.12": {
        "class": "assertion",
        "description": "no offset bits overflow on CAR upper bound computation",
        "expression": "((signed int)!(offset > (unsigned long int)0) | (signed int)(offset + size <= __CPROVER_max_malloc_size)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_assignment",
          "line": 798
        }
      },
      "__CPROVER_contracts_write_set_check_assignment.assertion.2": {
        "class": "assertion",
        "description": "CAR size is less than __CPROVER_max_malloc_size",
        "expression": "size <= __CPROVER_max_malloc_size",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_assignment",
          "line": 792
        }
      },
      "__CPROVER_contracts_write_set_check_assignment.assertion.3": {
        "class": "assertion",
        "description": "no offset bits overflow on CAR upper bound computation",
        "expression": "((signed int)!(offset > (unsigned long int)0) | (signed int)(offset + size <= __CPROVER_max_malloc_size)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_assignment",
          "line": 798
        }
      },
      "__CPROVER_contracts_write_set_check_assignment.assertion.4": {
        "class": "assertion",
        "description": "ptr NULL or writable up to size",
        "expression": "((signed int)(ptr == NULL) | (signed int)RW_OK(ptr, size)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_assignment",
          "line": 775
        }
      },
      "__CPROVER_contracts_write_set_check_assignment.assertion.5": {
        "class": "assertion",
        "description": "CAR size is less than __CPROVER_max_malloc_size",
        "expression": "size <= __CPROVER_max_malloc_size",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_assignment",
          "line": 792
        }
      },
      "__CPROVER_contracts_write_set_check_assignment.assertion.6": {
        "class": "assertion",
        "description": "no offset bits overflow on CAR upper bound computation",
        "expression": "((signed int)!(offset > (unsigned long int)0) | (signed int)(offset + size <= __CPROVER_max_malloc_size)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_assignment",
          "line": 798
        }
      },
      "__CPROVER_contracts_write_set_check_assignment.assertion.7": {
        "class": "assertion",
        "description": "ptr NULL or writable up to size",
        "expression": "((signed int)(ptr == NULL) | (signed int)RW_OK(ptr, size)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_assignment",
          "line": 775
        }
      },
      "__CPROVER_contracts_write_set_check_assignment.assertion.8": {
        "class": "assertion",
        "description": "CAR size is less than __CPROVER_max_malloc_size",
        "expression": "size <= __CPROVER_max_malloc_size",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_assignment",
          "line": 792
        }
      },
      "__CPROVER_contracts_write_set_check_assignment.assertion.9": {
        "class": "assertion",
        "description": "no offset bits overflow on CAR upper bound computation",
        "expression": "((signed int)!(offset > (unsigned long int)0) | (signed int)(offset + size <= __CPROVER_max_malloc_size)) != 0",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_assignment",
          "line": 798
        }
      },
      "__CPROVER_contracts_write_set_check_assignment.unwind.1": {
        "class": "unwind",
        "description": "unwinding assertion loop 0",
        "expression": "!(idx != (unsigned long int)0)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_assignment",
          "line": 807
        }
      },
      "__CPROVER_contracts_write_set_check_assignment.unwind.2": {
        "class": "unwind",
        "description": "unwinding assertion loop 0",
        "expression": "!(idx != (unsigned long int)0)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_assignment",
          "line": 807
        }
      },
      "__CPROVER_contracts_write_set_check_assignment.unwind.3": {
        "class": "unwind",
        "description": "unwinding assertion loop 0",
        "expression": "!(idx != (unsigned long int)0)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_assignment",
          "line": 807
        }
      },
      "__CPROVER_contracts_write_set_check_assignment.unwind.4": {
        "class": "unwind",
        "description": "unwinding assertion loop 0",
        "expression": "!(idx != (unsigned long int)0)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_assignment",
          "line": 807
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in candidate->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(candidate))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 992
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *current",
        "expression": "!(__CPROVER_POINTER_OBJECT(current) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 998
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *current",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(current) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(current) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 998
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *current",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(current)) || current == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 998
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.13": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in reference->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(reference))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1001
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.14": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in reference->contract_frees",
        "expression": "!IS_INVALID_POINTER(reference)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1001
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.15": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in reference->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(reference) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1001
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.16": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in reference->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(reference) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1001
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.17": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in reference->contract_frees",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(reference) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(reference) + 16ul) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1001
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.18": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in reference->contract_frees",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(reference)) || (char *)reference + 16l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1001
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.19": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in reference->contract_frees.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(reference->contract_frees.elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1001
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in candidate->contract_frees_append",
        "expression": "!IS_INVALID_POINTER(candidate)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 992
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.20": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in reference->contract_frees.elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(reference->contract_frees.elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1001
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.21": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in reference->contract_frees.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(reference->contract_frees.elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1001
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.22": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in reference->contract_frees.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(reference->contract_frees.elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1001
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.23": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in reference->contract_frees.elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(reference->contract_frees.elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(reference->contract_frees.elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1001
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.24": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in reference->contract_frees.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(reference->contract_frees.elems)) || reference->contract_frees.elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1001
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.25": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in reference->allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(reference))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1002
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.26": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in reference->allocated",
        "expression": "!IS_INVALID_POINTER(reference)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1002
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.27": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in reference->allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(reference) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1002
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.28": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in reference->allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(reference) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1002
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.29": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in reference->allocated",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(reference) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(reference) + 96ul) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1002
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in candidate->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(candidate) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 992
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.30": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in reference->allocated",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(reference)) || (char *)reference + 96l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1002
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.31": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in reference->allocated.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(reference->allocated.elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1002
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.32": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in reference->allocated.elems[(signed long int)object_id]",
        "expression": "!IS_INVALID_POINTER(reference->allocated.elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1002
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.33": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in reference->allocated.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(reference->allocated.elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1002
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.34": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in reference->allocated.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(reference->allocated.elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1002
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.35": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in reference->allocated.elems[(signed long int)object_id]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(reference->allocated.elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(reference->allocated.elems) + (unsigned long int)(signed long int)object_id * 8ul) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1002
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.36": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in reference->allocated.elems[(signed long int)object_id]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(reference->allocated.elems)) || reference->allocated.elems + (signed long int)object_id == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 1002
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in candidate->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(candidate) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 992
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in candidate->contract_frees_append",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(candidate) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(candidate) + 56ul) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 992
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in candidate->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(candidate)) || (char *)candidate + 56l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 992
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *current",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(current))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 998
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *current",
        "expression": "!IS_INVALID_POINTER(current)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 998
        }
      },
      "__CPROVER_contracts_write_set_check_frees_clause_inclusion.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *current",
        "expression": "!(__CPROVER_POINTER_OBJECT(current) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_check_frees_clause_inclusion",
          "line": 998
        }
      },
      "__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_deallocate_freeable",
          "line": 1028
        }
      },
      "__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *current",
        "expression": "!(__CPROVER_POINTER_OBJECT(current) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_deallocate_freeable",
          "line": 1033
        }
      },
      "__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *current",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(current) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(current) + 8",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_deallocate_freeable",
          "line": 1033
        }
      },
      "__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *current",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(current)) || current == ((void **)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_deallocate_freeable",
          "line": 1033
        }
      },
      "__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_frees_append",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_deallocate_freeable",
          "line": 1028
        }
      },
      "__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_deallocate_freeable",
          "line": 1028
        }
      },
      "__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_deallocate_freeable",
          "line": 1028
        }
      },
      "__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_frees_append",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set) + 56ul) + 40",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_deallocate_freeable",
          "line": 1028
        }
      },
      "__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_frees_append",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || (char *)set + 56l == ((char *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_deallocate_freeable",
          "line": 1028
        }
      },
      "__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *current",
        "expression": "!(__CPROVER_POINTER_OBJECT(((void **)NULL)) == __CPROVER_POINTER_OBJECT(current))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_deallocate_freeable",
          "line": 1033
        }
      },
      "__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *current",
        "expression": "!IS_INVALID_POINTER(current)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_deallocate_freeable",
          "line": 1033
        }
      },
      "__CPROVER_contracts_write_set_deallocate_freeable.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *current",
        "expression": "!(__CPROVER_POINTER_OBJECT(current) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_deallocate_freeable",
          "line": 1033
        }
      },
      "__CPROVER_contracts_write_set_havoc_object_whole.assertion.1": {
        "class": "assertion",
        "description": "no OOB access",
        "expression": "idx < set->contract_assigns.max_elems",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_havoc_object_whole",
          "line": 1403
        }
      },
      "__CPROVER_contracts_write_set_havoc_slice.assertion.1": {
        "class": "assertion",
        "description": "assertion havoc_slice W_OK(car.lb, car.size)",
        "expression": "W_OK(car.lb, car.size)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_havoc_slice",
          "line": 1421
        }
      },
      "__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_assigns",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_havoc_slice",
          "line": 1419
        }
      },
      "__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_assigns.elems[(signed long int)idx]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->contract_assigns.elems) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_havoc_slice",
          "line": 1419
        }
      },
      "__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_assigns.elems[(signed long int)idx]",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set->contract_assigns.elems) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(set->contract_assigns.elems) + (unsigned long int)(signed long int)idx * 32ul) + 32",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_havoc_slice",
          "line": 1419
        }
      },
      "__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_assigns.elems[(signed long int)idx]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_t *)NULL)) == __CPROVER_POINTER_OBJECT(set->contract_assigns.elems)) || set->contract_assigns.elems + (signed long int)idx == ((__CPROVER_contracts_car_t *)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_havoc_slice",
          "line": 1419
        }
      },
      "__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_assigns",
        "expression": "!IS_INVALID_POINTER(set)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_havoc_slice",
          "line": 1419
        }
      },
      "__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_assigns",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_havoc_slice",
          "line": 1419
        }
      },
      "__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in set->contract_assigns",
        "expression": "!(__CPROVER_POINTER_OBJECT(set) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_havoc_slice",
          "line": 1419
        }
      },
      "__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in set->contract_assigns",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(set) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(set) + 16",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_havoc_slice",
          "line": 1419
        }
      },
      "__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in set->contract_assigns",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_write_set_ptr_t)NULL)) == __CPROVER_POINTER_OBJECT(set)) || set == ((__CPROVER_contracts_write_set_ptr_t)NULL)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_havoc_slice",
          "line": 1419
        }
      },
      "__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in set->contract_assigns.elems[(signed long int)idx]",
        "expression": "!(__CPROVER_POINTER_OBJECT(((__CPROVER_contracts_car_t *)NULL)) == __CPROVER_POINTER_OBJECT(set->contract_assigns.elems))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_havoc_slice",
          "line": 1419
        }
      },
      "__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in set->contract_assigns.elems[(signed long int)idx]",
        "expression": "!IS_INVALID_POINTER(set->contract_assigns.elems)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_havoc_slice",
          "line": 1419
        }
      },
      "__CPROVER_contracts_write_set_havoc_slice.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in set->contract_assigns.elems[(signed long int)idx]",
        "expression": "!(__CPROVER_POINTER_OBJECT(set->contract_assigns.elems) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_havoc_slice",
          "line": 1419
        }
      },
      "__CPROVER_contracts_write_set_record_deallocated.unwind.1": {
        "class": "unwind",
        "description": "unwinding assertion loop 0",
        "expression": "!(idx != (unsigned long int)0)",
        "location": {
          "file": "<builtin-library-__CPROVER_contracts_library>",
          "function": "__CPROVER_contracts_write_set_record_deallocated",
          "line": 710
        }
      },
      "free.assigns.1": {
        "class": "assigns",
        "description": "Check that __CPROVER_memory_leak is assignable",
        "expression": "TRUE",
        "location": {
          "file": "<builtin-library-free>",
          "function": "free",
          "line": 47
        }
      },
      "free.frees.1": {
        "class": "frees",
        "description": "Check that ptr is freeable",
        "expression": "__check_deallocate",
        "location": {
          "file": "<builtin-library-free>",
          "function": "free",
          "line": 43
        }
      },
      "harness.assigns.1": {
        "class": "assigns",
        "description": "Check that return_value_malloc is assignable",
        "expression": "TRUE",
        "location": {
          "file": "CBMC/proofs/SymCryptMd2/SymCryptMd2_harness.c",
          "function": "harness",
          "line": 34
        }
      },
      "harness.assigns.2": {
        "class": "assigns",
        "description": "Check that pbData is assignable",
        "expression": "TRUE",
        "location": {
          "file": "CBMC/proofs/SymCryptMd2/SymCryptMd2_harness.c",
          "function": "harness",
          "line": 34
        }
      },
      "harness.precondition_instance.1": {
        "class": "precondition_instance",
        "description": "free argument must be NULL or valid pointer",
        "expression": "(void *)pbData == NULL || R_OK((void *)pbData, (unsigned long int)0)",
        "location": {
          "file": "CBMC/proofs/SymCryptMd2/SymCryptMd2_harness.c",
          "function": "harness",
          "line": 40
        }
      },
      "harness.precondition_instance.2": {
        "class": "precondition_instance",
        "description": "free argument must be dynamic object",
        "expression": "(void *)pbData == NULL || IS_DYNAMIC_OBJECT((void *)pbData)",
        "location": {
          "file": "CBMC/proofs/SymCryptMd2/SymCryptMd2_harness.c",
          "function": "harness",
          "line": 40
        }
      },
      "harness.precondition_instance.3": {
        "class": "precondition_instance",
        "description": "free argument has offset zero",
        "expression": "(void *)pbData == NULL || __CPROVER_POINTER_OFFSET((void *)pbData) == (unsigned long int)0",
        "location": {
          "file": "CBMC/proofs/SymCryptMd2/SymCryptMd2_harness.c",
          "function": "harness",
          "line": 40
        }
      },
      "harness.precondition_instance.4": {
        "class": "precondition_instance",
        "description": "double free",
        "expression": "(void *)pbData == NULL || __CPROVER_deallocated != (void *)pbData",
        "location": {
          "file": "CBMC/proofs/SymCryptMd2/SymCryptMd2_harness.c",
          "function": "harness",
          "line": 40
        }
      },
      "harness.precondition_instance.5": {
        "class": "precondition_instance",
        "description": "free called for new[] object",
        "expression": "(void *)pbData == NULL || __CPROVER_new_object != (void *)pbData || !__CPROVER_malloc_is_new_array",
        "location": {
          "file": "CBMC/proofs/SymCryptMd2/SymCryptMd2_harness.c",
          "function": "harness",
          "line": 40
        }
      },
      "harness.precondition_instance.6": {
        "class": "precondition_instance",
        "description": "free called for stack-allocated object",
        "expression": "(void *)pbData == NULL || __CPROVER_alloca_object != (void *)pbData",
        "location": {
          "file": "CBMC/proofs/SymCryptMd2/SymCryptMd2_harness.c",
          "function": "harness",
          "line": 40
        }
      },
      "malloc.assertion.1": {
        "class": "assertion",
        "description": "max allocation size exceeded",
        "expression": "malloc_size <= __CPROVER_max_malloc_size",
        "location": {
          "file": "<builtin-library-malloc>",
          "function": "malloc",
          "line": 31
        }
      },
      "malloc.assertion.2": {
        "class": "assertion",
        "description": "max allocation may fail",
        "expression": "!(1 != 0) || !should_malloc_fail",
        "location": {
          "file": "<builtin-library-malloc>",
          "function": "malloc",
          "line": 36
        }
      },
      "malloc.assigns.1": {
        "class": "assigns",
        "description": "Check that return_value___VERIFIER_nondet___CPROVER_bool is assignable",
        "expression": "TRUE",
        "location": {
          "file": "<builtin-library-malloc>",
          "function": "malloc",
          "line": 19
        }
      },
      "malloc.assigns.10": {
        "class": "assigns",
        "description": "Check that return_value___VERIFIER_nondet___CPROVER_bool$2 is assignable",
        "expression": "TRUE",
        "location": {
          "file": "<builtin-library-malloc>",
          "function": "malloc",
          "line": 51
        }
      },
      "malloc.assigns.11": {
        "class": "assigns",
        "description": "Check that record_may_leak is assignable",
        "expression": "TRUE",
        "location": {
          "file": "<builtin-library-malloc>",
          "function": "malloc",
          "line": 51
        }
      },
      "malloc.assigns.12": {
        "class": "assigns",
        "description": "Check that __CPROVER_memory_leak is assignable",
        "expression": "TRUE",
        "location": {
          "file": "<builtin-library-malloc>",
          "function": "malloc",
          "line": 52
        }
      },
      "malloc.assigns.2": {
        "class": "assigns",
        "description": "Check that should_malloc_fail is assignable",
        "expression": "TRUE",
        "location": {
          "file": "<builtin-library-malloc>",
          "function": "malloc",
          "line": 19
        }
      },
      "malloc.assigns.3": {
        "class": "assigns",
        "description": "Check that return_value___VERIFIER_nondet___CPROVER_bool$0 is assignable",
        "expression": "TRUE",
        "location": {
          "file": "<builtin-library-malloc>",
          "function": "malloc",
          "line": 35
        }
      },
      "malloc.assigns.4": {
        "class": "assigns",
        "description": "Check that should_malloc_fail is assignable",
        "expression": "TRUE",
        "location": {
          "file": "<builtin-library-malloc>",
          "function": "malloc",
          "line": 35
        }
      },
      "malloc.assigns.5": {
        "class": "assigns",
        "description": "Check that malloc_value is assignable",
        "expression": "TRUE",
        "location": {
          "file": "<builtin-library-malloc>",
          "function": "malloc",
          "line": 43
        }
      },
      "malloc.assigns.6": {
        "class": "assigns",
        "description": "Check that malloc_res is assignable",
        "expression": "TRUE",
        "location": {
          "file": "<builtin-library-malloc>",
          "function": "malloc",
          "line": 43
        }
      },
      "malloc.assigns.7": {
        "class": "assigns",
        "description": "Check that return_value___VERIFIER_nondet___CPROVER_bool$1 is assignable",
        "expression": "TRUE",
        "location": {
          "file": "<builtin-library-malloc>",
          "function": "malloc",
          "line": 46
        }
      },
      "malloc.assigns.8": {
        "class": "assigns",
        "description": "Check that record_malloc is assignable",
        "expression": "TRUE",
        "location": {
          "file": "<builtin-library-malloc>",
          "function": "malloc",
          "line": 46
        }
      },
      "malloc.assigns.9": {
        "class": "assigns",
        "description": "Check that __CPROVER_malloc_is_new_array is assignable",
        "expression": "TRUE",
        "location": {
          "file": "<builtin-library-malloc>",
          "function": "malloc",
          "line": 47
        }
      },
      "memcmp.overflow.1": {
        "class": "overflow",
        "description": "arithmetic overflow on signed - in (signed int)*tmp_post_sc1 - (signed int)*tmp_post_sc2",
        "expression": "!overflow(\"-\", signed int, (signed int)*tmp_post_sc1, (signed int)*tmp_post_sc2)",
        "location": {
          "file": "<builtin-library-memcmp>",
          "function": "memcmp",
          "line": 27
        }
      },
      "memcmp.pointer_dereference.1": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *tmp_post_sc1",
        "expression": "!(__CPROVER_POINTER_OBJECT(((const unsigned char *)NULL)) == __CPROVER_POINTER_OBJECT(tmp_post_sc1))",
        "location": {
          "file": "<builtin-library-memcmp>",
          "function": "memcmp",
          "line": 27
        }
      },
      "memcmp.pointer_dereference.10": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *tmp_post_sc2",
        "expression": "!(__CPROVER_POINTER_OBJECT(tmp_post_sc2) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcmp>",
          "function": "memcmp",
          "line": 27
        }
      },
      "memcmp.pointer_dereference.11": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *tmp_post_sc2",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(tmp_post_sc2) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(tmp_post_sc2) + 1",
        "location": {
          "file": "<builtin-library-memcmp>",
          "function": "memcmp",
          "line": 27
        }
      },
      "memcmp.pointer_dereference.12": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *tmp_post_sc2",
        "expression": "!(__CPROVER_POINTER_OBJECT(((const unsigned char *)NULL)) == __CPROVER_POINTER_OBJECT(tmp_post_sc2)) || tmp_post_sc2 == ((const unsigned char *)NULL)",
        "location": {
          "file": "<builtin-library-memcmp>",
          "function": "memcmp",
          "line": 27
        }
      },
      "memcmp.pointer_dereference.2": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *tmp_post_sc1",
        "expression": "!IS_INVALID_POINTER(tmp_post_sc1)",
        "location": {
          "file": "<builtin-library-memcmp>",
          "function": "memcmp",
          "line": 27
        }
      },
      "memcmp.pointer_dereference.3": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *tmp_post_sc1",
        "expression": "!(__CPROVER_POINTER_OBJECT(tmp_post_sc1) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcmp>",
          "function": "memcmp",
          "line": 27
        }
      },
      "memcmp.pointer_dereference.4": {
        "class": "pointer dereference",
        "description": "dereference failure: dead object in *tmp_post_sc1",
        "expression": "!(__CPROVER_POINTER_OBJECT(tmp_post_sc1) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcmp>",
          "function": "memcmp",
          "line": 27
        }
      },
      "memcmp.pointer_dereference.5": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer outside object bounds in *tmp_post_sc1",
        "expression": "(unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(tmp_post_sc1) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(tmp_post_sc1) + 1",
        "location": {
          "file": "<builtin-library-memcmp>",
          "function": "memcmp",
          "line": 27
        }
      },
      "memcmp.pointer_dereference.6": {
        "class": "pointer dereference",
        "description": "dereference failure: invalid integer address in *tmp_post_sc1",
        "expression": "!(__CPROVER_POINTER_OBJECT(((const unsigned char *)NULL)) == __CPROVER_POINTER_OBJECT(tmp_post_sc1)) || tmp_post_sc1 == ((const unsigned char *)NULL)",
        "location": {
          "file": "<builtin-library-memcmp>",
          "function": "memcmp",
          "line": 27
        }
      },
      "memcmp.pointer_dereference.7": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer NULL in *tmp_post_sc2",
        "expression": "!(__CPROVER_POINTER_OBJECT(((const unsigned char *)NULL)) == __CPROVER_POINTER_OBJECT(tmp_post_sc2))",
        "location": {
          "file": "<builtin-library-memcmp>",
          "function": "memcmp",
          "line": 27
        }
      },
      "memcmp.pointer_dereference.8": {
        "class": "pointer dereference",
        "description": "dereference failure: pointer invalid in *tmp_post_sc2",
        "expression": "!IS_INVALID_POINTER(tmp_post_sc2)",
        "location": {
          "file": "<builtin-library-memcmp>",
          "function": "memcmp",
          "line": 27
        }
      },
      "memcmp.pointer_dereference.9": {
        "class": "pointer dereference",
        "description": "dereference failure: deallocated dynamic object in *tmp_post_sc2",
        "expression": "!(__CPROVER_POINTER_OBJECT(tmp_post_sc2) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcmp>",
          "function": "memcmp",
          "line": 27
        }
      },
      "memcmp.precondition.1": {
        "class": "precondition",
        "description": "memcmp region 1 readable",
        "expression": "R_OK(s1, n)",
        "location": {
          "file": "<builtin-library-memcmp>",
          "function": "memcmp",
          "line": 19
        }
      },
      "memcmp.precondition.2": {
        "class": "precondition",
        "description": "memcpy region 2 readable",
        "expression": "R_OK(s2, n)",
        "location": {
          "file": "<builtin-library-memcmp>",
          "function": "memcmp",
          "line": 21
        }
      },
      "memcpy.assigns.1": {
        "class": "assigns",
        "description": "Check that src_n$array_size is assignable",
        "expression": "TRUE",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 44
        }
      },
      "memcpy.assigns.2": {
        "class": "assigns",
        "description": "Check that array_copy((const void *)src_n, ...) is allowed by the assigns clause",
        "expression": "__check_array_copy",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 45
        }
      },
      "memcpy.assigns.3": {
        "class": "assigns",
        "description": "Check that array_replace((const void *)(char *)dst, ...) is allowed by the assigns clause",
        "expression": "__check_array_replace",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 46
        }
      },
      "memcpy.pointer.1": {
        "class": "pointer",
        "description": "same object violation in (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> __CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(&(*pChain))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer.10": {
        "class": "pointer",
        "description": "same object violation in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] >= (const char *)(const void *)pbData + (signed long int)cbData",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData) ==> __CPROVER_POINTER_OBJECT(&(*pState)) == __CPROVER_POINTER_OBJECT(pbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer.2": {
        "class": "pointer",
        "description": "same object violation in (const char *)(void *)&pChain->X[(signed long int)16] >= (const char *)(const void *)pbData + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> __CPROVER_POINTER_OBJECT(&(*pChain)) == __CPROVER_POINTER_OBJECT(pbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer.3": {
        "class": "pointer",
        "description": "same object violation in (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> __CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(&(*pChain))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer.4": {
        "class": "pointer",
        "description": "same object violation in (const char *)(void *)&pChain->X[(signed long int)16] >= (const char *)(const void *)pbData + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> __CPROVER_POINTER_OBJECT(&(*pChain)) == __CPROVER_POINTER_OBJECT(pbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer.5": {
        "class": "pointer",
        "description": "same object violation in (const char *)(const void *)&state->chain.X[(signed long int)0] >= (const char *)(void *)pbResult + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0])) ==> __CPROVER_POINTER_OBJECT(&(*state)) == __CPROVER_POINTER_OBJECT(pbResult)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer.6": {
        "class": "pointer",
        "description": "same object violation in (const char *)(void *)pbResult >= (const char *)(const void *)&state->chain.X[(signed long int)0] + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0]) || (const char *)(const void *)&state->chain.X[(signed long int)0] >= (const char *)(void *)pbResult + (signed long int)(size_t)16) ==> __CPROVER_POINTER_OBJECT(pbResult) == __CPROVER_POINTER_OBJECT(&(*state))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer.7": {
        "class": "pointer",
        "description": "same object violation in (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> __CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(&(*pState))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer.8": {
        "class": "pointer",
        "description": "same object violation in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] >= (const char *)(const void *)pbData + (signed long int)(size_t)freeInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer) ==> __CPROVER_POINTER_OBJECT(&(*pState)) == __CPROVER_POINTER_OBJECT(pbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer.9": {
        "class": "pointer",
        "description": "same object violation in (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> __CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(&(*pState))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.1": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbData))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.10": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(&(*pChain)) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain->X) + 16ul + 16ul)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.100": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData) ==> !(__CPROVER_POINTER_OBJECT(&(*pState)) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.101": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData) ==> !(__CPROVER_POINTER_OBJECT(&(*pState)) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.102": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(&(*pState)) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pState->buffer) + (unsigned long int)(signed long int)bytesInBuffer)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.103": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*pState))) || pState->buffer + (signed long int)bytesInBuffer == ((BYTE *)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.104": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(const void *)pbData + (signed long int)cbData",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbData))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.105": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer invalid in (const char *)(const void *)pbData + (signed long int)cbData",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData) ==> !IS_INVALID_POINTER(pbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.106": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(const void *)pbData + (signed long int)cbData",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData) ==> !(__CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.107": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(const void *)pbData + (signed long int)cbData",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData) ==> !(__CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.108": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(const void *)pbData + (signed long int)cbData",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbData) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pbData) + (unsigned long int)(signed long int)cbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.109": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(const void *)pbData + (signed long int)cbData",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbData)) || (const char *)pbData + (signed long int)cbData == ((const char *)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.11": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*pChain))) || (const char *)(pChain->X + 16l) + 16l == ((const char *)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.12": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(void *)&pChain->X[(signed long int)16]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*pChain)))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.13": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(void *)&pChain->X[(signed long int)16]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(&(*pChain)) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.14": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(void *)&pChain->X[(signed long int)16]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(&(*pChain)) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.15": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(void *)&pChain->X[(signed long int)16]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(&(*pChain)) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain->X) + 16ul)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.16": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(void *)&pChain->X[(signed long int)16]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*pChain))) || pChain->X + 16l == ((BYTE *)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.17": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(const void *)pbData + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbData))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.18": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer invalid in (const char *)(const void *)pbData + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !IS_INVALID_POINTER(pbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.19": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(const void *)pbData + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.2": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer invalid in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !IS_INVALID_POINTER(pbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.20": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(const void *)pbData + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.21": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(const void *)pbData + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbData) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pbData) + 16ul)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.22": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(const void *)pbData + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbData)) || (const char *)pbData + 16l == ((const char *)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.23": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbData))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.24": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer invalid in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !IS_INVALID_POINTER(pbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.25": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.26": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.27": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbData) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.28": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbData)) || pbData == ((PCBYTE)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.29": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*pChain)))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.3": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.30": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(&(*pChain)) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.31": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(&(*pChain)) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.32": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(&(*pChain)) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain->X) + 16ul + 16ul)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.33": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*pChain))) || (const char *)(pChain->X + 16l) + 16l == ((const char *)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.34": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(void *)&pChain->X[(signed long int)16]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*pChain)))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.35": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(void *)&pChain->X[(signed long int)16]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(&(*pChain)) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.36": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(void *)&pChain->X[(signed long int)16]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(&(*pChain)) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.37": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(void *)&pChain->X[(signed long int)16]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(&(*pChain)) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pChain->X) + 16ul)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.38": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(void *)&pChain->X[(signed long int)16]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*pChain))) || pChain->X + 16l == ((BYTE *)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.39": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(const void *)pbData + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbData))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.4": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.40": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer invalid in (const char *)(const void *)pbData + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !IS_INVALID_POINTER(pbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.41": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(const void *)pbData + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.42": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(const void *)pbData + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.43": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(const void *)pbData + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbData) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pbData) + 16ul)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.44": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(const void *)pbData + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbData)) || (const char *)pbData + 16l == ((const char *)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.45": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(const void *)&state->chain.X[(signed long int)0]",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0])) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*state)))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.46": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(const void *)&state->chain.X[(signed long int)0]",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0])) ==> !(__CPROVER_POINTER_OBJECT(&(*state)) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.47": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(const void *)&state->chain.X[(signed long int)0]",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0])) ==> !(__CPROVER_POINTER_OBJECT(&(*state)) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.48": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(const void *)&state->chain.X[(signed long int)0]",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0])) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(&(*state)) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(state->chain.X)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.49": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(void *)pbResult + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0])) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbResult))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.5": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbData) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.50": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer invalid in (const char *)(void *)pbResult + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0])) ==> !IS_INVALID_POINTER(pbResult)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.51": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(void *)pbResult + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0])) ==> !(__CPROVER_POINTER_OBJECT(pbResult) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.52": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(void *)pbResult + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0])) ==> !(__CPROVER_POINTER_OBJECT(pbResult) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.53": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(void *)pbResult + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0])) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbResult) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pbResult) + 16ul)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.54": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(void *)pbResult + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0])) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbResult)) || (const char *)pbResult + 16l == ((const char *)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.55": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(void *)pbResult",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0]) || (const char *)(const void *)&state->chain.X[(signed long int)0] >= (const char *)(void *)pbResult + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbResult))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.56": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer invalid in (const char *)(void *)pbResult",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0]) || (const char *)(const void *)&state->chain.X[(signed long int)0] >= (const char *)(void *)pbResult + (signed long int)(size_t)16) ==> !IS_INVALID_POINTER(pbResult)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.57": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(void *)pbResult",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0]) || (const char *)(const void *)&state->chain.X[(signed long int)0] >= (const char *)(void *)pbResult + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(pbResult) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.58": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(void *)pbResult",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0]) || (const char *)(const void *)&state->chain.X[(signed long int)0] >= (const char *)(void *)pbResult + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(pbResult) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.59": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(void *)pbResult",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0]) || (const char *)(const void *)&state->chain.X[(signed long int)0] >= (const char *)(void *)pbResult + (signed long int)(size_t)16) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbResult) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbResult)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.6": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbData)) || pbData == ((PCBYTE)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.60": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(void *)pbResult",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0]) || (const char *)(const void *)&state->chain.X[(signed long int)0] >= (const char *)(void *)pbResult + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbResult)) || pbResult == ((PBYTE)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.61": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(const void *)&state->chain.X[(signed long int)0] + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0]) || (const char *)(const void *)&state->chain.X[(signed long int)0] >= (const char *)(void *)pbResult + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*state)))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.62": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(const void *)&state->chain.X[(signed long int)0] + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0]) || (const char *)(const void *)&state->chain.X[(signed long int)0] >= (const char *)(void *)pbResult + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(&(*state)) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.63": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(const void *)&state->chain.X[(signed long int)0] + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0]) || (const char *)(const void *)&state->chain.X[(signed long int)0] >= (const char *)(void *)pbResult + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(&(*state)) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.64": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(const void *)&state->chain.X[(signed long int)0] + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0]) || (const char *)(const void *)&state->chain.X[(signed long int)0] >= (const char *)(void *)pbResult + (signed long int)(size_t)16) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(&(*state)) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(state->chain.X) + 16ul)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.65": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(const void *)&state->chain.X[(signed long int)0] + (signed long int)(size_t)16",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)pbResult) != __CPROVER_POINTER_OBJECT((const void *)&state->chain.X[(signed long int)0]) || (const char *)(const void *)&state->chain.X[(signed long int)0] >= (const char *)(void *)pbResult + (signed long int)(size_t)16) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*state))) || (const char *)state->chain.X + 16l == ((const char *)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.66": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbData))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.67": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer invalid in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !IS_INVALID_POINTER(pbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.68": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.69": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.7": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*pChain)))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.70": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbData) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.71": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbData)) || pbData == ((PCBYTE)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.72": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*pState)))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.73": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(&(*pState)) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.74": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(&(*pState)) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.75": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(&(*pState)) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pState->buffer) + (unsigned long int)(signed long int)bytesInBuffer + (unsigned long int)(signed long int)(size_t)freeInBuffer)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.76": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*pState))) || (const char *)(pState->buffer + (signed long int)bytesInBuffer) + (signed long int)(size_t)freeInBuffer == ((const char *)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.77": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*pState)))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.78": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer) ==> !(__CPROVER_POINTER_OBJECT(&(*pState)) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.79": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer) ==> !(__CPROVER_POINTER_OBJECT(&(*pState)) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.8": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(&(*pChain)) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.80": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(&(*pState)) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pState->buffer) + (unsigned long int)(signed long int)bytesInBuffer)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.81": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*pState))) || pState->buffer + (signed long int)bytesInBuffer == ((BYTE *)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.82": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(const void *)pbData + (signed long int)(size_t)freeInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbData))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.83": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer invalid in (const char *)(const void *)pbData + (signed long int)(size_t)freeInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer) ==> !IS_INVALID_POINTER(pbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.84": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(const void *)pbData + (signed long int)(size_t)freeInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer) ==> !(__CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.85": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(const void *)pbData + (signed long int)(size_t)freeInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer) ==> !(__CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.86": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(const void *)pbData + (signed long int)(size_t)freeInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbData) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pbData) + (unsigned long int)(signed long int)(size_t)freeInBuffer)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.87": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(const void *)pbData + (signed long int)(size_t)freeInBuffer",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)(size_t)freeInBuffer) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbData)) || (const char *)pbData + (signed long int)(size_t)freeInBuffer == ((const char *)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memcpy.pointer_arithmetic.88": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbData))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.89": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer invalid in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !IS_INVALID_POINTER(pbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.9": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(void *)&pChain->X[(signed long int)16] + (signed long int)(size_t)16",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pChain->X[(signed long int)16]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(&(*pChain)) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.90": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.91": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(pbData) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.92": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(pbData) >= (unsigned __CPROVER_bitvector[65])__CPROVER_POINTER_OFFSET(pbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.93": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(const void *)pbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(pbData)) || pbData == ((PCBYTE)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.94": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*pState)))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.95": {
        "class": "pointer arithmetic",
        "description": "pointer relation: deallocated dynamic object in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(&(*pState)) == __CPROVER_POINTER_OBJECT(__CPROVER_deallocated))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.96": {
        "class": "pointer arithmetic",
        "description": "pointer relation: dead object in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(&(*pState)) == __CPROVER_POINTER_OBJECT(__CPROVER_dead_object))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.97": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer outside object bounds in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> (unsigned __CPROVER_bitvector[65])__CPROVER_OBJECT_SIZE(&(*pState)) >= (unsigned __CPROVER_bitvector[65])(__CPROVER_POINTER_OFFSET(pState->buffer) + (unsigned long int)(signed long int)bytesInBuffer + (unsigned long int)(signed long int)cbData)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.98": {
        "class": "pointer arithmetic",
        "description": "pointer relation: invalid integer address in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData",
        "expression": "TRUE && !(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData)) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*pState))) || (const char *)(pState->buffer + (signed long int)bytesInBuffer) + (signed long int)cbData == ((const char *)NULL)",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 33
        }
      },
      "memcpy.pointer_arithmetic.99": {
        "class": "pointer arithmetic",
        "description": "pointer relation: pointer NULL in (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer]",
        "expression": "!(__CPROVER_POINTER_OBJECT((void *)&pState->buffer[(signed long int)bytesInBuffer]) != __CPROVER_POINTER_OBJECT((const void *)pbData) || (const char *)(const void *)pbData >= (const char *)(void *)&pState->buffer[(signed long int)bytesInBuffer] + (signed long int)cbData) ==> !(__CPROVER_POINTER_OBJECT(((const char *)NULL)) == __CPROVER_POINTER_OBJECT(&(*pState)))",
        "location": {
          "file": "<builtin-library-memcpy>",
          "function": "memcpy",
          "line": 34
        }
      },
      "memset.assigns.1": {
        "class": "assigns",
        "description": "Check that s_n$array_size is assignable",
        "expression": "TRUE",
        "location": {
          "file": "<builtin-library-memset>",
          "function": "memset",
          "line": 36
        }
      },
      "memset.assigns.2": {
        "class": "assigns",
        "description": "Check that array_set((const void *)s_n, ...) is allowed by the assigns clause",
        "expression": "__check_array_set",
        "location": {
          "file": "<builtin-library-memset>",
          "function": "memset",
          "line": 37
        }
      },
      "memset.assigns.3": {
        "class": "assigns",
        "description": "Check that array_replace((const void *)(unsigned char *)s, ...) is allowed by the assigns clause",
        "expression": "__check_array_replace",
        "location": {
          "file": "<builtin-library-memset>",
          "function": "memset",
          "line": 38
        }
      }
    }
  }
}
